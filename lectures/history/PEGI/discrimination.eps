%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (discrimination.eps)
%%CreationDate: (Fri May 29 11:19:24 2009)
%%BoundingBox: 0 0 60 60
%%HiResBoundingBox: 0 0 60 60
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 60 60
userdict begin
DisplayImage
0 0
60 60
12.000000
60 60
1
0
0
128
525254
F0F1F1
48484A
A2A4A6
939496
58585A
9A9B9D
444446
4A4A4C
6A6B6C
505052
464648
4C4C4E
4E4E50
8A8B8D
ECEDED
F8F9F9
1D1A1E
7D7E80
565658
2A292C
3B3A3D
363638
F6F6F6
434245
FDFDFD
C5C6C8
3D3D3F
5E5E60
E5E6E7
343335
CBCCCD
E9E9EA
3E3E40
FAFAFA
D1D2D3
D9DADB
ADAFB0
CACBCC
A5A6A8
818284
DDDEDF
9EA0A2
B1B3B4
D2D3D5
CCCDCE
C8C9CA
87898B
C0C1C2
B9BBBC
9D9EA0
B4B5B7
8D8E90
242225
B8B9BB
959698
B6B7B9
656668
A7A9AB
767779
717274
B0B2B3
ACAEAF
78797A
C4C6C7
5B5B5D
E0E1E2
5A5A5C
555557
222124
D4D5D6
5D5D5F
29272A
211F22
545456
1F1D21
353437
5C5C5E
252427
404042
323134
39383A
302F31
2E2D30
2D2C2F
272629
313033
BFC0C2
FEFEFE
5F6062
A8AAAB
636466
C7C8C9
7C7D7F
BDBFC0
67686A
ABACAE
D5D6D7
E1E2E2
797A7C
606163
FBFBFC
C1C2C4
646567
6F7072
DEDFE0
D3D4D5
E7E7E8
CFD0D2
7F8082
DADBDC
BCBDBF
C4C5C6
616264
D7D8D9
AFB0B2
C3C4C6
F3F4F4
CECFD0
6D6D6F
77787A
868789
8F9192
E2E2E3
D6D7D8
272528
1A171B
FFFFFF
507D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D48
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D487D50357E7E184A184E53214A071B
0002117E7E1E0018164A0B02000C140807117E114B02081E1618140800167E7E7E7E500A
0002550702147E7E7E564E357D14514F434A0044140C474D0A487E7E4F410052144A4D07
081C0814457E140A210847210D1C0B4C470D117E7E1100440C1816062D3E31443B277E7D
7D0A4D0002410516141B0B07357E4B54024D0802085005054400507E7E16134452530505
070A4D1B1E487E450B4C00445208050C572817602E6A7E7D7D020741070243021300497E
7E560005020A41431B4521000A147E7E490A4718214F214D0A0A05157E7E540A431E1547
0002005957772D616E6F117D7D0A0A055135441C0A547E7E1641000C434F4A05150A0D35
117E48080007440543074B024313507E7E110047211E4C0C470708592A027A06603A537D
7D0D1C027E7E4C07497E7E7E144444024D4C1E4347134C7E7E16134A44440B434A520202
544E7E494F070B0544410B35001C43167E7E7E020051357D7D504300147E7E7E7E117E7E
7E1413410B117E070D487E7E7E514D0A0B4D51184105414F7E7E140A05410D0200077E48
524C457E7E354C0C430C077D7D7E211C077E7E07050C0C080C18144108117E11117E3511
7E7E074D0508494B0044507E7E7E181C02021C53540C080A0802447E7E0C4D080047027D
7D7E11164B15122910010101016A7E15441B7E7E7E50441B7E7E110C471B7E7E48557E7E
7E7E490A414A027E77010101010110274A5351071505027D7D7E7E7E59207F7F7F7F7F7F
7F652B6416147E1149520505537E7E554A43507E7E7E540C527E7E540216187A297F7F7F
7F7F7F7F65257E7E7E4F087D7D7E7E111F7F7F7F7F7F7F7F7F7F7F583B7E540D1315164D
00457E7E1600567E7E7E151C0A497E7E7E142D7F7F7F7F7F7F7F7F7F7F7F5B7E7E4B167D
7D7E114F177F7F7F7F7F7F7F7F7F7F2C4E1144444A0B4E074702117E7E4B7E3507085202
1C0B7E7E7E7E3C7F7F7F7F7F7F7F7F7F7F7F2A11117E7E7D7D1E1E1C227F7F7F7F7F7F7F
7F7F7F337E53430C530200530D1C217E7E7E490A054D0B450A47157E7E7E05197F7F7F7F
7F7F7F7F7F7F6611537E7E7D7D001B5F657F7F7F7F7F7F7F7F7F7F734B16024D080A410C
56021E7E7E145041024C0B0B520505527E7E0D177F7F7F7F7F7F7F7F7F7F577E117E457D
7D074F68587F7F7F7F7F7F7F7F7F652F7E521E13051B00430B59357E510C4E020018054D
1B1505517E7E56247F7F7F7F7F7F7F7F7F7F5E7E1107027D7D0B1671657F7F7F7F7F7F7F
7F7F2C140743215005430516533362663212632712081B44411E557E7E1B48637F7F7F7F
7F7F7F7F7F7F577E4C1C4F7D7D00140D587F7F7F7F7F7F7F7F7F62524A0A4E161808507E
4E411D176C387B19571C0205074E7E450241502F7F7F7F7F7F7F7F7F7F7F36111B47187D
7D07114C317F7F7F7F7F7F7F7F7F10210C4A0247217E0C25725C6D157E7E7E002A61041B
7E7E111E41057E257F7F7F7F7F7F7F7F7F0F5B5514000C7D484E7E7E08177F7F7F7F7F7F
7F7F765615474118497E08266B517E7E7E7E7E7E7E681033534C000808411112587F7F7F
7F7F7F7F7F3D7E35511B027D4802557E11297F7F7F7F7F7F7F19287E110B167E7E7E7E2F
377E7E7E7E7E7E7E7E7E66790C050A43080A1E14697F7F7F7F7F7F7F7F3F1E4A43524848
7D0D567E7E607F7F7F7F7F7F7F6B557E7E7E7E491E7E7E2B5F7E7E7E7E7E7E7E7E7E5A77
4F414F004A140555347F7F7F7F7F7F7F101802474F141B7D7D4E7E495400017F7F7F7F7F
7F6B7E557E7E7E0841567E24397E7E7E7E7E7E7E7E7E2706114A4105157E511E2F7F7F7F
7F7F7F7F2711154100050C7D7D7E490C431409587F7F693766277E117E1414164100165C
447E7E7E7E7E7E7E7E7E2A377E504144457E7E49411A5A3D7F7F7F571154110B1C00147D
7D4B514D071607587F7F2D7E7E7E7E110B4305501B00065A457E7E7E7E7E7E7E7E7E4C2E
027E21470C117E7E7E457E3C7F7F7F60114B7E4521497E7D7D0215430011787F7F7F100C
7E7E11161C080221144F03067E7E7E7E7E7E7E7E7E7E4930027E110C084B7E7E4B0D7E31
7F7F7F6C4515117E7E7E4E7D7D214818517E2B7F7F7F7F5A4B7E50151C1816050A485F2D
4E7E7E7E7E7E7E7E7E7E5F70487E7E49117E4C0B4B7E000F7F7F7F7502457E7E7E480B7D
7D7E7E45671A657F7F7F7F58725D4C7E0B430C0D4107143106357E7E7E7E7E7E7E1B5C04
0C557E7E7E5315110525017F7F7F7F7F0F04077E7E7E48487D472A247F7F7F7F7F7F7F7F
7F7F62342145070705004B212C647E7E7E7E7E7E7E03330702457E117E45645E107F7F7F
7F7F7F7F7F7F0F575D084B7D7D1D7F7F7F7F7F7F7F7F7F7F7F7F7F7F200614070A357E7E
2F2B7E7E7E7E7E7E217C397E117E147E09267F7F7F7F7F7F7F7F7F7F7F7F7F7F7F22037D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F49457E4E512174274E7E7E7E21232A357E
7E1B4C39227F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F267D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F597E164A470D0824597E7E7E273A7E7E1114184B5C7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6D11411318
054F38027E7E7E34347E540D43087E617F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F5D7E0B0018430670147E7E7E47235F0002
0B437E2C7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E455D3E2D33007E7E7E7E113F5C2D06670A7E2C7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F3F001A360E
087E7E7E7E7E7E7E7E4971031F5E546C7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6337097E7E7E7E7E7E7E7E7E7E7E7E7E7E
35340D6C7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F12117E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F127E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F407D7D427F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F127E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E467F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F407D
7D6B7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F287E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E6E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F267D35252E404040404040404040
4040404040405C5B7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E032E40404040404040
4040404040404040402E0635507D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D50

end
%%PageTrailer
%%Trailer
%%EOF
