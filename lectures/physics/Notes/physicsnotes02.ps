%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: physicsnotes02.dvi
%%CreationDate: Fri Feb 01 16:57:20 2013
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: CMSS12 CMSS10 CMSS8 CMSSI10 CMMI10 CMSY7 CMSY10 CMSSI8
%%+ CMTT10 CMMI7 CMTT8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\dvips.exe"
%+ physicsnotes02.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.02.01:1657
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 622 2012-01-01 15:36:14Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.09, 2011/10/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep div cvi def
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  XA Shift sub YA Shift sub moveto 
  gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
  Symbol show grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    startAngle rotate Symbol show 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} 
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
    Symbol show 
    grestore
  }
  pathforall 
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 594 2011-10-31 18:13:18Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 622 2012-01-01 15:36:14Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.02, 2012/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 645 2012-02-12 09:09:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.13, 2011/11/21.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-3dplot.pro 0 0
%% $Id: pst-3dplot.pro 467 2011-03-01 21:04:36Z herbert $
%%
%% This is file `pst-3dplot.pro',
%%
%% IMPORTANT NOTICE:
%%
%% Package `pst-3dplot.tex'
%%
%% Herbert Voss <voss _at_ PSTricks.de>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% DESCRIPTION:
%%   `pst-3dplot' is a PSTricks package to draw 3d curves and graphical objects
%%
%%
%% version 0.31 / 2010-02-20  Herbert Voss <hvoss _at_ tug.org>
%% with contributions of Darrell Lamm <darrell.lamm _at_ gtri.gatech.edu<
%%            
%
/tx@3DPlotDict 200 dict def
tx@3DPlotDict begin
%
/printDot { gsave 2 copy 2 0 360 arc fill stroke grestore } def
%
/saveCoor { 
  dzUnit mul /z ED
  dyUnit mul /y ED
  dxUnit mul /x ED
} def
%
/3Dto2D { % true or false on stack
  { RotatePoint } if
  1 { %  dummy loop, will run only 1 time, allows exit 
    coorType 0 le {                                               % the default |
      /x2D x leftHanded not { neg } if Alpha cos mul y Alpha sin mul add def %  /\  co system
      /y2D x leftHanded { neg } if Alpha sin mul y Alpha cos mul add neg Beta sin mul z Beta cos mul add def
      exit } if
    coorType 1 le { 
      /x2D y x Alpha 90 sub sin mul sub def  %  |/_  co system, no shortened x axis
      /y2D z x Alpha 90 sub cos mul sub def 
      exit } if
    coorType 2 le { % coorType |/_ with a 1/sqrt(2) shortend x-axis and 135 degrees 
      /x2D y x 0.5 mul sub def
      /y2D z x 0.5 mul sub def 
      exit } if
    coorType 3 le { % coorType |/_ with a 1/sqrt(2) shortend x-axis and 135 degrees 
      /x2D y x -0.5 mul sub def
      /y2D z x -0.5 mul sub def 
      exit } if
    coorType 4 le { % Normalbild in Trimetrie Skalierung so, dass coorType2
       /x2D x -0.5 mul y 1 mul add def
       /y2D x -0.5 mul y -0.25 mul add z 1 mul add def
       exit } if
  } repeat
} def
/ConvertTo2D { true 3Dto2D } def
/ConvertTo2DWithoutRotating { false 3Dto2D } def
%
/Conv3D2D { /z ED /y ED /x ED ConvertTo2D x2D y2D } def
%
/ConvertToCartesian {
  /latitude exch def
  /longitude exch def
  /Radius exch def
  1 { %  dummy loop, will run only 1 time, allows exit
    SphericalCoorType 0 le {                                               % the default |
     /z { Radius latitude sin mul } def
     /x { Radius longitude cos mul latitude cos mul } def
     /y { Radius longitude sin mul latitude cos mul } def
      exit } if
    SphericalCoorType 2 le {
     /z { Radius longitude cos mul } def
     /x { Radius longitude sin mul latitude cos mul} def
     /y { Radius longitude sin mul latitude sin mul } def
      exit } if
  } repeat
} def
%
/ConvCylToCartesian { % r phi h -> x y z
  3 1 roll			% h r phi
  /Phi ED
  /Radius ED			% h->z on stack
  Radius Phi cos mul exch 	% x z
  Radius Phi sin mul exch	% x y z
} def
%
/SphericalTo2D {
  x y z ConvertToCartesian ConvertTo2D
} def
%
/CylinderTo2D { %  r phi h
  x y z ConvCylToCartesian ConvertTo2D
} def
%
/convertStackTo2D {
  counttomark
  /n ED /n3 n 3 div cvi def
  n3 {
    n -3 roll
    SphericalCoor { ConvertToCartesian } { saveCoor } ifelse
    ConvertTo2D
    x2D xUnit y2D yUnit
    /n n 1 sub def
  } repeat
} def
%
% the angle in the parameter equation for an ellipse is not proportional to the real angle!
% phi=atan(b*tan(angle)/a)+floor(angle/180+0.5)*180
%
/getPhi { % on stack: vecA vecB angle 
  3 dict begin
  /angle exch def /vecB exch def /vecA exch def
  angle cvi 90 mod 0 eq { angle } { vecA angle tan mul vecB atan 
  angle 180 div .5 add floor 180 mul add } ifelse 
  end
} def
%
/RotSet (set ) def
%
/eulerRotation false def
% Matrix multiplication procedure
/matmul {

  /M@tMulDict 20 dict def
  M@tMulDict begin
  /m2 ED
  /m1 ED
  m1 dup length 2 sub 2 getinterval aload pop
  /col1max ED
  /row1max ED
  m2 dup length 2 sub 2 getinterval aload pop
  /col2max ED
  /row2max ED
  /m3 row1max col2max mul 2 add array def
  m3 dup length 2 sub row1max col2max 2 array astore putinterval
  0 1 row1max 1 sub {
   /row ED
   0 1 col2max 1 sub {
    /col ED
    /sum 0 def
    0 1 col1max 1 sub{
    /rowcol ED
    sum
    m1 row col1max mul rowcol add get
    m2 rowcol col2max mul col add get
    mul add 
    /sum ED
    } for
    m3 row col2max mul col add sum put
   } for
  } for
  m3
  end % end of M@tMulDict

} def
%
/SetMQuaternion {

  /MnewTOold 11 array def

  /Qu@ternionDict 30 dict def
  Qu@ternionDict begin

  /normRotVec  xRotVec yRotVec zRotVec 3 array astore VecNorm  def
  normRotVec 0 gt
  {/xRotVecNorm xRotVec normRotVec div def
   /yRotVecNorm yRotVec normRotVec div def
   /zRotVecNorm zRotVec normRotVec div def
   RotAngle}
  {/xRotVecNorm 1 def
   /yRotVecNorm 0 def
   /zRotVecNorm 0 def 
   0} ifelse

  2 div dup
  /q0 exch cos def
      sin dup dup
  /q1 exch xRotVecNorm mul def
  /q2 exch yRotVecNorm mul def
  /q3 exch zRotVecNorm mul def

  /q0q0 q0 q0 mul def
  /q0q1 q0 q1 mul def
  /q0q2 q0 q2 mul def
  /q0q3 q0 q3 mul def

  /q1q1 q1 q1 mul def
  /q1q2 q1 q2 mul def
  /q1q3 q1 q3 mul def

  /q2q2 q2 q2 mul def
  /q2q3 q2 q3 mul def

  /q3q3 q3 q3 mul def

  MnewTOold 0 q0q0 q1q1 add q2q2 sub q3q3 sub put
  MnewTOold 1 q1q2 q0q3 sub 2 mul put
  MnewTOold 2 q1q3 q0q2 add 2 mul put

  MnewTOold 3 q1q2 q0q3 add 2 mul put
  MnewTOold 4 q0q0 q1q1 sub q2q2 add q3q3 sub put
  MnewTOold 5 q2q3 q0q1 sub 2 mul put

  MnewTOold 6 q1q3 q0q2 sub 2 mul put
  MnewTOold 7 q2q3 q0q1 add 2 mul put
  MnewTOold 8 q0q0 q1q1 sub q2q2 sub q3q3 add put

  MnewTOold 9 3 put
  MnewTOold 10 3 put

  end % end of Qu@ternionDict

} def
%
/SetMxyz {
  1.0 0.0 0.0  0.0 1.0 0.0  0.0 0.0 1.0  3 3  11 array astore /MnewTOold ED
  RotSequence cvx exec % Now create a new MnewTOold using xyz, etc.
} def
%
/ConcatMQuaternion {
  MnewTOold % Push onto stack
  SetMQuaternion % Uses [xyz]RotVec and RotAngle to make MnewToOld 
  MnewTOold matmul /MnewTOold ED
} def
%
/ConcatMxyz {
  MnewTOold % Push onto stack
  SetMxyz % Uses RotX, etc. to set MnewTOold 
  MnewTOold matmul /MnewTOold ED
} def
%
/RotatePoint{
  MnewTOold x y z  3 1  5 array astore matmul
  0 3 getinterval aload pop 
  /z ED 
  /y ED 
  /x ED 
} def
%
/makeMoldTOnew {
  /MoldTOnew 11 array def
  MoldTOnew 0 MnewTOold 0 get put
  MoldTOnew 1 MnewTOold 3 get put
  MoldTOnew 2 MnewTOold 6 get put
  MoldTOnew 3 MnewTOold 1 get put
  MoldTOnew 4 MnewTOold 4 get put
  MoldTOnew 5 MnewTOold 7 get put
  MoldTOnew 6 MnewTOold 2 get put
  MoldTOnew 7 MnewTOold 5 get put
  MoldTOnew 8 MnewTOold 8 get put
  MoldTOnew 9               3 put
  MoldTOnew 10              3 put
} def
%
/RotXaxis { 
  eulerRotation 
  {1 0 0}
  {makeMoldTOnew MoldTOnew  1 0 0  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotX def
  ConcatMQuaternion
} def
/RotYaxis { 
  eulerRotation 
  {0 1 0}
  {makeMoldTOnew MoldTOnew  0 1 0  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotY def
  ConcatMQuaternion
} def
/RotZaxis { 
  eulerRotation 
  {0 0 1}
  {makeMoldTOnew MoldTOnew  0 0 1  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotZ def
  ConcatMQuaternion
} def
/xyz { RotXaxis RotYaxis RotZaxis } def
/yxz { RotYaxis RotXaxis RotZaxis } def
/yzx { RotYaxis RotZaxis RotXaxis } def
/xzy { RotXaxis RotZaxis RotYaxis } def
/zxy { RotZaxis RotXaxis RotYaxis } def
/zyx { RotZaxis RotYaxis RotXaxis } def
/quaternion { } def % Null
%
/VecNorm { 0 exch { dup mul add } forall sqrt } def
%
/UnitVec {			% on stack is [a]; returns a vector with [a][a]/|a|=1 
  dup VecNorm /norm ED
  norm 0 lt {/norm 0 def} if
  { norm div } forall 3 array astore } def
%
/AxB {				% on the stack are the two vectors [a][b]
    aload pop /b3 ED /b2 ED /b1 ED
    aload pop /a3 ED /a2 ED /a1 ED
    a2 b3 mul a3 b2 mul sub
    a3 b1 mul a1 b3 mul sub
    a1 b2 mul a2 b1 mul sub
    3 array astore } def
%
/AaddB {			% on the stack are the two vectors [a][b]
    aload pop /b3 ED /b2 ED /b1 ED
    aload pop /a3 ED /a2 ED /a1 ED
    a1 b1 add a2 b2 add a3 b3 add
    3 array astore } def
%
/AmulC {			% on stack is [a] and c; returns [a] mul c
    /factor ED { factor mul } forall 3 array astore } def
%
%
/setColorLight { % expects 7 values on stack C M Y K xL yL zL
% les rayons de lumi�re
  xLight dup mul yLight dup mul zLight dup mul add add sqrt /NormeLight ED
% the color values
  /K ED
  /Yellow ED
  /Magenta ED
  /Cyan ED
} def
%
/facetteSphere {
  newpath
  /Xpoint Rsphere theta cos mul phi cos mul CX add def
  /Ypoint Rsphere theta sin mul phi cos mul CY add def
  /Zpoint Rsphere phi sin mul CZ add def
  Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end moveto
  theta 1 theta increment add {%
    /theta1 ED
    /Xpoint Rsphere theta1 cos mul phi cos mul CX add def
    /Ypoint Rsphere theta1 sin mul phi cos mul CY add def
    /Zpoint Rsphere phi sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end  lineto
  } for
  phi 1 phi increment add {
    /phi1 ED
    /Xpoint Rsphere theta increment add cos mul phi1 cos mul CX add def
    /Ypoint Rsphere theta increment add sin mul phi1 cos mul CY add def
    /Zpoint Rsphere phi1 sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  theta increment add -1 theta {%
    /theta1 ED
    /Xpoint Rsphere theta1 cos mul phi increment add cos mul CX add def
    /Ypoint Rsphere theta1 sin mul phi increment add cos mul CY add def
    /Zpoint Rsphere phi increment add sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  phi increment add -1 phi {
    /phi1 ED
    /Xpoint Rsphere theta cos mul phi1 cos mul CX add def
    /Ypoint Rsphere theta sin mul phi1 cos mul CY add def
    /Zpoint Rsphere phi1 sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  closepath 
} def
%
/MaillageSphere { 
% on stack must be x y z Radius increment C M Y K 
  setColorLight
  /increment ED
  /Rsphere ED
  /CZ ED
  /CY ED
  /CX ED
  /StartTheta 0 def
  /condition { PSfacetteSphere 0 ge } def
  -90 increment 90 increment sub {%
    /phi ED
    StartTheta increment 360 StartTheta add increment sub {%
      /theta ED
      % Centre de la facette
      /Xpoint Rsphere theta increment 2 div add cos mul phi increment 2 div add cos mul CX add def
      /Ypoint Rsphere theta increment 2 div add sin mul phi increment 2 div add cos mul CY add def
      /Zpoint Rsphere phi increment 2 div add sin mul CZ add def
      % normale a la facette
      /nXfacette Xpoint CX sub def
      /nYfacette Ypoint CY sub def
      /nZfacette Zpoint CZ sub def
      % test de visibilite
      /PSfacetteSphere 
        vX nXfacette mul
        vY nYfacette mul add
        vZ nZfacette mul add
      def
      condition {
        gsave
        facetteSphere
        /cosV { 1 xLight nXfacette mul
          yLight nYfacette mul
          zLight nZfacette mul
          add add
          NormeLight
          nXfacette dup mul
          nYfacette dup mul
          nZfacette dup mul
          add add sqrt mul div sub } bind def
        Cyan cosV mul Magenta cosV mul Yellow cosV mul K cosV mul setcmykcolor fill 
	grestore
%	0 setgray
        showgrid { facetteSphere stroke } if
      } if 
    } for
    % /StartTheta StartTheta increment 2 div add def
  } for
} def
%
%---------------------- Cylinder ---------------------------
%
/PlanCoupeCylinder { %
  /TableauxPoints [
    0 1 359 { 
      /phi ED 
      [ Radius phi Height ConvCyl2d ] % on décrit le cercle
    } for
  ] def
  newpath
  TableauxPoints 0 get aload pop moveto
  1 1 359 { TableauxPoints exch get aload pop lineto } for
  closepath
} def
%
/facetteCylinder { % 
    newpath
    Radius phi currentHeight ConvCyl2d moveto
    phi 1 phi dAngle add  { % loop variable on stack
      Radius exch currentHeight ConvCyl2d lineto        
    } for
    phi dAngle add -1 phi { %	fill dHeight
      Radius exch currentHeight dHeight add ConvCyl2d lineto 
    } for
    closepath
  } def % facette
%
/MaillageCylinder { % on stack true or false for saving values
    { setColorLight  % expects 4 values on stack C M Y K
      /dHeight ED /dAngle ED /Height ED /Radius ED
      /CZ ED /CY ED /CX ED } if
%     
    0 dHeight Height dHeight sub {
      /currentHeight ED
      0 dAngle 360 dAngle sub {
        /phi ED
% Normal vector of the center
        /nXfacetteCylinder Radius phi dAngle 2 div add cos mul CX add def 
        /nYfacetteCylinder Radius phi dAngle 2 div add sin mul CY add def 
        /nZfacetteCylinder currentHeight dHeight 2 div add CZ add def 
        /NormeN 
          nXfacetteCylinder dup mul
          nYfacetteCylinder dup mul
          nZfacetteCylinder dup mul
          add add sqrt def
        NormeN 0 eq { /NormeN 1e-10 def } if
% test de visibilité
       /PSfacetteCylinder 
    	    vX nXfacetteCylinder mul
            vY nYfacetteCylinder mul add
            vZ nZfacetteCylinder mul add def
       condition {
         facetteCylinder
         /cosV 
	   1 xLight nXfacetteCylinder mul
           yLight nYfacetteCylinder mul
           zLight nZfacetteCylinder mul
           add add
	   NormeLight NormeN mul div sub def
         Cyan Magenta Yellow K
         cosV mul 4 1 roll cosV mul 4 1 roll 
	 cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
          showgrid { 
            0 setgray
            facetteCylinder % drawing the segments
            stroke } if
       } if
     } for
    } for
} def
%
%------------------------ Cylinder type II -----------------------
%
/MoveTo { Conv3D2D moveto } def
/LineTo { Conv3D2D lineto } def

/IIIDEllipse { % x y z rA rB startAngle endAngle Wedge
  /dAngle 1 def
  /isWedge ED
  /endAngle ED
  /startAngle ED
  /radiusB ED
  /radiusA ED
  startAngle cos radiusA mul startAngle sin radiusB mul 0 
  isWedge { 0 0 moveto LineTo }{ MoveTo } ifelse
  /Angle startAngle def
  startAngle dAngle endAngle {
    /Angle ED
    Angle cos radiusA mul Angle sin radiusB mul 0 LineTo  
  } for
  isWedge { 0 0 lineto } if
} def

/IIIDCircle { % x y z r startAngle endAngle Wedge
  7 3 roll % startAngle endAngle Wedge x y z r
  dup      % startAngle endAngle Wedge x y z r r
  8 -3 roll
  IIIDEllipse 
} def

/IIIDWedge { % x y z r startAngle endAngle
  true IIIDCircle
} def

/IIIDCylinder {% x y z r h start end wedge
  /isWedge ED
  /increment ED
  /endAngle ED
  /startAngle ED
  /height ED
  /radius ED
  startAngle increment endAngle {
    /Angle ED
    radius Angle 0 ConvCylToCartesian MoveTo  
    radius Angle height ConvCylToCartesian LineTo  
  } for
  stroke
} def
%
%---------------------- Box ---------------------------
%
/PlanCoupeBox { % x y z
  /TableauxPoints [
      [ CX CY CZ Height add ConvBox2d ] % top or bottom
      [ CX CY Depth add CZ Height add ConvBox2d ]
      [ CX Width add CY Depth add CZ Height add ConvBox2d ] 
      [ CX Width add CY CZ Height add ConvBox2d ] 
      [ CX CY CZ Height add ConvBox2d ] % bottom
    ] def
    newpath
    TableauxPoints 0 get aload pop moveto
    0 1 3 {
      TableauxPoints exch get aload pop
      lineto } for
    closepath
} def
%
/facetteBox { % 
    newpath
    dup
    1 eq { % back
      CX CY CZ ConvBox2d moveto
      CX CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ ConvBox2d lineto
      CX CY CZ ConvBox2d lineto
    } if
    dup
    2 eq { % right
      CX CY CZ ConvBox2d moveto
      CX CY CZ Height add ConvBox2d lineto
      CX CY Depth add CZ Height add ConvBox2d lineto
      CX CY Depth add CZ ConvBox2d lineto
      CX CY CZ ConvBox2d lineto
    } if
    dup
    3 eq { % left
      CX Width add CY CZ ConvBox2d moveto
      CX Width add CY Depth add CZ ConvBox2d lineto
      CX Width add CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ ConvBox2d lineto
    } if
    4 eq { % front
      CX CY Depth add CZ ConvBox2d moveto
      CX CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY Depth add CZ ConvBox2d lineto
      CX CY Depth add CZ ConvBox2d lineto
    } if
    closepath
  } def % facette
%
/TestPlane { % on stack x y z of the plane center and # of plane
  /nZfacetteBox ED /nYfacetteBox ED /nXfacetteBox ED
  /Plane ED
  /NormeN 
    nXfacetteBox dup mul
    nYfacetteBox dup mul
    nZfacetteBox dup mul
    add add sqrt def
  NormeN 0 eq { /NormeN 1e-10 def } if
% test de visibilite
  /PSfacetteBox 
    vX nXfacetteBox mul
    vY nYfacetteBox mul add
    vZ nZfacetteBox mul add def
  condition {
    Plane facetteBox
         /cosV 
	   1 xLight nXfacetteBox mul
           yLight nYfacetteBox mul
           zLight nZfacetteBox mul
           add add
	   NormeLight NormeN mul div sub def
         Cyan Magenta Yellow K
         cosV mul 4 1 roll cosV mul 4 1 roll 
	 cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
         0 setgray
         Plane facetteBox % drawing the segments
         stroke
       } if
} def
%
/MaillageBox { % on stack true or false for saving values
    { setColorLight  % expects 4 values on stack C M Y K 
      /Depth ED /Height ED /Width ED
      /CZ ED /CY ED /CX ED } if
%
% Normal vector of the box center
  /PlaneSet [
    [ Width 2 div CX add 
      CY 
      Height 2 div CZ add ] % normal back
    [ CX 
      Depth 2 div CY add 
      Height 2 div CZ add ] % normal right
    [ Width CX add 
      Depth 2 div CY add 
      Height 2 div CZ add ] % normal left
    [ Width 2 div CX add 
      Depth CY add 
      Height 2 div CZ add ] % normal front
  ] def
  PlaneSequence length 0 eq { % user defined?
    Alpha abs cvi 360 mod /iAlpha ED
    iAlpha 90 lt { [ 1 2 3 4 ]  
      }{ iAlpha 180 lt { [ 2 4 1 3 ]  
        }{ iAlpha 270 lt { [ 3 4 1 2 ] }{ [ 3 1 4 2] } ifelse } ifelse } ifelse 
  }{ PlaneSequence } ifelse 
  { dup 1 sub PlaneSet exch get aload pop TestPlane } forall
} def
%
%--------------------------- Paraboloid -----------------------------
/PlanCoupeParaboloid {
    /Z height store
    /V {Z sqrt} bind def
    /TableauxPoints [
      0 1 359 { 
        /U ED [ U U Z V calculate2DPoint ] % on decrit le cercle
      } for
    ] def
    newpath
    TableauxPoints 0 get aload pop moveto
    0 1 359 {
      /compteur ED
      TableauxPoints compteur get aload pop
      lineto } for
    closepath
} def
%
/facetteParaboloid{
    newpath
    U U Z V calculate2DPoint moveto
    U 1 U increment add  {%
      /U1 ED
      U1 U1 Z V calculate2DPoint lineto
    } for
    Z pas10 Z pas add pas10 add{
      /Z1 ED
      /V {Z1 sqrt} bind def
      U1 U1 Z1 V calculate2DPoint lineto
    } for
    U increment add -1 U {%
      /U2 ED
      U2 U2 Z pas add V calculate2DPoint lineto
    } for
    Z pas add pas10 sub pas10 neg Z pas10 sub {
      /Z2 ED
      /V Z2 abs sqrt def
      U U Z2 V calculate2DPoint lineto
    } for
    closepath
} def % facette
%
/MaillageParaboloid {
  % on stack true or false for saving values
    { setColorLight  % expects 7 values on stack C M Y K xL yL zL 
%      /CZ ED /CY ED /CX ED 
    } if    
    0 pas height pas sub {%
      /Z ED
      /V Z sqrt def
      0 increment 360 increment sub {%
        /U ED
% Centre de la facette
        /Ucentre U increment 2 div add def
        /Vcentre Z pas 2 div add sqrt def
% normale à la facette
        /nXfacetteParaboloid 2 Vcentre dup mul mul Ucentre cos mul radius mul def
        /nYfacetteParaboloid 2 Vcentre dup mul mul Ucentre sin mul radius mul def
        /nZfacetteParaboloid Vcentre neg radius dup mul mul def
        /NormeN {
          nXfacetteParaboloid dup mul
          nYfacetteParaboloid dup mul
          nZfacetteParaboloid dup mul
          add add sqrt} bind def
        NormeN 0 eq {/NormeN 1e-10 def} if
% test de visibilit�
       /PSfacetteParaboloid vX nXfacetteParaboloid mul
                  vY nYfacetteParaboloid mul add
                  vZ nZfacetteParaboloid mul add def
       condition {
         facetteParaboloid
         /cosV 1 xLight nXfacetteParaboloid mul
           yLight nYfacetteParaboloid mul
           zLight nZfacetteParaboloid mul
           add add
           NormeLight
           NormeN mul div sub def
         Cyan Magenta Yellow K  
         cosV mul 4 1 roll cosV mul 4 1 roll cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
         showgrid {
           0 setgray
           facetteParaboloid
           stroke } if
       } if
     } for
    } for
} def
%
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
% u -> e_u with |e_u|=1 
/vector-unit { 1 dict begin
  dup vector-length 1 exch div 
  vector-scale
  end 
} def
%
% u v -> u+v
/vector-add { 1 dict begin
  /v exch def
  [ exch
  0 	     	% u i
  exch { 	% i u[i]
    v 		% i u[i] v
    2 index get add 	% i u[i]+v[i]
    exch 1 add	% i
  } forall
  pop
  ]
  end 
} def
%
% u v -> u-v
/vector-sub { 1 dict begin
  /v exch def
  [ exch
  0 	     	% u i
  exch {	% i u[i]
    v 		% i u[i] v
    2 index get sub 	% i u[i]+v[i]
    exch 1 add	% i
  } forall
  pop
  ]
end } def
%
% [v] c -> [c.v]
/vector-scale { 1 dict begin
  /c exch def
  [ exch
  { 		% s i u[i]
    c mul	% s i u[i] v 
  } forall
  ]
  end } def
%
%
% [u] [v] -> [u x v]
/vector-prod { %% x1 y1 z1 x2 y2 z2
6 dict begin
  aload pop 
  /zp exch def /yp exch def /xp exch def
  aload pop 
  /z exch def /y exch def /x exch def
  [ y zp mul z yp mul sub
   z xp mul x zp mul sub
   x yp mul y xp mul sub ]
end
} def
%
% [u] [v] -> u.v
/vector-mul { %% x1 y1 z1 x2 y2 z2
6 dict begin
  aload pop 
  /zp exch def /yp exch def /xp exch def
  aload pop 
  /z exch def /y exch def /x exch def
  x xp mul y yp mul add z zp mul add
end
} def
%
% [x y z ... ] -> r
% watch out for overflow
/vector-length { 1 dict begin
dup
% find maximum entry
/max 0 def
{ % max 
  abs dup max gt {
    % if abs gt max
    /max exch def
  } {
    pop
  } ifelse
} forall
max 0 ne {
  0 exch 
  {  % 0 v[i]
    max div dup mul add
  } forall
  sqrt
  max mul
} {
  pop 0
} ifelse
end } def
%
end % tx@3DPlotDict
%

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def
 
@fedspecial end
%%BeginFont: CMTT8
%!PS-AdobeFont-1.0: CMTT8 003.002
%%Title: CMTT8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT8 known{/CMTT8 findfont dup/UniqueID known{dup
/UniqueID get 5000830 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT8 def
/FontBBox {-5 -232 545 699 }readonly def
/UniqueID 5000830 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT8.) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D06E82116C79486D8
C5C32DADDFCB2CBD26FE85FFCB176AA09FBE325434B8B9D358B7C180AEC54F8D
24A1AB4D5EE5375B963A221F060453E01768F0A398352CB2C76E6E70BA017570
BE1C3D3A86E803B10B506FD9DB49DF5CC7BE17133234D7BE9230BE8B7481B357
08595FAE04D04B14C633C52E303B06EDEEF7CDDF20F34D7F08D991DFE2C4261F
298E0A818EBFF29D3B29D1D0CE2F071B49B0622F65F936F6C1D4C6AA2860E56C
9140A4FA23BA31888345142DBFA79825662511437347767D4A13A976FCF67EA6
7882D7B391B37FC1E22787E484D19BB252C4D73AA3D73EFA5C6341CF6F127033
2B91079B5FF8A164666CCC65D0002EF7E374098745C84E3037324B4248C5385C
FCF0539F8C04CBC52404BDC6ABD1474617D06377A69F4851838F462E82A86BC6
F8DB2E740B5270AECB0B922D4493A75422349138B539B6067C040F3007F04191
CB545ACC01B4F28AF811266260FEEC04057287BB5C26C077946DDF23322FD99F
2B3DFFB62AB8BF12000AA81ADAA6A064F9C34D5F36CB7F66A5EEB7B494FA1AAE
32B380163AEE08F5BD270FAAD8DAF0CC5B6979B8D4FB6AD723E011DCFE119092
D1025BB62280B745BB0FB140E82325F1FDFC029100F922BF206E5527B7D8F60C
3F3E3AE2184CB954391D10A1618FA0940F12159167494E29A46125CB911B19C4
97B4DC76FF53B7F79E380D7375FAB6C30A467E02E48BA73403D3900FBB440C9E
951C081C8D5E04DC0C8E1BC7D552075CC360B7D1007367C655069324713715BF
F8182AEB6F401A1F029FB3962BB3A0B2775979FDFFD834D5559EE20CF54D789D
41AAE2A22A06E509E4E648FD33710B58A83FBC8DB8D6544577E03B186F0576A1
0C1F1FDE425A0AA5724986D953945FD3ADC0C170FBDD241BAC988D65CA8FFD0B
B013EB27813C9B3740FE2E9D8D81FEDAD1A95CC38494DCD832CC92797432F3B2
4CBCF51F4C14C18B1E5146F691604D4799419A851AF73C1978E6ADEA42A238CF
1150B173A01BBCE289A295CFD5C2D2ABD635DA7FFE17B2448230C4611B33767D
290398B07A09A94DBAE6080FC251D0FC54A5030FAB4B341BEDC1EADCE7ADE89F
C285EC1BB6E19BE9B1E902D8F01E5ABE8CB4723E06A2B40E883572A5A4E3B12D
6C769FF65FC384AF347BA94F84C57F6D0482746EB2FBB43B6CB2B80C7E0E97AE
0B584D9D89F85A47EEE12C2E333311F4DDF88B797B82AB1E4645EB7D127177D6
4C928AB142543CFA1331FA7351D617CC625E6008320AA3652552C3C9F1DAC884
AE319966698AC821BE0D84FFCF440D4288ABD5FC51F32C990675932BCAFC302B
E656E4E968204B3BAAD1969892C75EDB8B9B0D8D8476640CC32B48F97978DC0F
74A30C6B5039B9066D63E0F41D66E0D67563C16086E3FC86164B633CB2F40606
96965EC33B5AFD77B886178C1F6C6035EF9BE4B93F14B6FE0ADE83EA5C854A52
961C7C2FA563FDC006DD6544A1BAF6CDD4C50D562850918E1B40142FACF24AD5
98A7D3A42D0D06F3B6E2D10AE64707BEC4A952A1DF7A07D0F452493E06DD6773
7DDD4E7DE6B558F570A89E9FFA2DB4113C1257FD288AE692A33E4B57126CC9F5
085A1771EAE0D6C54563806CD472C65EFC94DDD7A545A4496B5648C4764F8EDA
4F7AFFCC27BA977360CD3B4531E19110DE5398B457DF57C3D6A56B48CB28C30D
89EB9EAAA955BEBE4A8BF54634CC7A0E9D9320C77A68B45A4DDFCADA5B1906C5
A5DF5098D769B15E302C8A683B92364BE291BE53C21B56D8A964B53A6F8037A7
F46C573F7E61E25359F05C8506F70B99F210D6631FB333FA1CE02B733E18FF11
1364FCD3163704CD9869C406C75E625211CC8247F8C2975AE0477AE1BF316EFA
3206CCF278FD9E9F3281E08E56B54D64063847180B6DCA8312DA0F24C007D5BF
3948E679D95FA5D1B2C311E68F4CC7EA6E1A0B4048CFC69D929CF298F9874F04
EA36BF47D733C621CE0ED0A342C2830411A299388FB0CA2FAABD1E6C4B0A7353
0B27D7268F7931D1B93F547C65DDF6A7E2C8BD1454C465E0C3707A5DBDB9910A
0D87B638C5B191EB96BDD746F72BD6E7FC23120194B8BAB16F759B28432489FE
EA4664AD2CDC10A5AADA6A534826B68FCF14D5DAA2B480C66AABEEE25410069A
857388686D3FA35505AE3A0FE943D041DFB83826724BC36BF2F4AA3B9759BDFB
91064660EE1FCED0B2D2FCC8B7B7EC002CA2D3F0C743004E23A6548F911A1877
965B93575F192F04A8E0F8DCC7737C6AD1D92FD96B367C35B3EC855291E55985
751C1743A3D352C2C89BD144782AD509410C91CD47C2757772C2EF7D00D54D6D
C69F7430490CFC94C9987A9413928366EDFFB31E1C0DFE2AE191DCB053DCCD66
2B42B2C801556D80020E44294A4663F5DE5EC632645144C8EB89B6B729609A97
0A14DF803EB0C6AE5896EC4D6415AECB740F16F054CA38A94BEAF1D84F1EFFC9
D473730F34772E2014373BEA650858F53C38CC407DBC3FA7E042FF54D98104BA
D37E9974C44D24F7DED5DFC30B37F92E05C19A896203E5983FD7EFCE1C04BBB9
75547047E751B9872F384A0E4A8F1FE5B1DC7832BC4CE3309AE6F5B0B975E304
2D0D1F676404660BFF256714F85131D6F8F23FCCC9E1AF73203B2AC8D33B9958
7879D86C4893709105E955775B715F75443A882CEB03EAB8CA5A0C67F7540C6E
E69EDA08C08B69469259137A6B367D5EF495696B11A109B79ACBB3B342FE05A2
F9818EC7BCA23D5FCDEACB6F3493A51637173C5550C36480D8DE134E7567B90A
C13D4DB822E07E886EA4572E3FF6DA27C85407F0296EEA2BB2E370A5AD38D8E7
EA2211B6F677BA2B4C7455CCE6255A99DC56D7AEB5BF8F99D6B18599D954AF9B
2FA166473A7F15D4054042C150A541C1E32247FCFF2C62954561278CD80C18F1
0AFC9B93A51FABE5546CF5A30670948FBB5D430CEF5E0059AA30616DEEB29ACE
B0AFCA93B6DA222162B1FD44DD97FB602D6054C609F16086BEDFC6083A30D796
0BC09AE98C2C0CD871D6A29BD98AF84385679930DA1EF98756722069D13CBD58
4450974FC1AD1D4635C2F3E32EB7056964FD647E13E408BFCCE4F29E1ABFA78D
8A559962BD2B91F85B16EFFD7953E6CABFD972CDB876D9ED512D024828F35A7C
BEC8ED8C798DE2721DBF8289B5A306199B6B7FE61552B26410A0B6A847B11298
A281FEBF93E227DBC2C8AAFE56F08C6AB3F15DF83E0185CBDC1A9E5B92C0E3B6
6ABA9A2AFC8633E4DCB10C7C4136E28D79684446CB1551171CA4E1ED03AB23FD
E32DA8B52186E85684B63A352E5EB13E4D5E553E34F7E24AF8336A1BEAC01672
1381D4B406F64DD69D19A173C4509D134969A2A0485D0FC02C1DC1ED5CE4DFA9
CAE76771D423C93779946575B6694960BCF40B6F1CE6D0BE30B1B00C3C8B3B10
DAF8D287BB3057967781640BF8DCFF7C254F6B774C04A180E98EC109937962C7
F2337C36F3A0B48DE67B7CC93E4617BDD0382F8859A4E6CB45BA7E9A67F16177
39DFFB291A6D6F45277BF9DB9E758B1E868A35144E472802A8B0AD44894EF934
D46C1C36F921418627013277AFD93F2A8883239A0746989DC2AF664319DD955D
69B8D4ED1AF1E082405D32012D9BF703D579B42769179BFDD2F761231ABF023E
4D903BDA2412F79780690190D2E829EABEF5831B783D3DA009FF384A675FB351
003DC40E2D461C1906E7CE96546D1836279E30A2CE1BE1D960C2E40CEB15FB6B
E07061FC7510461A4362A954263F48639430F673B9702A38A59B4AD5B50F7FD4
19BB82A341855D7E348841526B25CF5F694D56DFB53B5E7FC519FCB674F0F5E7
ADAE3E0356C7D6AB6BE4CC5775199A50FD1679DA948EBD235658F48893DAD6DB
332CDD926F00C4DD021B8276CE89775A2EC95938F5D33554F6B040194E056538
1B4360C132923CC9E10242246E9CAF5A08C224E3C5982C2A2AE06CFD9A8EFBAD
92E828774227955D6BC5D84C99BA8BB73D61CB164D7EE0F2A266DD56B5452DEE
E1B0C0899130B97257CD51212D4B6503ADF9A6C05BE34995AC650973C51E10E7
B01872C007D3680C5FF7B0297E903896EF0621384D23E04B0800EDB068F702E2
D93178F4264304886A79F68A7BB4A8FB43D22DC8E65937EEE5A7C8AC261D9DB2
9367F9774E75BA84F4A5E02CC80263FD847084845ADB7EEB0E23C3B08085895B
C6B879ADCB4DAB66228556A03DDF0BBEAA28E8850F6EBD368FAC56B595BCF8D6
ECBF368628F027EB71B7C73A3A194B7E410E326D8B7F9F887CE5E33974C822D3
395AD72E2375317B727C91342BF66F894952849FC12EE7BEA2D8808B4FB82199
6F46696204F5349008787430F64AE1C9401C55EE01D60BB9EFCB05EC0F96F80B
7C309BB9935C154706F19FD7DC7970E4016C42485387E9168CD6B0951F1BCDB8
0474D6D75877347F6B461D0CCB7C33EE521997DB09D0174BDE4865DD54540286
D65FEC264AC27DD24D73B397EF17233550581A1E121A42EB6057E246B891B8BE
ECA15AD560125804732D6849E3D3FBD7C8EFD65A1C6E202F9322589ED93BFD95
7E1A9367E3E59F889C40C6BBA4EC668C06AEF092BC968D087FFECC9F8EC16C51
AD771A55097F53FA721F68399C39B7D50F27568C3074806EE75574F1C79CECE5
F75742ED3F028CFF64CE23440CBF088247F4D9062581BAE1243C3112616AB744
D8810CB1AC4987E756FE53F9F2E805E0815CCAD4D5B5314501D52CE7B7BC8EFA
6DEF9BC50AD354585777016007F962BE25C3BD2C67954B4D20CDBA333ACCEF05
76B46A021E20ADD2580FA500B302521CB592A6DF4909C700154DE1451DA5E3B0
CFB32125032FA602CB254FB4E918B0B4046BF1A0D92A533A322AECF7DC716EC1
4279D1FB80B5D1F0BE9C1DD514BE73C7C3CB3DC3291EB53ACF51380269D5FFDB
447B7CBCD9F2C2FCE9A1DBCB05CE91D59F08A4FCA33AA7438B750A7C0B3985DE
9E3A0CFF571CA33A97B22C7BAA4929D4FADDDB585650003DC670F9466F3165D7
F289508AD7D5A36513FDCE1EA2B0D4A78C212642FB00E16EF0E8A515D509B122
BD4B861E1BF67A1208953AD3909299033CC65C8D314AD38171E362FA4CBF49D6
31D13A802CB7B617D13409A21183425E031415F3A30D23BFF3A77548D7FB856E
947060F86F3BF27174A0989A06DCCF7D94C9D3AA1F8F4ACC32DF0921D43BCD0C
20BCCF8346D4F9FFB28594160601EDF261A1D964D27DD825D39DE64A40F34844
9C01E85149F5619CCD73FA0B1DCCABBCA421B31E1C20D0219562E582FA9913EF
06011862AF4DBCBB21C7E02DE1C3F2EA1613C3896D3B4E97050D0EACB5C79230
3FF55625D99055CC676A520C7F04796A56D7F8B9AD16007EC978D0B0AD771B98
842D9E4EA30277FA0478D311A24F708E52D03C4D855F8DBD8CE5754F34F19AE1
FDB66CB279775696269FB0DD7050A78FBA9A1F69253A596097F9A785607F67A6
6E24A7A7A19F5EDE68D38319949E30D784B0CFB2C480A183AED6463D8DB48C1A
125F5FA55D632BD457D3FC74943177AA6225F28179F6F2FEA454C2C9AAD73C74
6F5D8934DC031370CEC2DA1E416B7414CB8D216394F02B3309D99AAF768DF151
55B85165A8437D0ACCE3D89957A5BB4747129D3D88F868B9265ABDCA6575BD0D
B903B72E2D413D5674A39D345ED55C695BAE3B76EC8CCEBA71CD62C450927926
A19E333891689066763B800FFBD19078766556ACA88EDA6840E04D370CBB28D1
14E3AE4527BC54D4C2B0B97015AFA59972A87B4357CAAA73F4D4C084E061A2EC
D766C5C50D9AF7995E3F55F168151743DBEF55165815487AB6197B3085829111
7253E2D0C0EB916F4E27866DD09BADD3963D180EF18D90A8570E6B1E482C8A21
8F28D8DB40F92C9C12566D6EE64E517BE99CDB194AFFCB71A990D81A57334284
A8BD416F411C7D106019311362258F07182CABBD32BC4F0BEE94C5A1D639555B
1E0405BE40D91DCDE9EE480F3BC72DFBD2F8576706C70E1C4584107819BCFEB6
B3E1406A9E8A98BE06296A1BBCA4D8DAEA5399371532480797E5C692140CF3C5
38FD6CF79386202208FB352AF9CC29A487E8A1BC437075CF7878FB3E479D5D89
BFCC054DE34D4BF12323F8B94BE73C54FBBADE936EF8CAEB67E408BC607EA287
B7EB63825FAA22357EA597C371D18574F36B4FA5FE714030A6093B4FC2609B8F
18D9404487EE87E322FAE131E70004FD5D378E7C7961340E395A7F3D603B410D
BE91615DC4757E09B139378994E96FB88CAE22E77B40FD880A438FFF3B8AC6DE
FB264942DC12039D3E75595E97DA40F51B42E074FD09A326FBB4091521900024
552E524ADA92BFB109C2F96F5A8D29EE9128831B8818C221E1E20478D43CCDC6
0AE6054828F8D35980A2516A87DD4F8FBABB4CFD9D610697937A67B62E8AD53B
40738ACCD2E8E9190964708F930B55D132757E6B835D023EECE73B7249B65481
579B21AB20883A8D5D962071AFD22784D8AAE791E68A7CE9F35A1BDD09D66F34
71B8682B8387A7046E9EB8808DE5261444F202820A1A341DE090B4ED948842AC
3D65F83FD171077B0486DE94390E498D27E35A90ABACF10319DBEDACB2ED7458
E9874290A6DDABAD0570FEA0041689EF06C26E984389AD0361CCA4BF4C45E9D6
66E1B05585DD84408EEC48303897447429D5DEC6727F347EA15FB9654F2890C1
9A3F911490DAB6AFAC1A8E36D8310D179C24AEEFD70016D15EFC3D925A405715
59B10E25CA85063323650384A343FC3D95EF8314A71280DE85252BB133CB7896
A019B80736E27478919A707976498D94FF9630820948CEAE46590B1054F04138
BC4E4173B4AB2C0E5F7B67F1459F18598E3C15BA627DD7CF84D59EBBB59973A9
8ED0A095BBC136D6F31057627A57B4AF6AE5F8E8DAFBE155380A0C2D44115B60
F032311BBADFEA9ED858B942561AD1311EE8CF62C2F82EB8632A0553AC27AD62
E83340C9D0CF3DB8704FB2BCC8DE8F74C37AD19C2409C61459C65C4E14C695C7
68C2AA0C9AF04166E268517F32F8AE26D75D220150592AC9626E52FBE5B4AACC
3F6F51263217A933C8F44630A95D78F869810E2CD752E7CDA32F5C0EEB8B9CB2
045320D3AEB5E0058592047BA245492A5FBE25A909952062C4DCEC7BC279BBED
9C07ABBF585196146C9E369D2510685974C0F8893BD18A87E1062F73E9FB430D
F448FA00ACD792DFD3CAFD2975AE196B0D80F8A3DA12EBEC861E420B2331A395
623DFC6919ECFA96AB9127419F5F659208157926E2760C253E9AD40B28D1C4C0
877FE118E7F9C01938A334829BD7B88976DE2B7003A1C2476E3B5FEFD45867F2
A0E38FB00CF4DA2DDEB5A336DD03D94AD8D6D2EB1FAB3366B212A2BC3E168F3B
039D71728C18EE17FB747C97E65FC933678A95772EECCCCD10F7FDD435617BF7
1D9D209EB3017996D77AF5EA51A57DFDDD383C2F8AF0A141E4303948723068F3
6234AD1E3D62AE6C040116CD3237ED465E8A2B66DCB6D3D1C71C45CB7B758713
9F4BE2EAD30EB90318EC2AD3B43318C4BFC5F5C4D1CB2F25B07E2AB5798D8D4E
845DF2561269816EF5F82F1C38E44FBBF9AE93AE4E6C7AF18798A9DB3553BA6C
CA4FE4B1B8A37F5FE90466BE360DCEB5E4252EBD2014C30B38A44DB809556388
F9FA450448D853345830884D8F10FECD302C0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS8
%!PS-AdobeFont-1.0: CMSS8 003.002
%%Title: CMSS8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS8 known{/CMSS8 findfont dup/UniqueID known{dup
/UniqueID get 5000801 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS8 def
/FontBBox {-65 -250 1062 761 }readonly def
/UniqueID 5000801 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS8.) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 85 /U put
dup 87 /W put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C6258F0D99DCD775
734480114DD0CD2931DC18782C4CCB90B6906CE08BF4CAEC2D4283CD44730A2C
28919598227F98FC5524B0CC92540E349C5B190DF5F2317AE46FFB97221BDFA5
114C21D5E8FB0D1C298EDFF8836AD72A9B2AA132F52DD5D3F30427563C97CC46
D241B7024B4CD9F1E0037FFABCC88D8CCFDF3BC6EED778074F9590733CD147B2
5B68387E0F19E6A81961077BB7640A3C0E27ADD72556CF84ECD981ECCB64184C
EAB8BD9B96A873D80E3E0D5B4F5925983C80EBC3A8A12FBC452582A0B37D3C42
4DFD22E9BADDCD2E69644AA271EECF366D63FCC29522FD72D6C1EFDB3597E866
61443179872395E99024F152F6D6A4FD71BF1C7383BC1CC27AFD2DE3DAEFC06B
6BA837BBEBD0BE09F6AEA31A83B1B45255DFD6FF33362AF8BCABEBB0D944B3FA
B85FFBA0B370B9035460905432EE87395E518B4B670246FAFD535774467C059F
DC30EA01C95EFBA4ABB41711818E23D7E69D32BD63243A6D98666BD46E234155
BD6ABC76F551C31B6CE2E52323A9DAD5C003FB116AC8A82B46ACFC45EECCCAA9
E12C2C8E3CEEFD98D49ECFB824E8677BC9CE9B682BB5A7117174E4B2A0B925EE
553713780CDF3A3A4AF1560343A8A448C0B5DCC4E11EDF5ACBBA0BA8E5B899A3
7321AA7D4B283AC9234978C2DD81813653A96F2BD129FA5F355D56C4E50310D2
0FAA8F304D8BF333F97A6CD20CA4BA7BE6DC1446759683933BB1F1617AEAD131
1C9EF2212EE7EA9B64E5ABFF45E1727EE82C00FD371BE1387987236F9BDBA4ED
A966658ADF028B5DAD1F0878064221D0469BF17CB4E738258FB5D92E9D380C64
16E95BBA6A2BD9EEB1A187A7231C53BD8ABC9BAC46CA4AFA94A4920FA805F67A
A0C61940F6826CC4539A6CD1F9900EDC3F720AE4FA097F1D7510746BCE2E67B6
EA2F2046613785AAB89915655408AC9D03201838BBA44F421D5F25CFD88E56E8
1CA23CBEE9C2E323DF1866D31F309C92281E514A87A9631F33B238AC6520A20A
346DD6A206C3CAF2830FE244F2AC5D894686CAD5F4BD1CC51EC0B547603BFFC4
F008FDAEBC93542A43B7C907CC85046313348CC8A017C585CC370604E40AC820
8B9D8F57A01868FDC93551DE10FA83DDA3E49E44C32118ED90FA67AB1C66B3F9
F80CF71131977ACCF4DB44CF1EC26AB363C5F95FC2523B5DFBF4D60647EB23AC
89CB971DCDAB3BA26846BA9317C051011C37468B21B159412E69DCB84A9F5876
F418908678F38880B95A4BFD3566A6EDE93AE05BBDCB3C4E240A5C0A06301896
69FCCC0B65BB269F2E10609B6446A68E2DECA905FC26D4F502CAF0EE9AB15E60
CF42CEB376D92D80A6AEE55BCAB006999BF4415815D0F5BA3B1FF9D2E60201B5
833FABE8B883847ADACF9B032721DEEE7FEBB583B89066ED9608F1EFBCDD09D4
3F3C2B7B03154676151753DFF53815F2EC1517C094B0D2CC5EC483AA93772D24
AD3B0084537B91BE1913A31C70750C6DD707761DD733F9ECA552D3F26825B2B8
3EA263488892C929DEC07E2F988B7F7657D53CFA5542CE336D35B462E5E8649E
05973AA54C0A4E63552004E3C77E5FA77F821D820B1620CC8CB3EC5B1D7BA751
16CC155DEDD4DB0FFD3009729F365670DF9472435557201D8E82341B4056D2FC
5D2F7C57599249DA2A99A522868716B076320350FA7415C3B10D77A6E1DC77EE
2D929A038DE3EB4735A4D4F5C8C340D6D293D57E83C2F379ED0EEB16AA3A2A2C
ECD664E526D918A3D0A934170B6E1493843E6AAE87E850D70DE65D34AA2A36DE
8687D57A6B6B1447F9A4380CC3D4D11D54CBE762258426C46B8DE6059E6A2F31
E748549310FF4362129080CD98E70817A06422743780B86E11101BED14BB6569
D36903BA8BEBC24A478CD430801082CCF49382D6F04DE270D51CA5BAFEBD0F8D
901CDBCF10DB97E2B059C8CF7CDB45BF931203D5F8CA4622DF19682DE2BA7924
47F78908BDA23C4E21C0ACD2DA259B23648B6F233EEE830E7B82DF4371F55C30
71993EC2BCC7BD6411690B9B1621903F358450976D6B6EC6B505A593A9FB7D92
7223E2424DD5AABEFF254FBCEF934A4D51949BA0E8CD614AAA3AE6C3ED7B37BF
5324BD4998D8D5DA95E4741B753AEE580FB3913770C00277C9F609B4DF3D618F
148E0EC7A75218AD788F98D35989F3DB94413E70955EF586C0995A450BC75820
F5490EB55E5D0D21343565E1FA94FA64A74377F87E55EE0EDDC8F4286951A4EC
ED6FB3B444206D89BA71A9723E41E93A9F6C80240437019F3C23DFC2491A19D5
29762876AC60A14404493D04B5537C1E6FCA67B69DC1CD859F9C956FECF4461E
EC8B6CD5B5A89A8A838660A6C3F47B79ACE3B05C0AA2F17CF2DA947B893B42FF
749E2CD5E7B56823A119629931B1ECF65C51000A10412668877178F589B4DBCD
24D39F9219C46BDDD6F101C6AECFD3876056CBB858FE0C4BA2BD0B5FC26AD5BC
7FA9E295E72BEEEC721300567B6894FC48FFE5E3067C538CBB3B77E386F50D22
F8DCFDD0E335060CDFA49231D157981925F1CB36110809C12BA28D2D116116DE
01898E311FAACEE0E5402CA30B64D3D5A0CA33E417FC322F2F0BB7AD3FEE2039
56A15DD6D1E86971AD3A5A9A27F33AB62A5A3BF5660B59235398926D6BDA33BA
BC43B062EEF199E4ED991518A62AC374EE21E8F1E1C954BA6D1493388F708D0C
961612444BAE019E1DC18BDE900BD7A781835580A74DC696BC512F7BBDBA2D0C
ECE5D83A049F7A3286B94FC446DB5C3F33CA2CD3DDE2D0E774A579831CFDAC37
9612858EA613AE6939CED001EE662DB17642D0357B80BA0F82ED306218DA8505
A613CD622FA998EBCDFB7BC70F4E4C8F1F43241FC22FC5BB208F4B20311A98B2
73F30E4DFCEC93875CBD1ABD29ACF80585F59947F23A96D218C0CB8BDC1C49F5
70DF3D49704CBA9A23294A88A2AD61811450921B1E5C3C86435C55AF87AAF6A3
A13709082DA9C47D372A4226116342DECB14E4A4ADB7598321516DD637B64148
12AB17AC5B2EB25718856D50BFC8D64C78DA6E5C145187DB0325C30A42013A81
590E58E74094610207FC70BBF1A497395939B42A6EFCFABFD9D43221DE484753
DFE5311F1845592B4484B1CDFCC32B4E068B11A82BA189D2268D88FE63B9C6E9
20C9E40B543B5C401265D92A932476DAEADD4D3E2BD6E4DBEC0B30FA90A1924B
41D2EE9D8AF2D8CA79D15518141665B542C696C2507DD2F4D987EE5E22397FA8
FD80743186872DD67BE58103321467CF3F4B8898E66584DBB9688B9C78873CA2
9B72AD7406CDFE8B58FACA2904869FB0EF126DE299CAC08CB89F60561939D75C
2722CA57853372C14F5BCCA5C4FEBCEB0728BF9E30140E6B0D6C034195FCCC89
291CD818CF66757EAEB0AB5A9D5710988EBB052850DDE97BA0DC0B054BDF5172
2002AD6FFA44AA5D9D4EBDB6B2C04E8EF38660D9BC4C995BF37DE078C279328F
4C360B8EB337D798962CACBBDEA517A5EDFAADF0D445FBD1099837F9D689CD2C
E330CF587246387EDDED64A2F4C397C1B2BFC325B39114609EF57DDCD7B93C53
811ADEFA323C59441ABC447F683B5EC43870C057463DD502E9B9DA7084C3BBFB
2FB864D26DF1BA41ACC815F2A71E96D2C6F572E1F7E4A224FE57CD605682F98B
AC7BDE4B85A4C11D58981E981E9FC43B87A368BAEF78AD87B7DA0FE403AABFD1
CF414CBE75C0E9E257DADCBA035E1BF05C4E17FE92309F18633D93DF885956A9
6C27E77540F888B8336B61598CAB04F3B5A1767C1ACFE15D32A25E5B1BF51FFB
CF3CFB25CEE7DC95203CC44805A935D5A9154A89FBD4E465F0E599EED4033365
0A31612F37BDAE8CC85BBC67F7E375EA68C2982FFD89284B027501184C4D2232
CE0FE4E905C4B504EAD009F047FE627C79AF9EEDD65D00A3858F88E699E5EB45
4957086CB22776AD06C317DEA41880D88F0EDCF71B4ED76BEE665B7937D5D0F0
E568C7615025172086BDBD69670EA154CC52C85CBFFE88C1A4D1AFB6624EE667
1B5BE2A31FCE8B2A4B03BC5DC57280199CC0970EBB636DDF8DF54C4A8CC8805C
AD63CE866FB20C64725AE4BC9F0EB275BD83EC89F2F9CE23A084B45694D8C3E9
3F3D3C1A678690877E8B1B77ED85D4F6E03DBF1F3B1D177E330475F172E0E729
63EAD8034E6100B2A5773E2605180629972DE6BAC0A8C2F9580E9F1D2E77791F
E1D33C2DBED3FAC47DDF1B74FD02583C3CFDBB2D1CC2B735C02B14B7AD3733CA
1682944ECFAD673A9AD5E80B6248FBB6E5036EA7FE5CA8C34FBCA6DBD0E76EB6
C2CB89D9815DB3C45742170DA926E03493AD86BB19A1D3FC623BDF1C920684FB
7414EF69CF39713A9495D8CB678BD4592B53C36BC6CF93505B8E32311D42532B
5661051B855F01A9B3D77AE38879853AF0FFE2448368DDFA3EF1DEB88AA055B7
91459586DD2DFEDA192306DF7143F998CC5D67C1CED313430E5CC3F9CE265747
8582102111E7AF9FB94D95B82D8E1DF01F04F2A2C22A20207B59C8976D56833F
E3B79DCB727EE7537476A052E92F7C3D6A625AAED8F026F22AB59EC0F86E541F
BC082D8E35234A18192862EFD232C9950B1FE0BCB91209FB540DC5729B9E36B9
94D0913A8F01FB6CB16DE85E6B89F144111B1D911DC527C24917D909F1CF501C
1AF2923EF71530F21F9BF049A56C7AB3249A420C28954E981EC464F61FA167A5
C6084661808089EE7DBD80A2D92FF4040B37B2D81A2F5A568D461BE1C62B0FD1
BF6D1063D2B5DB9CD48BB2B2AC9CEFA543E0AC5C86C462399C1E82F25A157282
D32D538029ED22CC5935E63FA076BE22D3F53B7D7CCDD344D68B4E73F87A5F2C
691FE68C981FF7CCFB124506FEF93F36F7181075D7BC6FEEC0E35AF57855BAB2
44AF021C7AD8912D884424E8BAEC68A5562B881793A1B47FD338B1EE4C0B8583
2867C78DBC2EFC8BA1431DB1C8622C99BB2C2D4D5475BFCE87B11762427867B5
7253463C6F2E1CF5F1DC1F7851F2EF6A957CAB0C0A55076C59A6FF9237917C08
5F97C2CB4B5CC903B76BE8C057018CD962EF90E1C0CCEECD52F2AE35A94C6EF2
D99DF4DA88247C920623978A1DBB81D8F171B588D617AFA8285F6147E889523F
CF11EF4BE498842D3BF8E811B4B33131416658E03293AD911516D8AED556F7E8
0181391AF36D862F5F8B4588BC99585BFF0F1ADE4BF73320158DBACB2784768D
D9794E2B0F2C0696E5ECE5C7A7DE78EB5CAE85EEA244D43D0280D4C87B6B93F4
803718596FBCDB61A0BFC2DC666128E56F3133B9D4F16305940B50ECF66D80BA
06C0A73C02F689314F1B4FAC22D16BB1E414C6F0A1A548AAB1364D2CD9DDFE5E
C8887964D26BE84986A6B1246BC306E6343CA376F990B77BE8D68A4E54304C3F
250B2311586A1D1EAD2C0221FE1828CE8396DEDEF13E70E0AA75FFB6089DBA9E
9FC3FAB43B3633C8EE7598619A0C6FAE2F25274787348E3660D0EB7212F5CB38
032A41A54FDF14B32E721819AEEC54E8FDE3AB8F0ACEA267B01081F284B008C0
5861CEB5C236729AA17DC78E92FE1EF9F047B53A59F2D1D6A6734D0413D1A51F
75B03234F4775523A55978C73D5BF9031EE8BC6BF9E2637DAC07F5AAF2A6C41F
77620B272300A78E86F71F16EBCE2DBFEF4920BD3F16C282E0BA4C872E5F7E52
7ED2B663FE45D4A36A588D228D32E2861F26AA6FA8DDBC8110F4417D0DF29285
F06B57B1720D0D13828A4DD68D57BD530FEB9C3CF305594B70E4394BD60C82DE
A64EC17661977B18199BA661C48860919CBEB56AB6C32848D51733F1E959EA35
DFFD823D92F11065C643AA69776F71163A60D4941B753BBB4A4C0C47BB1D965D
06C9BA1FDAE47926F37C0C5B591058F68FC1DF3933B2BE014F99A53A617A19CD
8BE011234D48CB7E14D31B02B1FC47C8BFBF04C4409D32CB454E8FA0EF9AF16B
8AFE9FDDC41F6A23D700D4AA922A0316A895D240C5595F21FEBA98FE0E74B762
77FCC80F4950A8C55B4A008FD381E9C0EDF4427CB324BE4ABFC790CEB53E8BBE
AA90163A7BB19E2840FDA404E830F5478DD69B85C5E69573D8CDBBDFF41A8126
24A6AB66333C749C35BE314777CC222D54FF2C4C75717FB938724EEDDFC2EC1A
8DA77B5482E760B68F0A2D240332BD48803004BC157C6E8E192D512CE83D5572
D388BAE80AAF5E7240A73CDA7CFF7F8CDAA4ABE1D3BF6ECC3641B6BD1C2CC703
275D48D62A15E5A85F003E76D1EA7DB65E3476CCCF6B504514AEB1FF1263FDB9
81FBF1A1873FC287FC6B6DB11F0FB463637D4F3280EBD19976588F900B956FB4
36AAA8C1F040300CAB9C4F624B22C1D3D6414B7CAD36B5AEEC90105B5A5C2129
4CD540B9D0129813BE7E20870365F8C46FEC92DDB64D0A6C7C5B9867A4592B7C
124B1B47899CE2D1C03811AD1B8BA253B0D29DAF2B53E312827478DBA274010F
C919D122DF24C1E372F7F3CA77A2C0EDCDB2635F4136EA0C202D4011346902E5
1524609DC031656660302CA36D376245A64135890C13A11C0085861792384787
D0831FA01C11F1E7B4429DDAA0B3A7EC1DC3CFEA24C34DA4BC993300F12A953E
80C8BDA360789FCB0F1AEEA7AAC310D0C3C56F43F7914C3B037DA02C31EB740F
2B1A696E0E5553656942BA567DC9C4D3CA06E45EA615B7B5674016DCFA07C0B4
285BFD9D551117A357F4BEFD58BCE60661187A5FF20D27D685B24BEEF563F0C2
B2CFA2565112F7F49023CDD405AF3E54FF994630BE678B0D6E1CED514FC93F7F
63710D289026CEE4B074253E7E0AB1DCCAB57DA7A1E2050D2B8D3D75F2AD7423
0B0A7081DB1FA44055620B0A2CAA54666C5EEE3C01540D96ACAAE98644E1D210
E0E020214550D723431813C031DC7DF0D177E82AE49798F8E0E5AE0BB8FF664E
4793F857BA380297AFB977065B7500E4C0AA1735AF4E15703C860A016F19E593
319D14C497F24ED8E42F3FFEBE976DF33D697656DC11A8A7C6A60219BF63F186
E0FFE55594B31E5C312DBCCA08E84E94E8BF57CD5F5B70EBE59F0D41DD3F6B05
F7635EA92FA9E082C80075A5A5F684160AADAD501BBFA7746327E3E606D1FAC8
EF7AE7C612371BB52FFF41A97A349D111E861A83C9C48B0145ABC3582FCE43C5
D121F0EB6F5D219E52E2BB660AA1DA5551D6B66A732628D640BF9D8BDE2BB3BA
046FBFE2E28DB31AEA2ED8F9405A39C16C3800E9B5611B460BE0F6716F2BF79C
902AD4FA3B6656E13E9DD7A785C17F28BD4D646D66058721610CD756E0D18D32
F09C740B6023DFAD45A718BBFB2E65544D4754A5DB23CC7988A3EF45CD3786F9
E100D9684549A16BC2DB736D43C293097E082A968C27F0C120C41A53E3464381
F7DCFA8B36344EDA85F53FF65BCDACCDE7EAA41A6D38C1F420F8F2E287AB0F98
A0DF7D8A6CF2E4C78D606569BFB7C51495493FACED57CF2D507DDD366247D807
28D73CBBDE2F4F666099411B1FD2CF7B93D0E9AA161024C58892285BCAA65E55
9FB37468777706D2C57A0DF6D520844B56D62CD10F2D7B02D17F97E4F87C16F3
9BA09013FBD7ED8C2DBBB432288E598241369B9DA6E3EE324290D73BDBFB5448
E9D7142036C0FE538F18E866A50DD23152E2C096E1045E7777888AF5CEFB83B1
C6FCA18A26E83D75AB66291A5A5A285DBB1B9525919564600D71A767BB03A8BC
7BF24CC3B318BBC0F40C79835DE626E99BB76C15719BFD5C15D967B84A6DC1B2
450D42BD399C5316396CB294D008771E563E5640AAA9635A1EF11001D0E20298
066B78B7F918E41FC48A6A6BAC8CD12D58CC2447D1BAC318E2717E7B5A94A4E6
462FE9017FBACA70F73952C2FB4B57406E692684CD10FADF049EA8173068CFA5
95F8BEBD313E01B345EA52562AE3847FFCBC60297F23C69A2B1B043066BE29CF
0A3791C131FC4888A9EC4E532138625EE58E39BA27499771375737E7B850DD0C
7726124EC62A3358A5163F4065B3448C1DBA85AE4C021BC7674D90F9FE76BE5B
C08D633E20216B9C5DD89442FDA1637B9DFCB04D9E3586C513D3A874FE45F70A
BD397093978B7E77E96EC025C9A6C6F0E6ED687559C1C41CE99F616121EEB7BF
8D268D1FFA02C200C7FA04B2FDC92F1126135D445153AFD3F9CA611B64A49DA8
9C5E190722105D3E613839DBCF4F174FF59597148A632C53273F7984979439C7
2C092A204A2617AED15E176A33D17C3AC406F2CFCF1E51B4FF488042F12A33EC
3E64F4397C6608306E5848A413FCB19573804AEB3219BE92BA5B15CAB667B4E6
F73DF0A6FB67C71D99784C6AB7D72C1BA4507B4E11F3AAFA3AD44D927D80759B
971A0B9708023FF3561A784FA50039F210BA48C333F9686F7B0A597F9234ADF5
EC514B7E20EDAEE02D07A1AEBD8AF18F4C7E0046367B29C484C0BD52CBDD2613
4D63894C71710EC41EE0E823E81B135AF75479C6207A2304017C935ABD7EBF20
5AAB444D5600C0BE7C9BFA5AA2960D3DF1C6FB53516A0543B5BF1EEEDFB73DAD
7920EF8D28C79A28ED9C20C0C20B3870E66ADD6D2408181934328168DBEE640A
44ECFC96BC24F2729E2197DE10A9FD69477050657B06F2CE5DAE9E01C68B6021
626AB9AB6E57C9A875CE4F0B075B3B8CF2DC506DF47D900B20ABED36B891BD2B
351F6CBBECF14A99ED7340EE3268904E8DCC4D7A41449452CF56DD4A8C9BEB6E
88946E239E887E08EA1E0A646FF13179C0AEF65B7DCCCC9868E5A57C2386CFF2
C7F77FBF1846BB692A6AC9846364FB120BC5E76C7B0C6988D05C0A5EE5A50299
86D680859C06DBE7667F6D2BAF23CA4F271B3A2C1E1AA566F676D200976B013D
92A42252C0BB59C5073E590D29F6B618B86D3579D07BE2390223640246288755
F491DA46F6BBB8727B4621D5680F44B3D69404232818510DD5947A1D647311EE
124BE309D486BAB855D4DAFAF403E919030C200F5EC348193146F2FCDA575E92
6B668A07000CDBF38F68B9A48C8C0BA7ABCE5373B6BA1985E0358C7DD3AA0073
864E5875516B1E45A40818CEC79A6463394C665C334A3953351EA609B0CC1AFF
880BE4FF4F847BA4035B58C1C077E960C840832CF99925C941B698EF48954FD1
E09955C6B838C52CD196849156EFC249D69785408DF04F04C99D10D933062C63
D2F9B6B2DC620C927E9761DFA165AC8050A99B7E28C1BCD60F5CE9CC53763AC1
6C42685E9B4BCBC3DD75B9380917F5A0475E389F733F0E9F83612F71705EA766
A4652A4CEB6F2950AC5EBDA2353DE1A295B390A17DB733B25CDC1D93450FDD3E
42A6259F7CD94110EF47177E85CA8A19EF29FED2DD4ADD27BBEC4294D1E6E283
3DCF8E8AC53ECED9F25E634C4C04BAD22B19A6E4A94372C0D29C66BAF0AEC837
B6E201B99AA305500590A084E41AEA8472ED340793E95B2CFF007F9BA175168B
C14ADC0C306CAA6B8498E743738E78220C01918771798B21E2A2B37E4CC6C4AB
D981A7701DE89F53C20F1D131C6D07934BD3878A4B5AA9403F4D5B468C4D693B
F59B45D90C8D3B7F75A91D5FDDFEDC42682F09FD91B36509A9822180AA7D7FB1
A4657266EC3C2CE0307267FD63790720852BA3B5027ADDED074EA8E34ED95BFC
0F8BABE1B515F317122BE1C2910BA8F5EBB7BFBE5D0A0345B8304665D54FCE86
8501985FE121C33A8F4B27DE6A72C91A5BA4670367C6E71C5F7AC29E165191DD
710E56BF43245CFCF7BCC12252881574E2A77C2539DEF8A184BB618A2270E692
D9F2F1E36C3CBFEA0C6446D99BED05C14F4C72DA2AC9857A0CB0EDF84D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 126 /vector put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC6291C9474BAE831466
A9837BEE55AA0E15812D87E7033BF2CEF3BE10ECF668D3B57D6EF1D4335152CB
08DA4049A6477A4432895C6C47365409EA380514F643E9578BF15E60F0BD8599
6DA65973F64BF015409D4FD2F626D6BAFE13BAA19F9214A5454BFC1B07AF81AE
1A7BA05FE21A2C8CAD8EE7D7D41C4F543E0E3F32771D24370C9B35BFB7EB6E89
7BE967752D35FA4587AEE90B3462C96C8570EA5FB52D5D1C048AF507673BB5E6
4CC0EEC0450D6D5349292EB1B65B187E63A4C2A2D90AF72F04FE8C0901C09C09
C3582C4013454DA2E01EF704F31CB3F709103B983234AA02F7CB78E98EA31460
925162786F6CF8B1E045B49B53484D7B20A5FAF845CB5A7926014B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 80 /P put
dup 83 /S put
dup 86 /V put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3ABD3C4AF64523F37F17811F2FDF3C3613D391
4135AF68EE5BC68A94B7FCBCA3E246145710C4509F2756BEC93C6432DDB7D1FB
1AC28B04BF3DAC8FDD209C70847101F4BF1029876A80A6E4AD20BDCE4BF93543
5AAD174889D7FB8BC7A1AEE0A56BE8085D76D15EB463666E0801179C2EC212D7
741D517DCE40C6943373DB96EF2F43BDCC5E16E77D307E529304D0A9DA233B0D
1292834EB82DD7F31B8E86D61A549F0DAEE590CFDE3C61BAA5CD9AB607650FF8
2F11DF2BA370DDD6723C154C900D18BF12EFAAB723A7C816D47A9B3FDFA93E8C
92F73730E1E28EC8FB46BBC06BFFE286C366E1F387AE1ADE40ABD7DABA77FF81
8154A0B50ECB2AEEA335B5BDE39407AFE277481B78B1DAFE794126057DBD2C46
2F67311F130DEA693AD05F6FCAAE4BFC1F60C355698E3563A746E0DB51CED438
8D550AC45A5A7762FE22786EFBC3A1D16DF1D7F7DA574AD1206B4B1ED161ECA0
4E432EC5EE96437250C43D3222AB66D1256E383D7887D6DB7C060A4AB81B07C6
54E1C49DC1BB4AEDD87AD40DD35B1809C92E2FB1CA1517AC155E85235755C571
B1552CDD0E88165BD31E9D34EDB183E4715F464C115D8A5DAC624EFFE6B169C1
51673A9C4F6D31B0AD5CE80FCE1C8214FBF7AA332FBEDA5E09998B0466C45355
F5CFD0C1D7A2D0AC64C85CE87AD48FF0BBA89B26AC921EB0EC01F429DD5A2EFD
C3EBC45A54ED21255A08232EFBD55558EE3CAB0DE551A25A46BB763E9C054B8C
744AD69089D08EC234291027EBA8C0741FAC8021045DC09C95C92ECDC5F7D88B
DEC886EB90BF67BAD64F68B145BEFA645EACA9E239449DF4A65BFCD3E19A4F5D
703731C17E595D0E697FEC6C9A25BD2731E489463D4C939967DC46EDECD2123F
ABEF33D44C8A5AE78923E618E8B15DC7610D8D58BF7FBC27A810A6F91DF318F6
BF76E045E8814A4C9F0D0EE12887C57FDBAB63E6898EF551F8FB401986D788CA
F6B8350D2C1D1430C83390D9042873B96E9DEF3EAEC6D5B9A045F9280D79AC9E
0D5E157804E81603260D450292EC410BBCC62BEB46BB9835327B2CB78D3F4FD8
5F6C8B2141EA551B170131E8B229285A06EBEA61BB9DFC7F153C97082FDCCB60
EEECA9EF96DABFAFA99994E9EE69C254321F70B0D492E3B0AFD624E645626B0D
46C816BB02649E03732464B53102D0BB4F657DBDF2BDCB627FB09A35CD75A537
5320E9EFB4289A836A7DDE74739BCC34FDC72C063ABCF2EA2D66F51581C9885C
ADABCC27D748B1ABE83933670EB80CF7ADE94F03F837E332C45E8457FAEFEC2A
77C788A0FFC3EEB38AC79288D606A27B6DFC0B5CB22A9E46B748B43792B18033
C177D29C634AE47FE5959961893ED52546A28C9497E7F5A0D4B7460BFE40AFAA
ED5B66C6DD199ADEF3ECA7213D178F648466500AE364DB98AEFD81BA2A880F47
9D28EBD37701DA5939595B1C15A04AB1C00E87555BC79E3F2B5A512D2E565E2E
01DE63F6F697A9752A8073EE674510EF36935E68412A68778686E7CA0CB1AD4B
DBB2F041979348D29D6DF0CA254D894D2DD8099F6BAA0FA8B7B07B5D5B537BD2
FF89887947BB46C2899EE6538D28D739E44626C944D0BC2AC6BB0BD82364B8D5
1FA9412407E10CBA27837950457FCB8E7E27FED69470C3E602B3BAC611BA3114
056956689F1EAA18B15E82286A1A7FAC7F287E0C040E48598B1F2946B23BC837
FEE5499AE2072E8471E8E010711EF8DAF17D45D9824F6FAC56C433ADDB55764E
C15CD2028E84DD86735A86A08EADD2C911D29C9D75E1160FA3192D02B4AE89AE
D5E2D4A0200D375A20C5470C342D1F38478B29F1588ECD675C98F868CBB38D4C
895235560F8139B35995396686935108FA0C72C3B1F735A5414D985CC86E0EB4
20176667500E5878A1546139277B4807FEE0A577CA396F200A09C675E4537953
6CF3215832E4F150EBD1B0EFA912BCE193BA110A0B37EC8A57610E3F32056844
D403458FF43F071EAD79A28B93E92CCC167DB36D82CD49D803C3E9E259A6E25C
76F6FDD8D063FF1AF5BAA7AB8DE0B44B201FE6BEAEDE1CCB9F8DEBD29E2593C0
67914933D6A3FF7CE8BDB486DB4BDD5B64DF6A6F88CA9347BA8FBE60B6F7491B
CCF9004CE0B5DF5005C61F0CCF6C6A3F11CDBF60C6047783E148671A2B3C0CB5
AB595D7C5812B2BDCCB6793FD7189FF6C15BF7F67E0DB190817A74BFFE3E753A
FACEDD17352573C90177C652149FC24993ED07B19FC507A7C362D0B702E89429
0BA79862DFB418F2C930241C04D30ED922E553E377FB19FB45495C5C49667E91
B25258FDA34309175EE875C4CBC8EC0A76FC19FFC5DD4C56B5714A2161BD886C
A6BDA4BCFDFD8EF64480EE6A4FDD39FF9EC115E9E715A8F0C351EFC4332567E1
DC479C6184CDF4A61030C82BA7876E382568846E2AA454B0E1E270E856C38F8D
07014CF9A2375EEB6F4F1A331967E884EF728CBAD9F96FA688C48C7DCAB3F323
8C15155CFA65DF3DB858BC56BA4B92D5A5CD59A0A1CD1EFBD0F1AA986EDBFF8F
53ECB0005E1A899F6445B6DBE94F22572006F0D4B15456086B3DBBC4EC46A836
DC74C575BAA216CEE3C30D357CAE0D63050DAFEF2B2B36E7C310BE54BB52DEEC
E6DF0FB0E1F063F52F5DD83188A7DB7D577F33AEC5E5F286A1EE9CDED16920A1
16E80F7D94311CFDD439F7153EFA21F2A039DD6B9E66A27189B4713DC64C331E
AD54BD3B8370088E031570BC9BE54606BD96D7A485AF1114173E61A36005E194
484799FEC3C4563F802F8C212BFAC728F66B2BB7782C746ADE203AF213CA2107
BE2E092C681F8300B5BF8D4BE40F58E4A56DEF544CCF26CDB6FF394C530E60EB
4271255F4EA2260A662EB3E92CB3C2147E993371449A297401E1AC2476BCB35E
9E4680665587D98F4A4D6C106874D8E22C8581255E53BBF5A60D2A2093A425C0
A13BF2FB2F4E265CA4280C835E31658826FBCCBC7ADDE89F285681D7F16F5989
E0670622FADBD7A74045EA1843CF3FED1D67CC245CE5501D368773FFF8A9F0B4
0D815B208085D0C96BCEBB3A7A1951EC9E6DFDD76B7A9D34C9EDD22BEF5730BE
2E88957647B3189BFEAF010A832AB06F4927A5B3FD034545DF8367EDFAFD3DE4
F65CDE3FBDF9F0E3B92B28A503BE7A58999D7CBF9572E6185B218228603A4B0C
95C24929ABB3D1044732EA0569A47F6FBDA52BEEE49EAAAAB3D2E1D07D303163
C1AC6327DA6F36212A64DDFDE4E917383F07E2F53721A68902F5AEB929F5259B
1080F0A44F33AB4B92F42534969D8056E1F5983C429399F5A98FAA4C85616025
87396AB07416C670F721BBCC26CBB47AF56935D872FD8D29AAC6574477E9EB33
8E9270DE9DF944682EC4807F1FFF15D03AAA5C4A9073AEC5E2FFA69C613C9A00
0D65A63BBB7929744447F25124100D7EF7390ADE786D1780657C7C9DF8DD3901
6BC88D9A1C38B33DA0047BEA66B776698B408FE8410ABFEEE92F60663F0A543C
B79FF39EBE6A1561F12A7C9AB800523342A34F209940291B9CCFE3F94D29B30C
321EEC0ECC40826E770D3C15A4E7F06497C712E27488124B8CA7C6EA9A830F93
11C6AAAFCCE8F824A2B4613E697758F1D7C7CF98A0453A62E2D7CAC822C45312
430BEC8EAE79463644B6898B27D3FD6261C99FCD46B2A1776203D6091C5FA44A
A0EE77670DC734BABFEA2BA72B30DD13ED5E8837F02DCEBC47326617000E0646
6D0B5576EC510FA028B09F8D6DA3B137B76B01A434041ECCA8149F0BE6835D39
A9B3A6E1606D455A8B71E6401A523E6E4715100963416474FA49C3A5F9BFC582
B2BF0F528D9D8B0C0B55EA1CABAAE4719F0E75054E2227003F730058362334DE
CA487AC3A72CDFC3336A716E19EAE910DD05D8C3095FE2B936A0E9BD92F80E21
F65B0AF413A6A6591592422DBD57EE985C10A78DA5C280483B34521F1F7C2109
B0CBF520BEAC5FDD203D539B94D0ED59A406E3FFBDB767F8A2241C49D6C64246
804E0A86786FB309EFAE18D8DC51CFE08644614F3DB6489F828B353FC68A7701
4365F6B4A6F124B2AD3602FFFDF6857F0E79595D75474ABD4D89C3FA68C529AB
0DDBE15B8AE261D9A2DB7702FDDEB84B79182278D3242D5C1CCE1BBD79F3935D
819EA606FDA91E2E1CCC18C9639949C304C36CDCDC4F59DDCDCE26A5A4A7BD52
05C8BE02BE0317EC9B53EE00E5962AED106DFED5A76A46E1C9397A25C5F87203
C81EC52419D761154516D91C3D0B47A69D79F7C759AA48DABE65506D43C6C85D
253B2F41F8B3315D622442FF6F60AACBCCCF68A1FBE15F8DA86B92DE5BC77312
FAA1536FD5833274B84D5B7C94493424D85A7E510A112E65D91E8B28382FDCEE
1E88E318645A26705ABB932CB9EB836A789354AF24927694508D56E3201B7721
1C72FC95FCC88F02E1BC4F4A4DB5E4257DB01061FE6D974355227A5D49DD8A85
30FF423A8256B1209DFFB94BAAAA0E742E74F97B6235CFB7C8FBEA4D4D9EB5CE
41D2F350B73992AE90991842315AC11269404B18D19015D7BA8F838ACF39FDA1
52544FE2C91A9A16DA891583A75545E5070965485E4BED1B3ED12A8B7D9294B4
C8CCE2E08D86DD4466A6607906303EA8A7AE152BED575D372A8FF68416E49F71
D056812FC9537AAC95B9D8F55C0CF21715859820C0C421D59C1E0ED16302F9C7
7EC92B8DDD1656EC0D4E604D84AD53B47F078BB48003833C5EE13852F1A9CC2D
89465D08C7715B115E716493BA903A55451C210EB8F7E7CCB1E1E16F86369387
4D67FB56FED207B2A4C857AA6ABD9E9C8879A0F261F2A37A42E72CC4C84AA119
709752FEA2715D9E3748BE23384F5E778AA80BFD263199011454121A066F406A
65EFF2C2B3626C160818E58BE91B44A0EFD7D14A7CB30218C3431ADE4C7AC6FE
140CDA0D4215B97F7D91D36404D9D3D94599B66A4ECDB42D646CFEDAA09CC2FC
699D8E3535D8179AA8D601A37FB61B1B4BF8F6C8D0CB47539931863084715B5B
1A5C508627851225F466A4F42589EC459ACC1255939DF4864FA5FA49ECDB6F29
1B2493092599362487B87F06E0200CF8EB4041EBD9E17773CADD615519BED209
9D41994D709C94E6165E0D04FEEDEDF51D3B0461287E729B33EC7386295955FC
5BBDA6E6E88A34BE8D037996236F55AF6FBCD9AFA74C0DD4D827BE34BE7D714B
4B1E21BCD18E2248650F7347B3EAE6E03BF13EE22FAB67D3AB186B9EB9F1A748
9BEA30B04886B4F0167AEDB41B6F3C650051924E33706C56208652ABEF7BED06
014E589FCC31BC963EA41B594F709529D5ACBCE86B40791623B8D806F28B1E32
D09D5E1F097CE4FB5501CB79140C5A10A940C6C2B706F479649B41A38869B1F1
ABCEA4E8983DAA49FD0CB6BBD3030FF4A8A722F46762B28C671CAD71A994FD2F
1E9B637130AFE99449F087EB1AB21F8B92D1F57B8BDB5B95B9214D954A910D0D
6FC00770E1525C266FEA908FCE818BFD8071D4DC7FEA091E6EB8889030E26B81
6E023DEDA6A541E019CD36CFB0020B11D16251DC8F761128AA4700D1F3B968B9
E93BBCD9EF8AA45214EE7A2D9520E5B035CA114940E94511D9828EE682E51C44
18719A493C5F3827A8B22D96BABC347CFC9123201AD327603781D1A769FD59CC
B2054B6915A5C57BC4651EE99AD510C019EEEC0542D1C7BAB078491D4884546F
49166A6E04FABF79675D0A2B2FEEB4E6FE7C6778705134DE6A025ED6B0D22628
D45D2967275AD2DD0154228ECC6F127FD795245701144F2AB52937C4CF86C290
1D4417FA7DA8DC4EE4E9541681344DA21C5C09CD32871FBA910AE7803AC6278C
B4B857EBEA48B6B454685DD781A7CFCD89D13BE35D54F3A6202C9194C0F501A7
09F3C16C7F325299EC883D11301795B668667C99586B554A8E3CE68682E568F2
4E7795AD1BC1BF760580D801930E1BBA5BF6B42C27EC3355FBA29B87E01F3826
6D33286E5BC10AFC46AA7074B56CD87CF4CC3CCE154F7404C6BFF221CD72F8AE
2AE7DBF188D3BFEE535211723E524B289F42A1FC9374FB77B0EC4E433FDDA9F3
931E75C9253ED0D19EF476873AA87D52C57076FC4E6D5EBF702445079328E7E4
CAF0FCB65ABE8BCE03696933CD1FD03B53CAD00A3A1FCDB39C42205263BBA5AE
23A703328493BDD9607C5D8B0C2F1F65F35E03FBAB8D4875492375CC962431D7
8EED8BC482F786B738A2AAD5EEB689F1925FAE96E25D1E27E890522762D5BBF9
2A75B5F5E88B1FD250CFDF676F98E05FF7D4112DA639F18D87ACB0A66F0E4213
2D32BCAC2AFED5B7DC803B288D2EEA28C6009D540575D65EA34A9E0F3207EA38
F7F321684A097C5390C0A1AF4D81AE125FB1A0E450814D59B1F5945F4D5F3F0B
6DF8D6B8F182E8129E073E7859D68CDF0BDC6819B5A7062A439E463A3DD500E6
92CD7CA08760FD9DC4209165520D0CCCCE8851F898ED14D6B6F807E748614782
0FA653E94E55A1243756835031EF8A2C118D4407E7E63E8F5BB264D9D9D986BB
752D39B89DF1429A24D24101B3DAB5A3DA3DA138CFEE21D454AFA01C296D6666
D3F1625422748326EA07F86BEFBBD16A91D34D66C2FED66CF88C7AC9C6D8C89F
2100437A0E93B5F962DE9C317B536B5A02F621018F5AFB7AE91E3ABA274D9465
47D6322687333CC33D8E0CCC1AE32F081C029C88F9060A45F26B93A7DC46CB04
74D27552085F035B42357452205270023400D52986BCAF5EAF7D0F707B991C56
D6BED0A293B10B8E9AC87817A2BA6C90D3BD0BA11108AAAA1D4224A65440BF9B
D6EA24F500BB8770FA372CFA496568698478FAD5753E132CEAD555A7B5A831D9
79AF833ED3EB83A111CCDCEDB4623020C4BAEF1EA0345FC4B589DB92B21A2143
8400FF0B4C86605AF647967373CB337186DF9608E915892155E072CB228B2586
433D47CC57464CBDF4D918D3AD5B436C6E121238CBC2136830E4670A7C37A2CD
32009866FE0752314525D0EC5ABD0C6871BB472FD1680D3B7C9AA852408BB710
498A9E0946D31157FF4B41DC817F234DB9028F0378F55C4D6DA862B5D0EB1AFE
04368DC68CD4E7F1C9C5E33B50194C7AD7BE611D08C64C045051B145AD19A6C5
C5B2B0F0D4B13B7F48F486933A36216B5E63FCB0620538D8A14394B1BB9CE908
2A6B678C060082B8C34FF4E6828A3E498FA4C0D2B59F60654B2C8EED7424D813
030499EF047566CA5E9DD8D6D3A5DB1E8C42C654D6D84E6D0C49FA80658FA6CF
79EC8284CE8BDD9762C820044ED005D0899B2B4DC2C340F1F96B8DED9438BCC9
44CB3E3D804E4B74C4D40F325484FFC64CC6B68DD1D53F4C0766CB8FA16EA196
0AFF0A54DD061B7F022C68228EF557D6FDF7E4FC3122193C2CACCEB1C5DAB542
D6F6E0652E1F3CB5109134F07CE54D5F6B36133B9FFA396BFEFA6AB1DD69AB69
9E600B27BF279CFECB2C47120BDEDBA00E4DE42E4F19CD3ADD4965C4C89825B8
E9B8E256C55C1F11D7C1754F71FB2A9DBB6FE2DAF57FAA29CC8FA65EDAD54A35
69E61DE44A227081863A9FCDDE4279F483FFA265807431DD81773A61BFADD138
60D22DC8F732599E2890DBFE8796891800B1AADBC4CC61396708B308059E0B89
19CD893D78237088C9A9B2544606A317300AD6FEE702BD952CF7D2F752DA0C7B
3B64BBBF4E312095000C43315712BC14E09EA2F11AD9FDD0796228FA0A3C638F
8A242CD0BCA023EA6AB934851D70E06D2AF0FFBA009D78C9C4882390398B7E09
E48D23DA235033F1B4F7509DD1A4B4BF90D210B9EC7590C31F3D8726ECCC02A4
D29E94A5DE2D2038A4DE153553727E6F0276EA4CBB84BB70DA4B1042B11E2C53
4709B7ADBD5646DB5BCECE77F6A11168976984142696CEB7F57B2270F9B39ABA
6893A5421E3BABBD29D7AC08F347803985D9E28EA02C022C23542F39DEC4C687
6FC448D2E6143044FF5F9E645F5E8BEC42E8976E14B2B5F229A8FE064D841654
EBFBCA77DAB72A8A40B3F6B5218C5BBFC0D8C95572CE541CDC820F4C5479DB46
5879B374EEED0AF873B0C08DC7B0CE06342A8BBED8561F739A399752818845E8
69ECCEDC762FB4FC9500BB654A883C2BB9366313024903FE726664EA9A93C1C4
79623BA4EAB4D57D768391C577C29A9B29BEA2D0609E3A0219E6D2FAA7D092BF
E5D9A4D7D7BA202F51C7E6ADE0539123F035F440FB3953ED53FF8506302EBF7D
ABE054675099FA54916F6224382058E0F44E88C4FAA74FA3DFE7138B87252759
0EDDF01C0C5E18E500CE33F492726E10022D8D4AC10A94FB8C260C1F4D903B82
BB6E10EACB209AC7C30FB45B2C0230C4EAB7EF0E443F8722873A705B143F935D
3F4FFD6193A8DD8E48D278E8E9B1B765A0CE1A44E9AFF2B8C33BD0A0BEB88052
3A59B996AA7C31C873CC0C8E054E320E1A3CAB7BE38D43977EBA76CC9A766A05
762152FB5266767EF9AB44D13DA84322E4FAFEB704232FD6745EB2532A655268
7C569DF1164094E0D6F38661CBEF88397EE893301690D231E1C4D6CF16B3AA66
625787F8484597187B078CB7C8AAA1560F3061A710078E74F4E3F6A0B16528E7
04A43EDEB69A5D406C7278F10FB58D2630EB80BD13A79CD8A8B1FBD2B8668B0C
5C96DCA358393A688F824099506C1141F8867ABD3D50551ECEB6E8BD3F2CDE74
429E61ED5891AA2BEBF7BA16C288DD52B5CB7BDED2B8F8AF3E7821AF0DC33211
09046200FDEEA78DE519BEE5D9F3D04BCA402323567B722D80BFC3B84080760B
83E607A0A2C915966C7FA80ADB94081183136E69298371A61BD342626240CBFD
36E69D7C453A109AE293734D4888C11C7FEB8A6BF18246F6E229C24680DCCB4A
4E4EBEFEEC305822E87EA1557BFDCCFDA684D1D48BDC1EB1273B544658051524
AB6B385356EC64B3CE08CAD38B2AB3A5CFECB31082B1806D97E568FA1C3082C3
76F5702B2F478BA68D1C54ADAA84367C2E1BD00542F33B58721120AFEB4FE937
385C0F64645B1083AEE0F1DF76688FB9934C8C5B96DB4FEF2904280B9BC95446
5F344999BBFA8E453EB639ADEF30B2626F8D051228B8081D0A455185410083FF
4111EAE4C96ACEC227E036F5662F97BDC23F79E5197C2B4CD1D2DA0D7E70BCCE
55D30B3291DA1C22CCC3CAEC694991AB74D3BD4AD6197BBFD7C4A41BF71D5C85
BCB6A418AF66EA531107341150E69A453619E32AF8FB7F874AC0E479B12267E1
37F41AFA97BDB6C6180405D85DA2AFC7D6CC4323B81D05EB0041913F36C0EF79
C5E65330C7406CF3EB575564E90623E1120B32CA1C37815196090764A8FD9C5E
F6BA9718A766697A229B412A0AF2EFA14488FCA6E7A1D1DB1DAD92729C330440
BB4A188DE38E2CC8402CE2676EAE3988D6AF9B5435A1869497F4B69895B76B6E
70DAEFCE347E3D780B30DF013A3D58708CDA6BB4505BA77FBD09D19D56DDF207
E96FCA852CC338C2D9C2D18AD7879B40B63A10AF814FED36677F9B8648F5A871
CC593BF498A45D11FC5C9095F8F3B27D62C8DB7433A89D90173E33644078D66B
2ED91F94429A1E3BF652E61D9657A2376DD2D4ABF80326F990D4C3D0CFBF904C
DCAF0C3B75A35E4321F7662B1630B39E337D9CD91233C9FA3297297308205C90
A763882E5D4D979C3C840CF480E91FDB55F37707D57806A0494DC5712C2B5DF4
0B9E21042AE9CF209E3F380DE1CB2ADC166E5238A6E912EA8953EA188BA9CE0F
1C49D0073EF001E4433D5220CADFE8EEEEFCB80C7A78811204AB78CB40E134C8
70C84A8BE5E4AE018B2AAABA4A330DAD474D03724F4AEFE6DB27410CF1220E3C
103ADF70597C53CE0034BBAB312D85326292630C4EBD58486E787107BA2AB339
E59096F2BCB6DB67F6FECA26A80E2278288750D2A63EF74E1C0FFF20CAF50734
EA41BC674843FD0187664B42A106F7F38ABDBC1012A400347603E2E06D4B5087
732904C85E2ECE4923CA5B37A46A88BE97AB42058AC3715291104D12FE2029BA
8856AB388A0388288E33AFB09FDDC0C76BBF18B842A3BE2F9B050DFFD39D1BE7
AD9D50A44CB07CFA34AAA9795360C83D53D2D620A025C6D6925EA2F3C16516F8
C6DBAAB18C52305D78CEBC63A5CE0CEF9BC9EFDEFB6EDFFC25AC622A284DE5BA
1398F3C9BA2D8C1401346D0CCCD4761A9C0D9BAF924EFF792B62424206F1F7A1
28C259BBEC3D9598C92E0CF825A168FF6675D05152E9D55D1F718EC10F073CE4
9FD98B9441E64661C90BEC03F13845FCAA84FA188A4870B1228CE392A72FEC69
BC86CF18E070D8F0190CC08CDB457778DC3BC10936FB69F0DCF0A7148316C29C
4886E0BFEAAA1D48C3F10C416A7A5CD1B7A2B9ACF9A9A234819E232A5743501D
64C086502086BFCD0E61CF87EDE7546B3CDD447D47023CF1699F688092A51577
A210EA95400615795B04C8BA6318DFD495A30BFC7DF81AECC56A27EF8B333131
96A784344BB847A5D1BED20E0418754FC5EFC0D2BC7488D80B5BB3E9B954B0C9
819C7D42026B3C4DC5541299AFBB5219EA38E0AA41CC5EEA66ED7EF2BE86E5F4
0D558ECE75AAF8921C8C71C5475FDAE8965D2AA9B97F0CBADCB1E25081EF3709
69599D905CEAD812623B5135A8CBF5B2F8B4AAA8D33E95103DCBAB9131C96B10
DBE8F01311B5E0016775D11D66024848CD6F36C2BB17477664D5B5472B691333
1A6CFF60C8826CF38C0CB898ED4787F014E104FE114ECB446A9A24C851C69139
A5E5B09F2B9E13D4E2B3E7121042FBDCFD628AD4045FFB59F1C7E75E147F638E
488D79862BF259956B8E997EF8AACB48C25325C870354044E1F58D455515BBAB
9A5B5DC3ADAEDFE90AC250DA080B478578119762B62E98B249E879A832FA0B08
16A0C7C6B44E61878F65B61537BA02D81CB7A6A13EDE955B382DD69B33FB54B4
F88B560EC65B4A7E1CF5C4BC3B07B8EAC3AA534BB1D2377285489BE4085AF487
0991599BB835BD502BFB04FCE66B362851622F5174CF1AA3A091ED14068B387E
C0CBC0EFBC9B8D581024536237082527AAC05FCB2DB24D0E66C9614CFE62E52C
34AC14F062CFF09D1A7CA815E282041143F82716683D4D986900E2F52D4BA30C
2DAA503174DB3F79C14B02F024EB40106B6AF85B09B928C0E78A8B165A3D800E
2AFA9CD32F36BB0888DA0CA85E13BA4EB5DE892294AA230BEFA79F226DFAA4AA
BB539B9A9CF92458E2383FC0472956F1F70CB548CEDB7EBF0B2E5EED804BFEEE
70D464E4EC0625A7B74347396E67B5D1BC9DA1A0B25BBD6811DA171CAD9C6DC0
3B2331C372E9B7DBE09FBEEDA6658EB6E2FBE7981B1461BB3C6301AC555CC0F3
F4356B966FE3E706A0709CC3048E6F8488292C2E9C7E72399F667380E2E4A449
B65682A9E194B33254A1D1C730791C651EFF66BA5DED031B8FA3A409884A6865
2D2D07E45F5F711F580410870103D9D9A26FA6E4452CCEE6E9003190B8685445
76296A62FC5119
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSI8
%!PS-AdobeFont-1.0: CMSSI8 003.002
%%Title: CMSSI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSI8 known{/CMSSI8 findfont dup/UniqueID known{dup
/UniqueID get 5000808 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSI8 def
/FontBBox {-100 -250 1135 761 }readonly def
/UniqueID 5000808 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSI8.) readonly def
/FullName (CMSSI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 107 /k put
dup 110 /n put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4ACE8E907D5EF95D
3D767387C90E3340F994983B26E5038E3EB949107C5C55ED5392BC8F10BE6BFF
024B7DA024C42E9AF989382A9374EB2235ECB8D3E676F531C893D3D5F160C3BC
69A45272FBEC9D30D4634423A1B22FF3768CB0F22028D36B8B8534FA62DD7EE7
5DFEE3411A25C4B2CDC4A55CBEDF5ED5FC4BE6290E0DDF41F6B0070810F96F2B
2E4D5EF987C11C31BAC419301683A1E66DC5A52B93D416D73D8B8439B96DFE48
0F080479FFF69E2F97BDF7944D73F55F531755FA645D37AF1A508F56410CF8F6
9AA2E6C87E7A802C7470F4B2742EB91C9CD3171253AA0C61BC85B59C1B9C8C1A
669EA311B271ECD3FB501A20E03535BFF043F326258B5738CCA2C9E375EAE10D
C99891F640D7BD20E96077815E2921DDECEC7DC2EAAD3A72840B378FC8EF8D4C
21E4DDA91D2EE5BAB4BC9C6CD6EFBCD4EEA34C2469474DA6818D3E0120A5AABE
DABD53296290B24B18A91093927E5C6D5626FAF70CB340717E4ED27F57E91CE6
01CA47D739EBCAF2991F58BCB09F3F12BB23D80A61E315DCF270AE3E74DBA3BE
E99D15ECC1B965F48442783DB0978A366ABD22EC999189168B75B08163C63E10
7AF0391C86471F56F9EEB994419EEBEEAB58126846E4EC066E4E81FC2C0A5853
8A7ACEA4ADD8F157C86A131FD8ECA22A2D7D6AF3DE989C90B297B57CE6EDA490
BF7F5E03B71F153A5CAE98F655E4010900CB5B7C4B9015CBCBB0426692A68DCA
AC3A9027B4E8D3CCA563F9B31F349B7A2E050E85A6CBE6BB8B3173B3E45B7E7D
7C3E23020C431AF58EEB4CC1ED401583F9F78EC63ECDA9A34D91E0739BBBEE59
ED973BCA5A43B128E467EF29074CA2D83E0826C01C0A5C1ECD79C4CEDBFA8ED7
9DA61DE7DD024F24F6FB3A3FB6D19045387DB75BB697F10E2B313BCF94B67AEA
32C89BE746E228C7350C9450B198581F6A293A9C48D148AA26D562632B052067
31603A86944A9386A480173360490C2EBA6B659275A5FFB5A8ADB1B70486D9AF
2B679682D31993B98C4B99E3826C71E04E2FD81E44493942B68D3192EE150289
74B37C28C833F8A14048E5F6F780FCE28E38B32FF8D3AE0723B3C1CA0A5C550A
013B63C8A08B595DC22DD7CCD8CFA1655FA2439E9CB048F485999E3BCD59FC0A
E0942984E2679A4A795477F6433620A679E479E0C3349641AEAC17A7948C911C
B9A55062A53311CE0EF67DC8ED11CC46D1DB8B3FA02B613AB701A8310AF78215
0E66FE01BA698D4D1BE57D31240DD20AF6864FD915D3154FA44147BED97BD86C
9F8D50CD24496A1C0235C6AD747D1DD1465B5339946DBADC561E300885540DA6
C49AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE447
FC64C4E76423DE98198BC093A636DF591877505FC6C9FFA590D30727E4734BB4
E6EE21BF4D6F9998F9E13C5CFC864639FA1DB6390631198DD5A4E83304A418DA
F28A90510ABC3A9290A76BD33643423DC378E8B15479BB5E92DA062AB6E33568
A3DFCAFCCAE6A87A86702D2A9EB6A1411293CC7389C2B2997EA9FA721C5D1B46
9C89BF6B41822709D1123DE671945987BB4678019A410F3F6285DE6C3924138D
62487970A8DBC4B3CCF78DFA922AB5FF94D0D0EA6942FD83DDA3E49E44C32118
9AC8DF24B4EEF2BC604B5C573FE4815A14C063E44AC8B465749C7D6F524816C1
AFCDF3889EBDA13DE2AFCF109DAB19A7158D5A6A86F941BEA8D6C1E41930F276
3542CA3C688872AAF9089B736986F30FE73DA3DC30D571E773925B86CC3A5401
422497BD1EE99B8CC60984585232FCECFB8CD7EA278531A0C19932D7E65FA260
08110E0CDDFD183F87F177C6515B4472D6FFCDD4659ED4900E4EFA450FF0632F
FBEA3829A63E6ACBD73B940E850F15478144FC91C0C6B65A3D21DB024AED7227
2E9CE60983D6781AC2D82DC13591ED2847851B38D6FF2C1AF3A177C1411CE5C4
77D848A72C4CA03B32AF94C0BD369DF16F84FEFB9DCF203616AE03B80A6CF276
A5FA2CADC85170D5E7A0F23487003CD0F57C409EEF9768F3E26CBE9327673F5F
3F8E258908B24BEE940432D5F5B7B537F8F178D6D4AA81451FBB70DF7DBA5141
49BCC342C9A006F075E3C5A4D75F1A972F492B5AB2CDC0010FDF8F8A6665D242
5DC50F2AB1D1C098E107F7EFF65AF274A947AFFA5151EAA0E38D584F4523ACBB
9CA3E8A7C78C0EB6BB75C44D60A811DCC5910978A6E62553BE1B304BE99BB559
7384232CE98EB577261419251FCFE8E37AA798877B1D1F1BD1D5C4D3E75F0A74
CC6D59E91F7124523DE23834EAAD90511C3F6E21D613B1BB91C601DA14449768
F2DD1500524476F3120F4272B995956428F130875D2F49DB95DA90DC9EABF7E8
C6FB98896D32F008BC6F44CE478EF946A6B3D0E2E8123782CFCAE81A62D6CF15
03AD9A6BE8BA27B98682EACCE341746E80D6B34446419A6E5680C60942B653AF
4B87765CA3DDA25D36949C24AB49990EDFA34BFA933C7BA60AB83A03D3321FA6
63FC28B76A147473B9DFC4AC4FB4E14B3E50138190BBD969BF137B90F88EF815
A2E433FBAAB2908CC7EFC2E76EE845A593A5C5C4891850677DF0A5B667A9AB2A
49BBC9B79553E5F14AA68A10D93F96F619700E5278D4B73CFFB60C115853E8C4
2045704D4E0861711A6D8286AA7691B7CD68C4505BCC4E39098B7D1015513208
7DB6E9513DCF3647266BF882A1DAB7DB72BA8EDF411ADDAB056F33CA16A8BB0C
74EC3A387612BFD7B47D8FBC321130B3066B454804E0A886333FD7A54F6C84B8
FB72399D9D1AD9D20D10058945FCE9387361C5A4C834114B7F35A01DC1D94CD9
32AE0A329943D48F05B3B7BA1877798A1B78CE5FF4A31D024A7F02D1784EA28E
4AD7C665FA13B93475B263DD24F362A44E1C56AC4045C1977CE1A859F852140D
A07C91295677E868E700352F9E195804A8D1B906594B3DBA293BBC87437D4525
96244D7F4ED03C1510601CCCEDBEB66B3AF0447ADCB87B1004D67ADD41512BC4
64C17AB21E88926F88486E8550D980941950C3B5CF567D17751137B2010269DC
F0C5DA0368B5DAA2DCEB8D1DFFBDF2DB214D1E73D943DCBCCB7FBA14418E4808
81DF9B8D60EAE203B1C1046EC4B2F0932986E03736581E2680CF0676F934CA56
C07CF644F6AB64756E9C016DFF6052B8BC9193EF2A8EEB5EFB5096EAB6E439EB
1CEB16603F0A525FFA7509CA17FDEEDB2052FA61666677A3556B38EBF9FBD242
215E3D083011F6AAFF7F534FD32519FB87AF4A41C77504F56703BA8B2583938F
7009C71963D94C91082918500E4320491500187032623DABB91AE4099482ADF2
AEAC3C50EDE1A33B262FAD61B8BE69A4B01A4E9B60306CF757CF01709E52D687
5DAF31C7178C962F27AE88FCC5F7BE159479AF03293563C37EB8F79E234F05AB
1516AF56212EB816B7B80C872F2F8BB510AA98E19C2EED6D965DA5AA5CC43470
D18727DF7940B43D62ED8BDE90B8AD9C14FF9FBEB92D2052FADF7A1C96B52BCA
0620A2623B9D25A81751FC60E9A27FBCF995B9F816BAA3733D2946655F991497
7F9CA776C7A9A1908FF4CEB0DEEB8316379CD8F6833906D0C5AF68E424F62ADE
B8861EF6C4644A2A27286DE776F5A54C90C33E5710E6AB8091C86A86964AA279
D92B91D5C8C9B74EDDD5D3553EFA1B1973B6FF49BDB92E0C18665201BB9EBF9C
C779C8CABAAF05A0CE11BBB581FC0AA1CF7F7B3ACB85D48B70EAD7B555AA243E
65797D3846876B60941EAE2980F3CCA18ACD94C4B39B476EC42CB2AFCD8B83F5
53774F74FF8F317E98CE93B48B27ECFEBBEBEB3106E3722B6053B5BD96200028
328FCE620EDEB9294C986688F1A71063DA2258DF8E25FBAC17E2021C981F7F27
A7F3C2042C1F567E4EB67E410D20A3962662140EC73D36D041803AAFF64257F4
C0808484C8AC6C25E3D23E97ADDC008BD27163626A3CC2829466A6539B75CB6A
E249172A5523779E7DC20BF2916F6DE1033062418B3EA1EB48FBF2F3A30C9FA2
506BD55D136BF911E6D7B6D4CA2B5F4473316A51A1527F22343BFB159038AD3E
102B83AB7796C78FF192A73BB713A3FB3A7507F659CC3C14DCFD076FCEC0E24C
9A3F75BA90DC175AF0557451A0048DE14D03F3133E687624B1FE77208AD8CB42
8633EA109BF1BB84A58CDE3166FC7468C17849C9A49EB8264CBBE15C3A58132F
561E3A403E1D2FA256954720B4C1D8FB7496B52535483699ABD2BE797B1A3759
118C7EB3C4936241958C32DA6FA78ECFEAD0E2B1F752C1CE761264843E776452
8D1CE6040F6471CC8D931AF1F50554912FF28C0D009F2D8D1C38C94A0BD73A0C
9159A8E75B4F8653F3F3AF30FAC387B9984F78CF28AAF34BC66E14F655E59153
0CE97368A17F5A33C6154D80F3C3FF1282CA4B53AF3279C1415D122AB2E159CE
561A160A52A233F913B6FBED832FE8EA5D7DFEDAF025097800D59C5204ECE9DC
AB2998063339D2F35C55A5B1025ECA6D0777DAC25CB773D92F9AF58F62C80481
6C734757BBF5D9385F129C7BCFE3B63053E8F30F652C81C17C6D4D2A87D0A900
1B00FB3F203BB09B49D5394FFFEFE77AC70F0D4A8CF5537523A461AFAF503C78
1AB2E7C60493B7BAD7CFF2C57A6A1AFBBA33B82EF7353BA3962128C473D6F47E
CFB11A039612D0AE291BCD1413083BC4FA5EA155E11798FC9DB89CFA81578C2F
76FF5F0DD71D0FD17ED37FA3CA3369BA59746E547ACDE18A558D80F47CE20381
B5C377AB0704C33F71B332442050297489DC376C776160DFB4E13510D17FE2A7
DE9CF4C7C06114694D48A28D27066E4F72EC33DA76F5162A75CDAFAFA23949D0
ADB5909325CB174D41E00CB6D215C63968DEDD7E4B614CFC90321881C0D81F46
1ACE669F3E268F89C5ACB66244AB801542AB671E83A63E3A05FC1A46FF0AAF78
5F5EF9C347DC0BD768EA27E177E0EDC516CD6C6E33629AD2EA37DB776F679AA2
D609C844F228B1A9E621B8923FAACB1B2A90CAC1A75B8F08D4429D25BA2455E1
03AD85F26430A971719CD9ADE0B67A4DCE5A00E15980F72D20B07C84F0C6F685
9FCB6A06030FAABB8D704BC9EAFA26B42B9114F36B9523749109C04723B29A04
EDD3F3DD4F2EAEB87157D2491FFEE09594E7DAE640F710610308D86E3D6D4D50
A7050E627BEA62CF2C66DEBF69220221CB1A195A32121A34D18445746CB6AA87
CFC5AFA8FDB612A78756BB4D29A619B031E979FFDC9B35415F7EF24398041D08
9A738F0A37C566CF8CAC64ADDFCF5A10291FA88847058FC99A43121CCCBC1059
DA7F4BE39B70DC469D40301303ED32A7EF14C4B9474CAAB02AD605EDB1D1D614
7E85471677275B1745CDE7295EE9A410B5A6FC005D009AF762F9EF7497BD43D7
2322D5B3D6525C133244337F3BF228776C42BAD9E12D6D0AB7F9870FE64EC39E
AC4B92396F5CDC34495957FB94B9888081AFD965A00BBC5B6750451D31B87858
6C5D30CEE24B216584C9B44775223DF5A18B6928CF4AC9C2B13E6C18B3799E3E
CCB8BB9436199166D75671DE04E604B39B566CE75840C8AF7914AC4380DFE875
C12A66B2A583C08BEC6FE29F895400C6C21D50B3CF549909FC48BFBA1BB5A92B
DFA4905E529C70C9B5C54314A58E04CD7EA9EAA813DA87897736DAE66F1F99A8
1BBA325F0EA7A23060DBDAA864F535BCBE54D23BB1914FC5985236F2BE93CFF4
97EA426F863BA392982083968E25122E6101342FBBC12D5B7AF2705F6497B3E2
53C7E432E5DF6B61BD508E6F297A617D863E7FDAE784986B47EFD87E449835BF
F135D46F3E02405D4149BE6D5FD2B693AC09EFC4EE1CAFA4AA4AA4B0826FEC8A
5E04C9926DB7CF861E6F8BBE8B3C70EF07814A5740B9AECC0025C597DDDD9E6B
006F14755486E4DCD38D801B05F58469DC0CAB452FC8B48AB8E5F5AE346A6EE5
8851BF74C4BDD84F46FC3E233611505541012258D9EA9BB8CCFB88DC2F425EF9
C128038F8C95400E6E24238AD20F17EF48C1DEDDE8A4943008E3B4BB66C1D672
2CD6E464001EE18DF2CCDC22B184EBEF71BDF82B9873FC3F0B6EA4A812BD7E8C
C8F9449211984C8CAFF2097A9243D920AD9C8BFBE2928E8C79A84345CBFEF14A
DFA2D8D078ABD2AF9A4A73F79B21A7F2E8FC28D01D95D4983EE2DA67735DF7CE
381D603B9B1206D4AD1656003DB8DD8F686BB2859D938F54074AF8F6584D122A
9538CC5ED97AEB6365998D12B2D1854529AA52950CBF21973604C577B6F1A185
E2F11F1B9BD4339611BD2727362273C9BE6DE9831D49603D30632567D078FA83
66F0179132286731ED10FE05E6512617152311FE9A70884F8CB6F303765940A0
4819FFD462917FFBD588475BF7EF24D19A5C4C35CAA29614CEFADAFBD500880A
66A5022FC20F36114FF6F6799491D1898354E3CC39987C8DFB5D4FD605C76094
6AADE9D9B331102B88879A5715832764A64E9AE3D9C3288CA76CDFC531AAAE42
C9DA44185E5DE1A3BC7A08F22BC14C34B0319786A21251995512710A8C1EAAF5
14479A9342181EBCFF0DDC93564127A1EE53F5A7FC71D311950C6A76E5F8C183
298E16B31234EEB0F10ED30ED08BBC190B657CD51C69C5BF1B6C607511832F8B
E694056FBB753E5FD8B35402295E5305D12D1E856E777DFD2C0B885A4EB84515
D04301F4AFF70B590B8D520565B57AC2D4F6F033BCF873B61D7080D0FAC5240C
EEFD3285CD52483F172E20A17085A69F23C12B4E10C21797FADD653E50F2A372
18DBF349C8257918EBF9400400A96E2DABB0A5AEC4E25334B1D9C2B6D47BB7CE
D68DA559F05B1817C34FEE6884A545A9DF698C9FE95C11192A124278890243D6
D09923A9CC287ED2233DC6C11ACF910DF593C3C6585CA7C8D679E051CEB635E9
ECAA5FFD70265235C289534AD65E209ACEE4D4B772F49558BFE675D7198AA28E
DE0D9C92E39DA2299E12C69431AC2C42A737EE0F4784B14FD544C70F4520E5CE
6BBECECB5CB3CC4F85C8A7F259198C40F8686E98953A2AF1A7E6B48A40513F9A
9583B5504518448053F35CAF8BFAA9EA20DDD8A0E49FA5B084AF43B318FAF385
F34D685151939FD2784DCF97994476D85DE98CBBA0D7F6FAAED2A6ABE14AAA2A
B954E2A223DC22F3D268DB1B85D7F169575F3513CA99951A18614BCD54A8AA1A
F324D723870087B92E05EAEE2081C697F00B590361056DE780C33D0290CF66F2
57E223C416138FE974C66A267A6C8549E0584019749B81C5DFB8E0B6947F1A81
B02AFAEFEEBD02273E6072C22F581E1D9A10B55628ED03736FAA03854784C252
A50085F1C008D56527B4C2E2FAA0A42C9E9871368E653A0B16356CE0FBFED150
EEBDC2CC0E26953789F92F15AE9C19B29AF6EC0A4593782A599B1207F7EFA824
D8E5C2C5DDA6C0E18DD3A2A6A0ED9EF3EE7FAA86EF319435FFC8189C5C3E15A6
D3F668B023E631D146CC8D5C9E6041AD6B07C7533F6AB848E296D83A2B530C44
B73A5D2B48A554C5351714C28B6615915C568F3A5CCA67ADF530C8EFAEA9E220
9449D2B2747D0AC3B46F44C36B0FF273FF3E2BD4C9161EC444D8FD38DCFA35DF
7D956CE18CED82532C40EFA25C2EC1F658A0DEDDC8EA3AE9CF3B12889AB6CD0B
DE7D23097A973B643F3DE8E97258420F9BA2C650759F636A62DF3DC6E4DA8124
8D980C452C638A9A32907BC6ABEBC72DE6B731192CD2CC749C55056AAC333473
EDAF840B31E08031DB686D51ADDAF8F134BFC5A88A53C4784C9DC0D0114C8B49
875196C84DFD9A086884C6AD13ACD5A891975819549C86332833AE6FABD7868A
30C9A3939D09C0A4F2BA13A51689DA1159B1273D97A29167B287134F2E102AF5
A88456CBBCFC359F24E0F5FFB4CDFA955A5BD1C582060673605C54B805A17879
D6787B626157A2A4639EE1D81DC3E988A7318FFD4D9BEDA4FEA22E1D62F5F55C
DB0A24616F56C6866D33E2A4CE3CA69B647F25C6D179E713F3798BE15C7546C9
49129794D16388022BEF2E837B92E1B003D6D009C036188AF869E80211E74AF1
2A5FE6FA640E764B480FE96922646E5402934835EF658B35E194F93E7220CCBE
2A49FBCE90EDF695627B767263B304CF3A0DFC79604AFD8F6ACDD1DD2BD01C34
F923A0A16C4FE80F36B2521E91C46A3BA6EF501D62BABC34C818839E2B3A3743
F168DFE5050A40D36C90A27C98D31CB169CA68C84C5A5500BB2E20484EDB557B
694C1A2E1D1EF11A1C3CD6426B49CDCA4C768384CD036A3B3C9FA53ADC3CDFDA
5C3DB6A22F117580C8B6824620A8D9D9148614676C5E0FEC37E151C56BC112E9
F97776B98D72B4866C2BDDF3131036E8A3D05FB2C7C708C83D266EBEE7B53677
98F34708FDB72A72E4BE8812E16FC40D8F4F742EE8E230408C5EDD2B9F422FDF
3ECC90184FF844FD0CFE1A7AFAC4ED105011B76AEDF891F81818F60CBED897DC
A92E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6861DBBF4AE99A7469F871A3940835
FFBE7F316FA9BB834EAB18625F0960352C75105A92F175850289B1AE177E0343
181E1D092202C86EAB1DF73EEC1E5FCEB16220DB9F316722ABB9E151B95BC7D6
8B8344D8E8CD18EC54E21A2F59754B862BC96E23BCF566986549B52D74CBA618
37F523D3353E1E5807203C5389F9A91497B2D41473C2C2FD9D1F636457DEA441
F86CB0C555DC5819DF5E0F9E41F7E4F614CFBFCDAFDF4608481BBEF56CE53FD2
46A98CD3E577EA66D173B7A9D103D5FC73C73BD5552F2F0EB32DD7438E76C631
213622C13E22912C0E8902E83669835F7015B06265F62C53ADE6F1EE9596EDB0
15C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B01CF3CE65912744C4B419499D3F6B356E8561
A9171BD894DD9FD3EFF11EE4830B1ACD0DF81BCF5D1D288DB0C09C934E3276B5
D231C95BBC9D2ABEE4F39C9AA60948803ABBA21F8768BCC0F612565C54AB722B
328C3B489822CEB0BBC8CC31A585E0DABAE1033FDEF1DEDE464D93255B987241
2694F11CB11FDF9C1E058D7D27AFAF8DC868E0B3173F58F0DEF25FF1EF199DF9
5C809F4776961879470BB5FA281D3A9F7949DDBB523E307ACE84554A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 126 /vector put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9111F4948A3E665E3
0DE92169B2A2137C001654C5F4FDA968F5E3AB43146106BA16C4208830672D20
AD334D8E65DD1BC0932669F8E3F7878D974AD04A77099D790E0B1A3E42F707FA
C9FAC90FB248BC7D5B1D257192FD84E380D071F6952ABB19461B7F75C8713131
545041FCA0C57E8EE4EF7F2450F69072C2F34C6404E7CB16AB4AF621DC277E79
CCDBE5CBF9960DB9CB9F46FAFF42054BB3A72DBE0A78D3DD48183A5D7A243908
C7D32E3E73AAFE73A043E4ACE363BDE50AFF3E8F3D2EDF3BCE4426356A1EB0F6
A17D03A8871F600F0FDE33A4A8A1BE6742EBB877C2455EE0D29239BA4B6D2A97
2FD26D22A24DE2B8FEFBAEFFE023A884D9CA4033CF4DD070EB84C443628C30F4
A27B0D52C8BBC63BA65F27EB36345AFA31435FBDC776A543479E08ABA1641F28
3754F394D09129E2021AB948052942D55A2C8E3FDC4A823D40B7B855C6CECB12
C2D02435E898B78ADDB49EFBD9585EF89E823D6DCDB54785E6F65450244B949C
CECBCF011EDD1413A86B99AB64B8D39EC369374DF7D5CE5FC3D7D8ABD575AA50
538283922859F5EE10BA79CD80B1D30406F982AC1C68A6F1CC9D39FD9BDFBB43
0618FE87FDE2DE4CFBA8A31ADC453325DCF156538BBDCA497D967BBB680E1D2C
774E7952A39843102E7ED5E70CFFDBC3FEEAECF77BF4496D91F80434EE48AB47
11A8338A76D4E95EDDA60FECEA59D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSI10
%!PS-AdobeFont-1.0: CMSSI10 003.002
%%Title: CMSSI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSI10 known{/CMSSI10 findfont dup/UniqueID known{dup
/UniqueID get 5000810 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSI10 def
/FontBBox {-97 -250 1077 759 }readonly def
/UniqueID 5000810 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSI10.) readonly def
/FullName (CMSSI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7E94DF619E5D4CC604
78288A019B254A5A0A8E2D5ED465C9DB3CFEF0F444DA2A7DB2022495EA1B3FF8
BA3E769C503BAC77336BAAEFA8F7B4BCF9BD63253ABE621C7C696DDD22E0EDDE
ABDE1706338BB5F604B4F42356E2A96751B8EAF1112A1BE30B618E7F7BAA96CC
A264B5EA7138FD007E2CBE19B1F008AE13B47252D2956A06299FB28035624C39
08E9E5A4BC08DADE08861DB9940F6F0FA67E97E9A73C9F41525E865D0BF68F8B
6D48D1595EB69B3FF78F5F4B18470370BA219A010F9B5EA904289205DF20C7EC
91A2B866BA05251BD3D00FE5229CE2D2F220B6E25DA5B3C0EAC68979BB312E2C
532264814FF214CBD46C8B9C8E45878C9E28FF334C5CC7DF9D378EA5A37986DF
0450E2D5645371B8C577C28A008AB7A702E89FF337A17D05AFB0FDC55856AB3D
FFF997FF51AAD70FED81A5D307FFBE26E862070E361DDF6D162934B7852D2FC2
F3FE611F218E28CE0B964BE311E59D8729C7C0FC2B2D5781F73C87D64E6388D1
D7798FE70E74E76368174F5E055FB8CDA3809536768B0E6028826436C7E6454E
895EB7E435FF8AA342BDAD46A2C7BE5FEC83B8AD16F2C773F55F58870E70F2D4
FFCA12D89B06A706CC204383C0238C17EFD01E0118FA4CB77681CB7260BBACE8
30C8E7B16669700F884F234C36EE9694841EDD4FE5644949AA28AE2745FACFDC
CFEF1590F99B0DE494BB0851205DF4E7F2EB88CFF794DFA7958F6EC9197021DC
D4C3590B2729779345143AF6C349CBD2F17AEDDDC23AA8F0998C27170C44FE2F
163C1E2FC314C6CE27D6CB497C3A12F6D10B92D699E1578C23B5D9A907EEA297
4BF7D5C4ADFACA310E61EBE5655745FDCC48B661CC2D3EC016A87632AE410B69
C2B98B87D3F46491EE8611E31CE17843B05C05924FA42FBAD7687003C14599DB
08D72670855271EA55082BBF6AC146D452C1531338138D9AAC7E4D2F0CA1FDAD
11E4CB830A9F38A83999F6F0ED15D12FA631B8604D4E3018E625C8BABD8E1075
93F5E17CAD3CADA2210088E71C02CC6654DB4E12F8C2B6B7EADE37E52FAD3FD5
83E45B62FC9B573A6068EF3B43856CD4B6C3E096BA93728B05AEE2BB96C60AEF
58214FD24DEFA63E3FA299289B211A57E4B0CE9EB58414FB78E20151BCED3F4A
9AE6B1D7ED559B3B619385AA8496D6F56D2B353E4B1BCCFA0A50247E283B1540
4300E1119F710664ED5DECAAE9087B8C0CBA63F3FA09F217757B8448D13648BD
D16FEAB50D245C198EDF27C8628CC7BD02385EEB04AF8F4C76308BEF4D640C8D
6F2FDA7BED98F1498CEB1226F009BFAF6425265EC0D13FCACF4909B7495F4211
BA32B04A3B0BCBAC89D6A9088C47C47B4BAC36FB59D9B5D73B2E9E926A9DD183
1AE00AC58E9485379FC6DA119EEA3F6E478F22B60A464F192B2F43379407D4A8
795073B4309C27D8E945468055493D0204B4A57C39CFDC951A04E0288775FCFB
DE3993852671BE697999C9831A33CADEA75B369C179EB8A807CFEEA5CD97BC55
1B0EE49DCC4B6BF4137124123626A5C91603B01B4E0AC759526C129F6AC5BE74
B77B4E431B596E29C17BCCD1CE8279E9C00DF7557AB25770FC9B02762D7EF141
84FFB4730BB8451A485F784A34647741D9B8D2127D158283E01B38BDC39BFA8D
EAE249871ADB347827989E11FAC23F76C2389F8E883B01FFD1EA4968B44D1B1D
760A1FC8F79B50385D8327D6A6381923BE9A2FB8AB0CC6ACAAF5C7701C8F7BDC
81424F63D2CB312235AADD050FC4B71448EE02B7B25C82B6BFB070261919DC1E
32F5E6DD4C38691581D472C254BAF83D7F568016B5AFAEC895187E88AA4D05C8
FEBB3AEBC348AAB84907BC4D85C1F888ECAA5ED2714598384D7369F5FBA0B92B
ACA0B6BCD2D22F9F10B27FBF11A8AF204794CED402A3597D2D469A99CE64BF1C
9242867251B8EFEC0001A1ED0F470A4346BCD9DA22C005A079EE1DE3E33970FE
56620C318D2FD3DD9DFBB773B4FEA7FEECEA9FA1923AD4B2F49DAFEF48E1C529
DBE9EC77299E02DEA39C7B91F9E4F6D68EB224F4555F53E66CD00326CCB5FBAE
70243CDD407BE63DF7BB85E70A99F8B58BEC1562C290D8E50666E1E4EAA484DD
487C567B7BBFEED34A65A6407E3D8925E3C667AF40DB0EFBAE2C07EBE60A83DD
C1A02842861C994C4D314A87986CC94EE74DD4E29AA9E70F393CF956D3BE586B
AC618055571DE00541BA60D022DB49CB62C13FFCB3932DFBFD2D52C8F0C72F1E
9337D95767E376B80AB35264405CC5C385ED6DC9F95535E00C5252DE66961AFC
BC7C83ABFCFD5E0A055E37E7D261A19039D47EE792CA30EA673F80C48C0EEB20
DB21686ABD169A45DB94E35FF086C9946F51409E9E0836041081B04F861838C1
87157DB76A983928BB4122798551318EEB70A32C11A412FD56B7805BDA93AFCD
B11D35FE799224AE30C3BD09D971AC651D06184FCE45D898D09685009DA35EC9
CAB63751F8241297562AE2FEB577AB074D36381B0E5FC0DD5572E3A3079B166F
56C42FBE6147FBDC7EC2ECF6380A70F87D1E44CFD02A70BB3AF4BD9D350C7B21
5DDFD4FE288F0D9EB2FF4C24612FA759B41D0854C04163DC973570B974BAD7B7
BF766AD59D543E808E8F56F831472ECFEECFA7BEA74CBCCB025AB04079AE0838
75852BDC83E1D723824761459DA6A8920A27282043C38BDDB43157A70D552072
400E84CED5FDFDA0F09DF94431956F304F6E92F3DE5F99874F995B467E2038A3
B9C787E650C4A31B2FEFF078BCAC93ACA5816F5DC3FCE322C9DDB15E34856182
BA15F2D56FF4E91573BD2D8B34767974BE928F10EDB3525C2B259F320DF99B88
87801826F2B6AAB2C178270B27730496C44CC83C8036EE6D7D33D6D4C0D871A3
62B7BBC8D8A4E86AEB2CAE76CC7B091B7DF5516EEF043C7D2727FE569B2E28FF
F6BCC6FD3696A85CF5ED26571BFD346494CD6C0974BDE257EDD4A2C53C70FA89
C81F9D32F5CCBAB39A7C00A1BE116FA1254F291AD26C1DE4CBA27BC03C5E5561
8E960A7169F86C0DF884419ECAC607FA82B00CE0B41F7696B2C384582AF6A986
5A9FF800D3A1F4B6C2524F1A4300B9FCDAE2C2050B9882BE4F512FF539FA6BE4
C9577484EB323E7BFA5BDF628875A3634214B14947F7C16541CCE359F72A0E27
C0DB4CCD1653693F7D0BA68D02D5A61AB516173E794BBE4C2C3F34ED9C33BE3C
4A9E20A687498DA1DF7BCB1F6C595B90A5730A10070A54180318A1BD01844585
E78C6EA28EEACCDCB49F1CAF1D21EE97B1DF74523291FCE2ABFE2C000E8F061A
7CAEA494183B9261307CEAC6CD13B362130AE56A651DFACBBE7A6F6747CB61BF
F94BF393769F2A1BD493E1E6502A3507416984FE0F7E509D901A106B857E2448
7284E7ECC2D316EC1C54EE4FD7DC9972DE33B46356E414C92CF8DF9E472F7FE6
7404362C8DFF6BE223B8886503A83A83348F7E9F88726CE068C904D45496494C
641E4443D9474344508ABACF3FF3424383D79A8BDFE6E9D9138E660EB3FFCDCF
8F4E01B24B3070E8B480064D946D0D200F4468EDDF7BDE9D3DAFF03B6D8165F4
0CCB584D542D40DC72554A7597A19EFF3BD72B8520EA71A51048F15E2CA53F3B
C3432278CC19751B38AEB52534BE6CD9BBD489444D313F8C78C2C252AB25AE6A
5EC7D05F3FC21202C4B30A7FF9E1BDC6AE3F6B39B1E09F65E95292FBB1915D20
44D7212A60408FC0F5A2E957BCEBE93DDDAD35D05D23F7E58A3602FB3FC1D431
754A3A21F181C437437D7A22C402DC82275DE903E256979985B6E794B459FEFB
393317FE573DAA5416AC52AED36AE9E79040097E2BAF6A0C6CB68C346E4EB059
5E8A6AA1C751CA4A4094257C39ED48FE4414BE73B4E0BF6394FAC05CEEFD1C3A
F5F5233CEB4625752057789ADF113E1E2F77F5B471A0AAA761AEB46CF37C2360
E701B0DCAE13D4583D8DA516BE2E264230DEEE5053AED15368B6CD81DB761A49
9987A07FC48E1EC246D04D80D86B32F7A093AA23B769B0DBC554EE48DA202C28
55847E3D36D80B7C8E779DFE6EAFE3EB35811A1EF80DC639195D5810D90B4DB9
6BABF8F4468AD92939567DEB43BB00CADB46964B73AE13ECC82C3A57A63A23A9
92A46206C70B027CE34FB81E6919828462F8C2166AEBE9663259CE5D4CD8084A
8BA479CDB203F1B0C3579B3E0B8B8E7AA616D798970A11423C391C25EAD95351
A46A856512518A92C7693B42BE92C2E375047E9DF8620B624AF8DCF2836FB1BA
801C822472AAF5AAA719038D3B53D0AE481753F2EC689394CFF9A911C42BE535
C5B4A187712D487C63A0C8607D67D1DBD0EE766B526184768A93416366B2CCF6
364F2D24B44021D0935CAEA289B120A613378399B53E2B50C11F67B7DC4BB1E5
861D745B7FA3C7906AD591765884FA7D746A19EF86C30309DE0F43D4747EA290
8E3C68BAF4D5F4C0C4E08DCA301E46AE3A0141A58074BA2EBBAD8B3F326C240E
ABE33FA5AC689444E7E04B78C29E49D3A128567D08E712C5EC42EC1BD3D95E19
5A7337B8AB2AA410EF1C0EB31D5766575340016CE477CBA3478FB68A98362C60
18CDC9BA410A545AB339B2AAA2934222DA734F6A1AED9942B43B18BAF77FB63A
71059FA66EE04B76730B499FA022A52139BEFF9CA6CE3F9855C7706E3F804F6D
D622A6929D049F921079DF979F31828C31A73CA0238C0D2F11BE2FD68F2228EF
BDE9837348C10E9F08477F754F6343A39736386912D6BC865BE30D1862BACA23
0DF2061049CDF9F894D73A549C10E7BE7790043F9A642E4676F9DE2B934A7F8A
7B0917DDF3255E6FE122D88DBD80252D0C1C8047A13F835E3FCFBFC0AA1D92CD
F1CAB8D1C673EBDC5601B84615F513E4D9FE1F8CBF2337C9FFCDDAC85B6922E0
0BCB0DEF0FA647E6828DED2F5B20F227AF3A792C0C63AD888D7AF39B10171FB1
A24840EDC55158FF3D8513C89F666A2DECB4AA4A1D46503919A4CFD911977DAE
4779F23271C23BDF14F4EF8352D9C66A7C24100C28CAD7BCD89E6E344EEE173F
CF8BD462E1C67F06D73A9085A2AD1EA3DFCD19EB5FE217406771B80C8A3EE798
A4CBFAB9AA93672B8FC9D02014F7076FBB477A777867C6A6AF2E6FFE3CBF3917
1E4F68BCED22EC345F87A92480F4568006BAC16A2DAB940CB9F3462D254614B7
78ECD86F7C3B3A7DAF06DA2D790F353D9254133C38D668C38082D0CC1BDC226B
4A7EBB1460735A5CB04BCA4D71995483CDDC9EA7D3E070C00D5EA6DD4AB539E7
E5C8E436656C99F30B3B464E5BA6CF7025E098C1FDED8B76260ACF62D1A08DB1
F126517B05C47376D20C999565399B06CC686A817B226101AEE3644A706F3767
372117607576BC2B9AD2637DD13C76F9CF2A356F1B9101496868EA8875C94C3B
D181936A02D5387D1C3C285F2DBEEA25457F6A74FF7E00449FA41878776C0DF7
C58FE07009574AE6B457F3BDE448E71CD04AC7E3C22E0CC8AF56B8B5611C4014
3CC20A39A5FA3D9F6A5599495BA0457109823CE71BAC2B7057AF826DC623213E
A6738E640DAECF08E69FE365741CFF8858337131B53A0AF9E49C3655F62E367E
DE824A37A5DA853E1DD5970EC07D3594A59DA1AA85D4FFE3E9E7745FA7FC7F2F
AFD4B9405C7907F383A5149D4DEACA083B457151CDCE3BA5F0C350945E8B92A1
635239241B8FAF7704E3013EE5D21F421254F23194B537C36F8B673E70073189
8B2DE6C30159232A2D054AB8254A450759ACE9C0B94DE035D9D6E5024E8AB56B
644A5C3EF00A5B2EAC0F89C5FE8D7DEB9BC817EF1F87C2BBD956AFE4DD4B50C3
A3BA4931A32827E612DC3059E97069D3894234BAC0E9AA1DB7B7EEE7F97C648E
0B7E7012CA4977258733C72CE466A2EBA8F2B391BDB7652BC07C2343FC8A4B5F
7C6B926D1B751BFFC6FCFDFAB9CBFF6D630CFC8BF374DF4DFB4B0845237E1E0A
E2D044324B4F05C8C96970451C9348E8AA6F1153EAC8BA1C57FFA09B3A181CF1
3EACE89F204BDBA7884FF6F90D1D0CB578DE1CDE56F526AB11F9DEC4FC09642C
A68C8F1DD2EFC7BB301279F474967B1B10DD7FBA6B09B95E7B4D34F66CAAE07B
F792BFE7755882FC790961FAD109A7C35258021DE25BB14410828F9122E01428
D72EDC917C835553A30FBCAE5D067266A205DDD3AF3A4734371426968A7BF7C7
9F48A5D91B596D765E15356F388E74D100B2243D230BFB33147BBCB298320930
000670CB15B7EE9C787EC751621851C3BD5EA6E70FDE66C9834189A9B0D796C4
1FA4179D594B7E8A39987A3DB806F337945A02DDD2B33D43F1E39FD20F41CA25
BA3B5ECD3B32F961F4A98BE40604BF61732690F3C8B247C6E381AED4F277788E
223F8EBECE8CBA7F48801118966E39D4EEEE3F04B254A87EB21C2E4B00F15AE6
F1E2E59DA6353A45BD0A5BF4B822D86E0E7237809C1F0129B83BA2DF82D5D54A
522697FD78DC73D8A75DC6BEE09FC523E5DDEA837BEDD90DEFCF214640DFD4E5
477FD73B86A08885AC44CEE72F0E27AA63A901F2DCC7C42EC261EDD9699A278B
507ABA7BE7101057297C6A3D67C37D61CA4015E7A46C30202617F3585D719309
7DFF48AF4FBDFC7DD9F66E9549B8B800DDFB2D8AD69B3C6D2C3410E982559191
93498926825E6A96A2CB12F8FD15F858AA28E4F9A9D1457D7B9AB16D9B9D4D45
8FD6853853DF5851C529D134CBE17C6B99A8286519535CC1368407909A5B3CF3
C75B4F86A40BD2EAB1918F03D93A283EB119A8F63E346E7502F0CFD12369B2B0
09A2AD610FD210E8CBAEF4C0498B0E53BF4EE1A00B0C067C113F88E5E000E6F4
FACE37B09D72B4242CD320E4F72F5E123E5578ACC48F604124A0A45559E1DCD9
B58D9EE14F3BC6B4452B9236F6A3CAD7FB7E7D5C949DF2875CE44537DBA8B1D4
C7ECEB76F55EA06D56209E0BAC984AD37A459B6C45B4D7F8B84CA66BF274F1D8
02BF247751733715BDCAFBD55854B0F436BCC787F66B44784838F56AA29F83B7
7D46F0D88835E45159413BEDFEC525BDEDE44291003D313CD2268E240C2388DC
37380A430557D988332DF505B16CE488AF68C8F8626B7EA790121D6ACB87D94C
83418919E0CAF58E41A3E036DF13D13C6B107500902A747CD7D7BF12235A766C
00539129C31EA3E738733C4E443698673AAF4E9588AFAFBD00577721011A12BA
D556591A82E2739AC4234917DD7A850C05F595BD87E0F7719D42DCBD9D724C85
520006A9069E1CB2557D2F97D7A0C54AB564DC62759F793D60A4760854AFB05B
AE445CB9131D0C14B6A6ADFE12DB225684D8254EFD295E7542031CCADC4B27E4
F579C84F35DC502F17DAD24C1775F15F505888F0C3E0FD42357ED07FB5076E78
E862016F7E5835CD5BAF87CECAC4BC92375B426E9512928E748E0328947B1844
E251F3A6E99BAA5B97045D1ACA798296D0CCEC2044E59F32075BB7CB7C636BDE
755916CB59C802761A99B211EEB550EF9BC14AADC70818D0053993C9F299B3D5
AB1427B463A4D76459385F036A95770A8157D225FB75B2C92CA39D1AE7411AD7
19AB8DEAABDE9A2F7530B474CC7119E4335AE12A9CE84BA7FA92AD46D6A7AD54
A676EF1B2B0F3A73E6FB24B20F9702ED522DB7BC30DD2212ED63C88128ED1FA3
7B05D70B0BD95BC58F1330343EAD91AED48EB4252314CA3B7FF921B61E040858
EB3F545F8A8ADD86FD770249BDAAD02613AD5A45C3997E33188E59E004E2255D
BDC14AFFD80F49365D5006821F2A4A2F801820D4D1DA9D11F02CA514EED93425
742D97CC8F84E529FDE0BF4C6437A849A6630BD6760B31870D69C4C15EEA09E1
831354F7C4A70C5F04DDB4B27952C3745B76EE5B168F047E59360CDD5D084D3D
BC8BA0C569C7DDE62033CE401D65C35DF34D2875D4E6E83E7854E73F44EDBADA
9368225C6160F4B0C4032A9800198C83EABDE656CFC1C1B65993D629A1BE0263
41D83EDDCD589F05D1135AE5FDF759260CAA81FFA75E52E7721686F09ED30B6F
A7E3A8B23FD647A7156FC46A098835E130519E9B03D1CEE1E967D5A7DA4BE08A
0478EE9B9C3C85BA2948AB3EAA4D8EBB26E20B6D87ABDCA8A2321F11E92EF5D9
76A0689E9EA28F826E4BBE80618AE6B86D9859F76AEF3855E6CA2380310726B4
A298F819F4B6811F56F206831E8F728FB53D42A3C5F89AA80595E43727F94A43
288B69A9E79012C9C5064D6804B4B23912A3928640F97B6E66D0A2557B6A75D5
6EFA3BE861CE9BAB1CE577EE970A2B5E013E23CB0654536FBDA23C069559E7B9
CE6A7410E3243280D59A85F7D73ECFE99A48A7862A1246B6D2FDC27CF78E3925
06AAF7A5C8A21E06037F69846665BD939F8778B4E07497DA3828E6E17A68E664
40113D303DBF4B3592ECE47ABD799AA24818ADF823691867250E20B4EBE3BCD5
88361731608D5FB9E01318FEEEDC4EDBECA10522A77A7EE07DCCD98A81B0C0C4
F5D7CD77D2AE31E0B926622C10C3F1DAA5B4B94DBA3633A9BB597D61B88938D0
6E70C06C2181A183E413C921943CF4603EEFD14050199BF8ED813ACD6BBBD39E
49284892834C9CC4E58AA991BC8B75FE61B158685B61CD78E170239C4DB99026
40D96AF180BD47A6A223DD43A3BA5C5D75A81BA16A49C3527C954B5F4332877A
AC8032EF42ADACAC6D3E92795379D0514A87FCCDCF206ABF28DAAA3260037986
BA001382BA88B7F284A55A42005FF9B5217845E42483A0B8E6832E4B8D192C3E
D847C41451790B03C73CAA4C3C0AEF61D07D805E2E0256D0F9151810A5B2AC32
E62F5ED5A9F1AE7ED883A2310B6B259F9A3E029B11733A5FCD7A8E4980FC6C96
3F5BFAD105394E5927BB2C6AE18329510CB1B23E80285B97A7DCCE6BA7E6BFBA
90DC8E9B5E68CB80854BF3800C883A0FC39D87414F62A9DF870EE477C0E3C022
D48ED58ABFBD3632006ED6A30CE3EDFBC3B8C76B011FA28110236FD97480DA8D
7B3771CDB92F121D65E6361604D7BC4FFCB47C28FB8228AC9433806DA84FCDFF
9A28AF011A1026F375579D6B2BE6E0D04BB3467D624EA3FD8C81AC0484F0C0CF
4C5DA32E3AA27931C99EA7729B18522469B0B794800963A50B125BFEF60E7C8D
C4FFDC5E0C110F3F87BDBFAFFDD34D64DB5570B70CED903332F9246B39B08751
F43F2F874826FE448CA8EAB5019842E5A61B31C8B5B41280646E05BD736AC4EE
CA264B86354E09CBB1FEA3B1B07645882BAF7AD078678D03392A9C5021968A8D
1A108D502E532661ACC80826F6B2C1A544B2EA6B31210B02F378B7267FCEF207
F652E8847D5A12C4BD430DB29C3CF8005054587DE056A9A5B4156242EE3F3278
3B42B4CD3AB8E1FE0E1ED0A760DF5BFC0D447204DF8BB78A6D5935BD16311413
E03EC42E1FF45AE8A1505C3602BCE59BA44F86604DAF2D7035FCCFACD2C2EE36
15418FB78C6ECB6460A257D620BB27D0C6FE48A9A73A4B8047BD825794466866
0648BAA0DE5F974E8601242B9B2F2095282AB89FD86F19C38BDCFF2FEE4837B0
3926B23A1FC6E07ED41ED0E418682031CA262376E5E71100FDB2DD2AB9A509B0
B2C77225593117637867DFFFC1B61D44C215612A80CE90879E1206F60B338E55
5F7006084C5FC7C79FC3002B338885725A6F2D333B0BD5DBA621C9553039E329
9006BC9BE727E36BDE342257520E1E6059067E61C8F81387AEC816194F2F5070
879DE1E408DCFAAA1475DD31BFA0079CA6EB583F7ED5B36C3AD33E1B31DF985C
BC2E449F0311273DD1737FE15184F720C215B2150258C8B209DFA1E7485FF7DF
DFE21D242F2D7230F082EFC6B89981EE2A0174A3FD44F006AC73DB71E212AF78
385C8DE312C1142EAB1BE8E088FDD98504A37CF7B9A0FF1895685CBC7E66D80F
6505334484802DCFC52428AFEB544E53701C781941782D072EA083BCCE850756
79771CC0B7CD02EEEF695E8641B88263DA1D1475AF2C01FB580AD373FD776917
3768EF10B0AD1B2061CA17B2FF026C8BE681319C7F1DB07D5FEA31BE708B5B78
D04628E0E6DC93B6EB649FD9C304608A592940862867715F3D8A4D3118E90E54
1A27493A8ACA886D71632D335BA2C3D4B521916C7DC87B3B71CAA940E475D9DD
A7C432FD27F2444722C47C711C8C3F7004728BD186AA90B1655E53AB42EBE42F
738C3FF175636DA3E5FFDBEF97EF54B208545BA2C856EE6AADF9A772104B357E
88E672439FA656A63368C9433931AE3936A1D422F01D2569610F19B76F05DFDA
97DE95E775C5A7FA50927075F4FBD9BF4363FFBF9DB92596E6AEDC6828BD2FDF
9350C77634BA9ADE40E24366992B61DD3FF95FFEE1FBF22E6E2DFF6DD5A1E433
F5CF268775E932DE901008BF22CE0121594C3CC85B25613234FB2B02D8ED419B
CA0C71A7CAEEFC8476A51587DCB23F8C8052B6AC265D4D78D21FF723F1DCF79E
1F822A308101EF847E522CD65BC8A3E13E33E42642F97F215D695FEE2A6F88B6
B5960FC343D3AA6D706514DC17DDA6E17C1132E6154B04831A3BFF9799971489
DC78B853DC98D380B73E8C62AB5B09DB700ED830F88257A3F4FE87DB5DA54987
3800379F233D6BACB40A4A29881D7CE5C4A3002D105C7761393F5FFFE41E4AF0
17D99C800675C670A23D0D581BB232692DFD2E9C1634032F801B1605B7B5935D
E360DF785C05F2B4E64F924EC127ABE5A806C6251B5872CFDCEFB6C5A6FC20AA
F76EC190BF2C39399D5173EA362263873353BCC01DD4CBDA701615C378F156B7
D73DC6AA76AD2174DE0015AC5C544A40EC8CC015DAD2DEF33E5B5177382E96E5
770FB29619734F96558B07385B3D9F6B89968B1A85879F04AE37E3C89DC6E5BA
5495A3F8E3E0F10BC63DC27E968A94C978E0A3443CC9D6DAFE88B2B55075A43C
D9AC01498B6D78F90B246FDA6BCEA747E31F032D1C4B2A2C68EC142AD501C8F5
9397DA94F0CB4ABCF0004E68658D7ED186273236386773DD0846FEBFF45891F8
3D7C6C2415E294418094680FAF0FAE451E3AFD5606DE355C147847D1EBDF726D
A9854E410ABDE07AE65FD683739D4E0BC4D29C1A6C26BB38F61FEB33327C0A30
2ADA761565EC4E0AC8A7E4CFD4BD34C4B127A1B9A67A34D02F0A59FB7B91C4F7
6C19C43BD0650289B3BAA778E8535C9EBE3435B71A44934BBE5B432D617A5DC1
D97DFF799CDF6DDA8FA8B03B1B44A9CE8A4CC58AB2911FC42F68FACEB1E99975
44E2291036C9E9F398EED43BC21626B57179DA713A3FDAF40EA26BCD4D704129
E5C129AAD50C48674DB616464CE1F8C9EED130ADA97EF5DE8C546B14767E42B8
7E34588A38F896036396AB7D0A899C0FCBB6024FC1BD2C99DF509D254245F8BF
13B533F2C7B11CA295ECE7F571B108C0E17D4CE31CA47BD45C8C7E4961D635EE
83FDC7FBE13A88CFCFA323189BDB4D37F849DF345B9EB67FB414CD973B565443
3E16A9D97F378B637CFDB69AA21AAC69A7FA195874C2B0A99E3B2EEB9A92F01F
B3E60560ECAC868D077E50944EFA91EAF9280F898F70D2BFAD813077E6976C9A
1BBFE764387881EFE56ED4FB2DB4DE8538FEC068CF7606EB1F36BC3601510810
3658505FC1F18B73A785A5CCDD92F24C7F64EB2EC8DA7CDFCE102A3BD555D4F4
4D859040185BF8D1BCACF00C0DF4C9C9D8F7076BEABA0648F3CABABD0DA9A644
26747D2F4261202FBC4461DFC4960BC0156C3658890389A58961460B0E36FAA7
9E4D51F34A07B29FD74C86FBD155A3B34578E4A46C9DCA62D866E65719C860B2
EDFDDF94046DC7F1FEC4CA7EE725A87ED1B8E0304DFF71FBC4C55DB0EEEE9BFC
16D44414D6B3225752C97A3DBC930BAC7BF0952009DD9E2A6D0128674A89BBE9
0213FE2626BE15556C7EFD4A56874BF7A5165CFAB16932657EA21781B021EC50
D9DB1A5F25C672F44D697EC7018E9255A0DB02222D76AC0053291AD17A703971
4A859F6F8D80FEB7B5804DDFB4AB20C61A98B22E391B1F01EE7B18F689902F58
A61EC4D7156B8AA5C3F8EF26C4B323708431ABB1D868D355D5DA588A4C9D5928
24BBB046D5E05AAB6414905BF4E955FB98D43D8119D133A58A45727B1B55DD54
BCF9054CADF5A565C2A7E40A75B296414316CEF652567D9D1EF92944D49E5782
377520997D61D1571C666E667A87F76B598C8C5631F782CEF581E9AD53162F93
541877CC6D725D55A60A9F7A15DB8EB4B2300939AEAF57286E78D8BB5017A504
62E7B6DAF7D02B1AF0D8C6C95A72983D2CBFA193927B2D47B2D91E2961828094
6F9A8FDAD091E4B6E294BEEDAAAADB004F1CF88CD5F9EA66E213138C01A75C93
A4B036A4C97DED3940693BD468890AA721FC840F1B9EB34BBDD9983E5D44E145
5E1299D9E17F90F6A32999CECB668180AE1169C488285BFD0ED7DD90A8F1F33A
2DCEBD30C2D31CE808F49B1FFF284C1844BF0EE433E2756B95DBFE3400707A1B
AA3F37F3C0F8C8B4CAB908CB6EC81B56524E1E9E3BBEA712A02FEFBB518F378A
05BAAF510479A605A999FB2427B0E4C0908D721A663E45E76C9158A503C3A25F
2A5B18DAFFB02CB1B21836AE98267B84491E8FA8520EDEFC4438113776D3DB85
805DD3B80689E7456C41F36ACA2B6B919F3F4A13316F15F0286C27627F9EAA53
BDD7E24AC7199080A188A92E8FA7A854889F40FF7BC1C80599282B4367FEBDE6
05BA29D7977C8438E38363894D09F9E4324E432EEC7854ADD09B1005B543E5F3
28946BC394A6CD56C3FE8CA35E401BF63AB0936BEB271805839B02DE57CB312D
E60A61A01402B7AC4B61A9466122B1613352D644B759B316D9A998B9312E0F58
0B2EA687B352C7569211A0AE8DF2B8AD103BE704CB26166688CD8E718CD0D3C4
7378BAB1ECC1A0A9E5A9874A6ADA9EF54AF5403FEF87514B5BC4A6066D2B6DAF
24E1C115D18614706EC422D3355D6F2C5CBD5673335828842ADCA79BE8599E8C
5CF7FF1C2305207663326EFB51531005660CB60E7D6AA03BCB894D0E97C7470F
27AF5C4134855179234BD3D7C04111A0516E8019A381DCF79328FA2850BC1D4D
BF9486E5BD53DE03825F86DB6ECC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/UniqueID 5000803 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 11 /ff put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C99266B9E54AECEF94765BC79375C69A0385023
A014B8705931C9A419C8F2B72C3F7054CD6487E75ED2E852BC19302D02C671FE
3892C7AF2A90D6F29771AF31FA95258B6F3434228B377F5FB494E28B5F0393C8
9DEA5E5726B81B7983D241BF7F78928EF8D8528C8F6DB7B307D720243DF00E84
A37A7B2C720348F83ACEFFA78929F4CFB5CCCCB2A074C78B92C8573750B91386
CECD4A1243D1B002B45B933534C0B4C51DDC50BE37BB6E42B8FFD25C9B6A4A80
0FDD3858D50F2166A9067E52D8B453FAE2DED99D96EF9523BD348F2C93DB66CD
B17BE44AE1E2031C3CB01E713C3B3CD4361048D12E21C486C25269C5BAF6F1D4
88A0C86DD17FBE4BF01A7ACD72008DA3EEB0BBE3611F26BD3145C75C837157BB
4F71361A279F53E8F1650875D2C78BAFD6B2FE27B6D4E5AC2018D482EC1B6B5D
77B4E31498CAC80323F512CC04F1ED6421BDD6E2223145BB57CB87C67462CE46
FB1F601245917A88EF37239AE1E09507AFC7D83CE85563A9EBECED817C38D906
A5548034E79403CA78C9E4BD474269F936D2A331B19D0EFE83937474321B7E4C
63295997DD487BC4B2C0BFA6459AEDB6C7A96847EF66B919660191C5125D607F
8F24410F04C89AAD7EBA3A4F70D34C114ED071FD33CD22FA7701FC1C06689FE2
2FD45086F515FDB37F5093D453EDB665FD1BAB42BD48BD91E2599B2F6F443D3F
D15E46A4099AF1EAB3652298DF4739E0176FF1079C6C1A184485AC8F338C531C
83104DBD320B0802AC5712AB606894BA03BCE8DF0A06EAB2C6556C6EC287E4CA
2569ADFBEC712B89883269B15156085158817DF6522B5B69EB2D905514B82B44
C982D45AC18820F47EA3BF4C901B5022E2C377BDE4F771711DCB41A2568BD7B4
6B839965824DA46FDF13F0AA41E867AB0EE9B6DAFA2A6C9ACBA325A5B3037A81
3E04C8E824629F12CF13DE62ED95B11B612792402C43865262C0A99E9288152E
2B829E00FEC6AD579F7061411C2616BB14646863A66388CEE140A4824E1928A4
D986FF96D5FAE3CB65B284DC6A23A528FE75FCA478689CC2DAAC6596402030E7
52E573F2CAB5C5D4E35BF901BF753A99BEF10F6F7B4C179E71C819FD78C775F9
45CF1F96E8A9851FD1B6AFA3BC38AECEFC50B13529777B86D0784CC8191D12E3
06AB566EC86094C199D78ACE0EC6F5D7F164278C77378FA70EF09A72B1959517
47470DF281045CBDC5D79E3B28011E1B05B0B2C8165C01925A4295E19566778D
1DECD358399DFDEFD1BC7FE7E72CCFEB7F146B88E024D64C1DF52EDC27EDF127
CCE4803A855CE905C56495974347FACB84CF5BFBC3B0CD6DD0215958F43DFD88
5AA1B9B227A0CB72438D5B709E1F1339BA996AE1CD79E4B4AAEB0522D6A33308
9D60ECA4B9239BF1DFA46C69EE66E83B575ACE505379C85F2417ABE77AD1AA36
C4D9E22339338A8C39ED089CDACF77E480858F16A866E82BB5274B38781D8269
F5B9C891CB6054ECFF14931A7F224E23659301521582EF0297ACCD473DB2CDB5
FC7EACA9985BD86535435FC007F2A6716EB8694B382FC5DC509B8BAE5AF2D3EB
415A696A0BD18D6928DEC8CFE860422D76C6F828C8C097F44D49591704E76E16
37DAC358DD7B7B3071873543AD1371EEBD6E2DC803A8CAD2B5A44B5B919501C9
39D8CC8862FA528CB2B0496C8D2B7BC2628386B57B83E4F10E1889DD54EE0164
A6FADE99D5A560552BBF4CB56F75BDF7EF4EAABAA7F5067BC827C6580F73AF8C
CE87821D89D241613946E00A8AC1DDE89B884AC727D2D3671B1E6B3ACE3C3093
79B417D0152D46730B96C8E26C2C35ECEC6D8523FCB0D4ED19EBDF2A6A61FE18
D86D356B13D2476CC172FAC6619AAF49C2D84BB0C1257FE26C5AE1B0A607BDD9
51621FC7909E4878A73A3509843976141B26E613154E0C99F41E177BC72FC309
C16351716915D6CF01A8BE9A423FA5F43E1E96717974DC55493BE42E2DA6E97B
1B46D8808A405F05A13710F5F83DC4EB6034245D9E3F9C7791EDBC68F5F97994
A4AED69FADF5B14803CE155F89126059ACB9E640DD85D183B20F741C7987E04C
D8620F6C0B6A2B2A86477B9F5210B9423A422CB0E1ADFCBD642AFA5185DA9A58
6DB3F10E89DC9FB758638A50570E60C6CCA20103E137FAB6E6B2665C293CE809
9C8EC2DF838EEF9396637170B04A96AB37FBF57257A063DB99A2AB7C7FC6074E
95214D8F69051E420E378181844E7658F377CFB1F1BBB230C886D4DDBEBE7CCA
75E3D15F48CCFDEBEA535A7073AEC4EA239708532553AF76576763F957F73C6C
69DF2107458A67236A6946D46B869BCDB3FD4020D74EF4691A2E32C3E791A2FB
3253D0E45DB1F24328D2C40E1BCDD67DDC93D000B040B853682DB28BF5D2F97D
EACEEC8D6F698EA14DDBA17F4475009C4B3893DF4E2509C95F333D2591D248F5
EDC135AC47E7E02ED9644A069DF4C0D9381AE2023B459D2BDF1EE7AD5617AF4C
F103157FD489B7C6E61D552BD9FC0ED6FDE4F158379923B265940EE728909D39
70CAB614CEA5D2CD04432FD731360FB2DBCB3B0D310E402AB68531F24EFE0E83
7B521E63C6235C369385B1A825C13774F084BB9C75870E99EED3D74C0E709A29
BAE397E3666CFD8DD6819974FBD60351C239D33D577BEF7D93CA121C7784219B
5B410BC07955B002B19D9AA6D77FC1A37C26CE236D39CCF9F9E7FFC2703B9FF9
757E6D2333C0C3FCE57F2149FD6E0BC9880E9892434B9CED8AF3DA21C6262806
1972AD6C5849A6E1F67FACB480EB72549CB4619054C05A3808BD59BE9B12A267
DB2241AC855CCA1E0716A3BD97923A67C706D81ACD3B6FE1FB6822DA5137F159
C125E7253BEA5B8282FAE08E61CF63876C325A19032B8BD1C3B9D7979FD59462
0D2C41C35095C17027D8A3C0A06A4802D5DA40784C6836286B39779B9D1E3E84
97AC4AD0199DA57BA39BD8C0106C440C00331A30D25F1B24354C04E99CE4240E
79CBF64F0B750CF8C3BF8D5F97C42E84FAE8E888EB2D900ABF9FC13FF0EBF542
C99D61B4C3BB1FE74AE2F6561430353E2D9231B81F2C3FC56467AE3686DBCB21
092184032BE9E94CE9ACB861242EDAC71CC2EC2D0420F84E4C42A25D524DB87A
A9C5DBAD6F88B855390C61A22C5F2E0AC956073465C3098121B7B7ADD5F49B4D
02E729BF0C4D7959C69CE98FF7BFA51807A948E32C585C2659573B942D5081DC
189C87BE88950BD45A4B27EC224B9A4975E4FE39926B1BC4A84FD202750E8119
74689611EBE9B8294267C7B7CFD5B6C080D1CFBAECAFF1FE4F7D9E5B75D6DE5C
D2DF4E1D80E655FF7F57A659AB967673ABC2F3497000D8119BF42A4DA773A468
C60E3EA49F89C157AFB95453063A4C8654F05AB6A43E09B7150EF8BA3C92EDE4
A98874D6A5D4429B3790665002601ECDAECC03B94893AE706076846884CEB872
A230BEF031B62458CF86648DE591273062DAAA7FA98C4B23EFCD9820702BE0D7
9C81597DF7CA3ABF47211A876A2446E3B42B851EFF7E3946F4DF2C1E647FE519
18977D180C078970661FA88FA0ACE7E1C3BFC161E78E7D5DFBA955BBC065A8D5
1C36750D79466AD420F672E42EC21133189798C91177A0B4400E2ED9895CEEEF
D9943343050911CBBCD7FD079C98368B9869E933DE67FD0590B6CC899B0A5B91
EB7FD6E2BE47503087F5A1BBFD10E78F5CF62E70722C25A42D9AEF2D7E08D5F9
70BC4BD932DE39FFBBE3AA6502111E1E5BAE9DA3DEC9765ADB8FD9007537250A
C39F52007A3870B63CD83FF2537621080EFFE45E8DA78951B9C6494E5E3B14FA
0927DC58E1805E44684D087003AA857E20A8B8A1C1643CEC081383679A22985F
FA375C499E9C5F1EDD16ADC38D36D273670FACE7C492834D53D1AD7FA5A2B9D8
6C947D7E9C659F503E98CA34F8F2196BBE3649EFDECC4B92159BF524FF3C8593
2525DED9219E9E5386824420C02FFA674E862931B8F2766227E7C9518AD19D0B
37BD94CCA4D3C24C379CDE9A8BD74BE80668212C78A5E83AEA1EB93F569A6297
5629C971A7113D80FBFF7F5E60733EAC2C347C837D75EE1D8F80DAC2F3C62CF1
35B410FEDBEA1355B648FB858322112BED993DA3871EA52EC0C2C447168BAE06
E8CA76B2F9B92B9D695611978CBF56F2987DE237AA14CF6ED8D555146BB1A0EF
C0E4DDEBA8D6AE13F7767DE2F634A7AB4D4BA164B6212370756F68D3BD77D4BF
F6FE6B10872AE8C400537DAEE72A40D56C7F5335FA140CEF7FB92EE4CC3B0322
EA7342C4B4AAEB18582699F2D319629472B0B4FD9283EC67B8A07D622BD79035
56EEF7E33709E7D3A6A923C9300CCF5EE62E575814C2BD357D9782DD7E406C21
54364FF8659F62AEEC3D4AE9E4779966A2D12DE81D60B04E0517E1697149D7BA
CECFA4347DC03F2A0E8058B25099A103668EC93CBCAFF7C45DB45F2832324D4B
C553273A8533BFE9B2AB8610CD5CF4AB6C066E0C45038A8474B399DBF22732F8
6692EC837F409B966F709A4BB87B47BC881FA671B5D7F442967F828C6930EA3E
742B25D94F615F566093D5B2CEAA5DE14BA231F00838D29822D05E28BA187DEB
ABB0338CDA2DADD89B823487CF3509DF3635FDF3A55C5529A5927CC99EFABEC8
D2E7B4AE894CC3CE0D7F3D5E3AA4937339583469EACB167C30F7352913F51752
CF1B3D2AD0EB7817C82678183BCDD7B6D751B96F1F41B0FA2BFF186F39D41289
936C8CA2212CB60802F8B627F4CF4606B64CA28011CD674D06D2F83C1886CB4A
96F6CD2A907CD9FFDA282E26F88C850CC44BBD1D69B8A126A71308E2A3EE7783
08B0A441A6F2E666683E71F82E1A42E0C3E29BC2D0B58DB4E214298FD38C486A
C96D335E199315E80B2FA52E64A929F971E98EB3B291C728434D1E5700F3225B
B13EB765F15BCD7C8496D2E68826EA483B9CA57D3FBDEA26A0BCA663C4328967
C99558784B1FB7CDBF91AAE9F73B8F07D3019B911064E0F38D6A8C2546756F95
C43FB2BC3F779C425751E01DF4A0650EAAE3931032CB33DC545AE6E9691CC193
2C97825D658779E1F56C5D8AF7768B37EA78777FB7CD231C75EB293F6889FAD3
45CB02C00DCD2002B6F71DD220B2A524BF4F24B7AF9FB17A014468461DBC6254
C3BF76C5E2D6097F7EBB19CB0A85BC56ADFBF4A3165039C27519E53D79A8ECEC
49B163A486247E1907542515661747DCA7041DF67198A073977F7DEA807C8DB1
5485BEB0EDFE2505912410AA4505A57AE27D36E95E07CBF7F89C2C09830B1002
5E4DD0F3A22578D9B5FA924C49A91A2DC1BF370C9986D8D33311D6C03384BA5B
DA547ACF22647C9B25EEF893D1069E4137AA1D2C3478A64D67C30ABD75ADFF0B
A885A183D5F297DDEEBD08139D7C52E67C0FB880C84AFED405212234A44E38FD
FD58B058716714E7D864BD04079345D8C0321C65F184477C189F177BECFD75CF
E999922554A682C0E0033DA80EA1350062821BEA7A4A5B00AB550C45F4EC22FE
9B185CCCA8B52237ACB0286E1458BD4EDF14DBDFD6B6307B68D352D7E5C6CAA3
26F83D598C207726A66E2B447E59B0D14C0CABECB83DADBAF59390042E613867
DCF06A31ADD1F0F9B4D35E8B4863BA455B8CC1EB80110A38CF4EB487A4F1C9C5
202AA566F5008545964086CDC9791F2A65E11E4395B1FEA1090A0464D3BAB471
77E466E52814CB5DED7FB18FEF76D8AD668D70226928C9F4ABC9FDB7E2AF9734
D970EF479EE7B4617487911E2BA47EE95A27D95D19A1804C50F15D8A24346601
154D628CDC2A8FB41FBFE8B6DDEBD64229B149B5411476949CD4C33726D771E8
D9FFC134168DB82044B1C2B0A6E197B70750AA3F3AC45D577DC8F2B2F3D7F32C
18DE8621B777AC26415563A52355FC631F5FF7A680B22503A24876C6015BCB9F
2989C29FCE47F94F38D92A0B95F436CCCC5FEA77F9DFD0366AFFF71D5C4235E2
5DA26C7002C0A7C995242BF9085DE6C3F481F72FFC38F41776525C4E56809078
192425850A3C02A89F688FF793AA2DB4ED6F92CDA5C803057B1AD6FDB72F6D03
5FE0008866638DC5FC5A6003B04D0603504CB8632241EBA40E91FA886FDFB248
1B01B22D4C4DD44ADC84DDCBF771FF09912A31E756B2EEDF04FD404730CDB633
FE950FFDA75D75C67158C1C351E31F79BDC8CC16B0005F94C9D595079493A324
EB741E32D071C27DE9F4780EB73EEA51EE64D25AFB8629E384D3B7BCD26E5BEC
77118EE6598287EED5C36795982BFD1D5AA3F35211E9B9C73302564AC2120264
86BD877673C46D2ED300870BF7D31710179A1C17EDB6DFE5A099E175C2D0AB2C
7BE2262BFB076587D4630354AE97A51E6B6588782FF60C4E793F8516D11CD3C8
07196EDD021205852F0A38AD235E8499D8A4C84718081C1FCFD41A7456564387
A752538DBECA1AB80FF6D212186EC758990DE4DB6A628B2B4553820F56994827
BBEC6E44D3FE83CBE42ACB224B4920F138256B16ED355C33881D1B4E40CE5E66
3A6F3DE87C8D6BFB9D658197AA7AA769DF6284750AF1D0FAD02F8E0998F85A6F
C735FE33B3A14C38F4A939AAEDF06CAAB87054EF392B5AA254F0C4E5CF5F6F1D
A0AAF73B3F9027A15B0B4EB68BD2753A52B2CD0833EDC1A03E7D24264CDF6F4F
EA389E3E414C086D60E13AD434477CA15CB0E9496F0CB996DF106D3F87F125C9
A9B527A15FB44BE9CAB656C5BCA1DBB8397173FE341A198C254FF36E35A25A01
C0DDAB408C8D07094E93E4A472B94E24248B06056E42DC7608A7CBA5761ED261
6D3BB4A9D8774A3000FFFD1A4EFA57162209F67015715FB632DD0E33688C14C6
9F04036ED04E22C750D2754808ECD94EA9E2A9C7D51CBF6BEFC44496DDE35B7E
4E71AA079E244F152E585EC4B07D6AF6524960675E850077B506788CD5D6F369
DCD1198313D8F54127DC8C61BCB8F1AE808F61EDECAEA88F6007485EE54EA49E
2EC4BEAB3BCBEF64287F63007EC0D0EBAE72A16CDCB85297AFA13BE078731333
7296AC7B346F9F195752CFB0E641FEC4D34E23607A00FC5E98403A926F0BE90B
0E293072107912ADBCA1D04C00F93DF77B966043ECCE6A182BF621A85DEE58F6
7E9D4F8C50DCF6FD63A6304ABEBD21921CD4F188CFC172A8C59173B673E5A5DD
E8EB4CC947F81ED99D106191E9A4DFCED16C6166A408C88B8E5B53A5B96D43D6
54C61EE8E3714211C2B576A2E6F43AFCAF707E13B299406DBE38090C26015D4B
7D1685CAE8C8F09C45C8022F5C2A253B47A43F343B778AADBEB1FD0E5F242E4C
3929A50EE7542B42170A24FCABA1303E87E6BA3A3F694EA7DB8A71E44EF9CEDE
8A7D27C8E8283859557BF8A838ED0AA30182F98A9F53FA6F2BFE9ACC8CA39B17
111DD0312BFE4238050C177966F25F052F22BAB99C443C7EB5883B5B5F788872
7B1D191C98D66300EAEAC07A5AF46861E8FA19A95BDC22306179B030FA554912
5D3A915872291D698A4A676E33E56FDBBDF6E265BBA27AF62114F6DF27F29B9D
5F9B9D2E4D8D103DBB867E77FF9393CA1BA8251CB40FCC78E20218002AFA7D78
E63B6F8E7ED2CDD50F9A7048A0E8CB6216F59961044A63E7F02ECB23EC630818
9E67975E893E12F61E3E5E5CBAD864BFA1DE40C647B5033A676889B30017D854
561441225848EA11B9116B490C9452BF086EA835F936CCD5B5450D22F8EA9165
BAE2216E5155A4CDCA41481B407A444BBB32CA11B100819933166DCBDF998203
02177B3BAA30947DF7BDCDAF0109CAB1D40255653CD5D130D17DE461A9A43C03
8E825BFE23B7069031659403573D9BB142D1CB8910496D0D8E9ED3BF048E9919
BE3DAF5B84A839CF6408EE674B9921739CF8472157FED53B668BF2287D83F204
376B68A11250F54DD1C2779D7074EF460158A09235129A45DD45EE6FB96077FB
259FF29B3785270B6FEC2C5F19AA47685D95ACE4F88CD68E192DD67951A8F090
E5845B068F1ACBD67CAE537D6DC793EAD07F6B6BAAA22BF7A23331CF3AA00D04
5705053A464A6D4E86A567EBE51B1367E7D9A21A38A51C8C52D563ABE4A6D841
178C1DBCCEA5714BEACED969DE68C80F09EC8E945A3E5E598121442201E2B5B2
22D26A76333D3B376B4C25C64BA061E7C3324AF4EC15F910F72FD5BF0C252012
FD2CC2443DC6DAF1998BA1BD9FD697F366CBBC963155762A1019BB8464E1E694
A1528693A0F0D4DFF4142F795910D3CA508DE2A9788D8ACC3D7B368002939A78
60EBC65D691242E273BFF85458B55F0AF9B5995016A472F5A3D816D23E2B4EEE
67B9772CE867889D8D6E203737AB12E9195CEF16FC69E6DFB8C075D15A54D3BF
5DA4F438B407275B723AD687F4D5EB5186F68045CB09752DC462812BA4A272BD
7D40129EE78458DF63F283AB6E0ADDFF5AC82153843CB874454865C9F80627E1
969928DB25AC0182617512CA60C752E6C79272E25EC25BAA32CBA1B8711C76E3
F82D1044E701162B2322664EBAA77C183506F948C866FEBD4C12A5592FD5BA7E
AF241DF61189CE7A2DD6728E9AC8AABBC92A85DD842904EAB4C9B498E928698B
67EC1D449D8D4155F063781BB0D8FB3F83F79718EF2DF7314AAADD45172227E5
371DA9D8F53B7F2AFCD549FFDBC1EB5419A90AAAE92B3C01CE6814858E0770BA
6299FBAE3F45252CE131010BA505924AE933277AE4EB33F59F217A8359FF4467
93A1CCDE6C6E4E48F4740846B3C33F314C1F6CF3B34539C655FEEFDA10BCBFEE
6A59B9B3249FD19860F9E0BCBC5608FBCA6FD5B7D1D13CC0AFD03A3A8E276108
16448D37463D0FF492789DFBAEE18F6F132A4C4D5101000876B3E0FCB3225619
00A723234E4F6A06B7379C50B6C1C10DB50CCE97F8C4BF04B49843449785FFE7
10B5DA264DF7A88FC29D107B62212C013D2C322711FB437BC40CE6AC4C5561D1
D9350738A8CE0FABF5F12E4192F7BC0F90F3CC8A1EC2A62016770A19B47D4A63
6402A1BDC4DA74B2FE9A9FC04B4090A87CBC8CA7548490DE9817BC9112706A7C
08C6A5EFE466B8B13B84EC97CABA1A839E9C25BD06B169C8E4378C7777694E7A
6C4298226E9B7E96793634E4F0E91AC9A3B92B938D6D941E95F0D937443FB0D3
809E738F687ADAE4112EAF2215EAC38B2E4651D5A3F6138B75061067D4E11BFD
BCFD89219686C57C24488A9D8DEB5906C8DF01900500462B67F3E377687734BE
7CB228AB7452B602CF204748B39BBE76D3FFD1FEBF137181CE491593CEE5D694
5DFBC4C28F924803EAB9D248C4ACF555EA64D830BF9A58C5B0DDABC5C1C2A7F7
F2835B886A1E88680D94065A3FD6FB30EFA4A2363506C8ED7C7333E2E355CD8B
1C8457FCE18B0A29B5AA05ADD891D9BAC523BA246B38E755252204EA46A27E16
E6E054E9700C1D8DADF2B97DE46DCB4EC56CC7897800937FBD0E478E1CEABD12
C87D05D7E273F03DA1735389C2A39C3EB33586430742D1F7D7BB934EBB3D692A
B90BD49DC1A732C92110BB352AE215D89C7E3C444C03653B1AAD30C25B6C0A7D
EA26B01DF2E991850F5B079ABE2FF6088BF1D6FD7BE7BEF0F9FAF97009694C38
5790FB31FA34A139B9616269E6447FA3F7BF1D8C649242B0DEC74D3579849D43
47B94ABED2ECCCC4A1B188AB6CBEF4810EE4A99A9A21B46110484C6729380651
4FC03DF3A52B26D549EFC37F9D437235F8A554B7EA5A21B1D353D190F82E2799
59482EB0363599F7DE6744E39E7D63E5E88F031EC15C9B3CACB4E3B9AFAB40A2
8634EE572A6571A20ED600F9E8DCF29FBA2BAC2BB0CE2F6553989FCA8F8EC60A
1F211BE1169D2BCBA0F48BBD55C83FB0F0BCF4BEABC0E067986B1B5CF03267F5
9A66C8EEEB584B60E1D5C07082C113FFDA17CCC96E6D63DC99F2728F0B76A27A
9955C73D9950B52DB23758F5045B983D8334DE2A6253E84C696C6E4B022C1505
DDF517C63F3E653ECF06FE40706AE4E42C1732DF1D6EC34D6B066E61A2AD9384
63F01773453CF19DA29A82AA54DB5BEF8C05AA8892630B5A1BFA8D87BFB3E336
8D283A40DA841FD88F54FFF5FD4B7A10463F4C7A1F24AD327D4B7DC3718367C5
AB12F1A6C2FD1199792FE0545D18E8F605F0560ADB5F9AB86892339358F9DE97
9EBBC1DAC9190E21AEF4A9AB8CD486CF86533406CEF8AB55773CF7861129AC4F
0E09CC20F41662D907E588FAC64749709148C57AE51CE82245073988E0788AC4
61A4AA1D1C3E0D7B2DAD664AA396B804FF087A2292F2B87773942F6028563FEB
22930A6D87795D74B9B2475C8F966991C8B8CC289E4CAA85F3E18C53B167D066
0A87DDE6F98491F686859CE4C5E751C9AED19DEA68142F32A60818E6CD06ECDD
985F20BA29EA6FB8B81A0B64ED4F2EC7ACBB53AF167C31CA4129853271A1340A
09765A51165F31C84C82B450FEE58A8E2C4AD05C3CFFF50762F235A321D2CBF9
DCA34986EE762D2A9139F07357F4F5AECD3FDBF3AF70B5AEF2D533D5401CC639
D9834C1CA09E4A3F4338129BD3723747EB9F66ECB8EEF0AA39A82B4F8A97360F
E34CF694DE4DA0E0C6D3B0453ED8A3ADEF90E67F63882A0341B7B90171E073E6
62C0CB04705C221D97BD5712001677144DBE578A9CD82FB000850FED71CE0C43
8003970DE50C950B47F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS12
%!PS-AdobeFont-1.0: CMSS12 003.002
%%Title: CMSS12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS12 known{/CMSS12 findfont dup/UniqueID known{dup
/UniqueID get 5000804 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS12 def
/FontBBox {-62 -251 978 758 }readonly def
/UniqueID 5000804 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS12.) readonly def
/FullName (CMSS12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C3B9175168F5F1A9
C0DF3159598E2D7266342CEF20B1D7A2FE16E14791B4E287FF321F9B1FFA3BC3
63E7D638862C1C1FB094496395B6EBB00CF22CFC36F7A6BB2F48002F91371910
3547AC863B33E91359F073CFC9B2D475549B52D89F5E3931E2D26A834FB89F85
35B24D1CE098ACA855B0AF248C1E878F3648CA2CFA03712F69DF578ED9C1C8EA
69D46462BCA02370D9A2FD09D7F14FD5FE961EA2094DD46CF91193B32ACF647D
B12977B832AAC3C53F013E784682EB12261ADFEC0872E9CD5923866508337457
7F0CE15A46C9A92F0DAE6EFE3B93DFCEDC0CA1ACE8FC02DC646CD01A01F7DA6D
608F5CE76754CA4A4AB5231D232D50DFE662E538640F30ADFC2BBB3588E8C300
142C0A0008B34677CE1F880293D9800792867FFE1B4FA14EF495824417015378
F78191FF7D7AA7994EF153BAD5F3A07D851131A6998B1895529999F8125CDD7D
86B59EB003502D90EC7BDCE68D373DE9612D22D3B03A8803283D487733F00E00
28C35981040157C74863047AB1775DCD295AC53B633FF93C7256F60DA7F5F567
7AF3482EEF84356410460D34C3CD5EC59C2D878C3A9E48F9FD786A5F9D047357
3E7B22C9647F670ACF812EE3EA6C7620B6D35219200B0CFB45E63B318CCB7FF2
BD2A6372C24011729B9C64DF6EC33A04A4F6F5F981F3847056146AD8560A7EA9
82475197C0B977EEDD88FD8921B65D2C8A23CFB6B36BAC2716CB80063296FD68
5BD495B4F63C787C3201C713016ADADA1E479693C2F427BF0F10BB6AB2F6E1BB
B758CDE41BEA76EBB0636C01692F6DDD77DA1C6F4362F139ADDFF0837C37B00F
FBFEDCDB767A8CABAA776469D9BD6E6D9762ECF34D1C3C275D1D148FEC3D88FE
36EB6C6A620B8E2BA67A0AE80B9715F544D14CF026EF95CB413C0B539C557C55
E7277455B7AC440ED2C77C1B42568D1C5B6D0D2F0B8404EC9AFBE717B4CEC6FE
079CE0BE7030CBFBF8D73E55C766FDBC69D3FE7F4FE9340263AD6F8FBA1147C4
0A97878FD14E3DFCACC3DB0681C548295037E1D768F7EFF9E6084DB71CD4720C
1D75C5B96C38532A3BC26D0928134D100453D84F6241290CBC6CB5075E5F66AA
F03ED8DE63A07BB97330A3B3CB8DAF1E9B32E924F639EBBBC592CA23D5351DA0
032D7BD972EEA75DF2D8E15430511DAA16A7654D9247093183A43E562B99A799
DDD5D1CB197FBF5DB330367A3C52530EA66791325668F653518443D2A9C78E8A
544FC9A34389DED4C616DAFF685A99D29934784297FD22290D57FEA0758C203A
B43CFECC5D2180452F21540BDAF90C304BF1DE08651933B7C10BCA90C8F829CB
8DF6FD10A29FE4EDE6D20852E7E43C0F5D5DDB7AEB1BF29D30CD07BA36A74931
469B2ECE710B676E99271435C01D0BC32B0A72BEC454982BBEC7BCA26396DC3B
2ACA96F836CB6E45AC527C48AF37E1EC4CEB184F7DC0670BE4BF97B56A99D239
5B20763658DB829C336E369A77617A0A34AFD550CE09C91B7CF82B3A5B652D64
C0961DB302FC8E79C00F02695379E94FAF494A8FCADCCF156BECEFB40D3D9415
540A53C6720A67B49BF087BE80C380B95D32277D8A775312160945A2119011DB
FAD703BC869E2861D622507A65719243E283B88D5CB5C3AAAF8FDF0C7C72367C
A325ADD8D891B7EB7FBE1E903C371BEF3836C7AA53E3C3802D9A9EA2797D8E05
2CD51A48E76330D188B409E0A2365916CF833CB86FC4DAEC9B51672DA0C3D789
07CCD0EC3BFF4DCE1A3769E69AD8D597D87917324FC4DA960801350C839C37F8
8D3C8CA488A7D0106E11078AC6D3B694E8A44E5F36E2D7C90685BF19447DC151
4E0252426DD02E7E08501C3EB0D9C864BF32BE2DFB7175D0210BECE87FD50B9D
F0819710B485A3674BE91FFA670166C6938D20E52C66E1190CFAEF126D225205
A728002F9DEDF1DFE02131F245BCD9C2AAA82381AE1577FF689D54388A98EED9
5897DCC7EF560F75C2845FBBF08996A6C4734138E2BB4C565554A02538F32CAC
A0E1BAA22DA9E9CF73EC32E76581309D4659BFDAE4DF5750459F7D9C28BACD23
326299A75134A4EC7FFBC92108DD63AAFBCEB31050DC5657B02A4A9DC8BCEB11
30A800757B3964FBB3B1B354F7AE8FD9F87EFFED5AAABAE605B0662DA3E34E6A
3FF1DFD75D62F061B0E436B14D85E26CE841B868AAE5197FD4BF93C134EE8FD6
6DFC807EB3C63E7E09B5E2AE41DCE803B518626015F56CC3B6BF31461B5CD0FB
5048765834CE4AC08BC587B078EAE39F280591AF10C91113F2F0595F08A7AF0A
6AFED5036805F8569070A02A4E88E810DCCBE7086AB9E774D7757B9140B6A487
05D2652D69F45809242A1841D7B8209B04EE3B98E53BBEC660927D79241B67A1
7561DE46262CD2EA631CC6D586C83C51EFB7AABAB87EFBB4C5DAB2DEAC9603D3
585C41B6EBEC35B1E04FF553CC386174A76FFD4392F500682A350D65766F2A6E
B22B54F7CEDA49B214675AE4661C80763B57BDDFA0DDE948A8907F930F7AF362
01E9C3E09E2AA1FDD6B938E71FCF8BC71F76021275F1E327752BB0792F3A3E82
7C89E1CABAEE06A91E649D6D4264DE433ADEF3A4FDAAF8467F429CC800B0FDCB
B33122260B211EEB89B4A9A0B41EFA9D0E9E3845186C09D81C379334E83F3E38
016EEEFF5AE32BE14C7FBFC371BE767E9F41A4B79532CB791324523B88F9C986
E68478711DC711ED277B25D231047ED775F7F2DF7A1720BE57BC79F4D4B53E25
ED3A78235CECA6593D63C067388DF67367D743C8BCC6BF28A6FFD04F75055CDD
9E643BDB7DB63C41035883C800FE4C90D1D6A5B7022E57D745820555DF933B8B
7352610F757EBDEFF020D89DA275040B9FADDE7544C1FC5A3BE04BFA9174A6B2
C2CE4C529E441CD1C89F3E35AE14599B277882F35DD5D4F734D23503DA669A97
57C456950EFA1EB1B8F0E11D47AB5E3AA5EEB3F4E2532C704A22660A4EF8A6E9
5EE48E35A7DD8E9D6EED1B650739ADDC22422DA7D5F095F4D2EC83307B18E93C
46FA4A7E38EEE0E410CAB30FBF589E9108A2C75ADD6B92634ADA85EB42910E54
556CD86413C0EEEAFAA23ED4313A92D89AA13ED415D3FD0A4C70B506D1EB3945
60DE98A614B9FD5B708F5998D9E9FAEAA2BFCDBC9379A7529393718912646230
1501C1BF3114ABB02AF2EB0F0BA1FFFF101B4F168E6126933CBA71F3A52841EC
19C6319F8ABEC016582DB65B189D69F8B18576DADE57D5007ACD9F48FC6C46B2
E7788082500CD75CCD0FF4F663025051AFFEE5A63BD8428922BA16D33D2DB733
4FC629A418D07EA5AB9E8F2928C2B3CE2E7728425829F059BF4E4D9E44019345
4F93C5C2847AF331E1589A9F6889425C7F81C07B953844C2DE59110D4EF8FB7D
37CAEE30ECEBB89A6D46423D324D261123D8D8E9EC9BB8C5A08E8348504B8553
71ED224595A61A30AE73973C3C0959708B0AA187548FF1DDE756D8CA8E35B409
B56FE1F4DB6497E5D2749177C766A2145A38F89DB483B6A744763D009FE79B7D
F873BE94A07584DADF0BA63361A01C9679110ABCEF756BF7650CDEE1AE068B9C
A35DB06F48A851DD67F8A2641B467D2A7DCE760D2A52A57BB022B6C686B5029D
EA65466EA3887B29E88B221748FDCE289A5D3D1F7D1648EE5275D9D3BEF0F841
815DB5820EDEAB2CF692BB12E0E06CF6E77850D82127BB182CB2B22A712B0A7B
2DADD3ACB6EFE7633BEDEF90DAFCF305E1A662BF4E797C1430173040B91EC63C
54DEA656B6E6C5513590AC60FA6DA144976890940A527A8CC210528E66431438
6D1DB2EB164DFADFDA0DF6792349726002A351CB2333FA0DD7CB17102451C739
9DC8D0F2719303BD23B57150E317E6907925C9052164C182BF22AF1DA3DB68AA
A60DFDA4B48819C41B8F1F63B59CA6A916131EAADDF1C8373AF61EBBF40AE1A3
561A46D7C7C188D792F8CA53A6731E31D6A437E8ED46916D32ADFEC279B3D6F2
C4098D3ADBB17993C5EC68B75686546BDF2197CBDF85F6D98895647EFA676EEE
B4F034F1A5B2E02FB6F500547FD3F619F04EA866305D2E9DB95116EFE6E99BCF
D090D3EB8405B60FA3CE7819BBEE0EC8FDEB0BA89ED4827F0B816850676B1AA6
518D89A2E240F89123B76A2FA4B0785611BCFB3B3D52A065F31486F8A8DFA02F
D4AE04EEDAA7DAD07EB25EC8F6165ADD9BE3C3EECF7A10735E4863BB85855A44
F356085F624F40553AC10E2CCA29EE9682192635061EB159AC4FDE005CA23170
2730408E744F13922FC8F6E50D3581E2128593031F532D4AF9B83949EA999CF8
DC4F827DA0400CC283BB42DD7B5C3FD1BC9B444EF218893BB35FAB0802ACF9F3
86F39BE308A1FE7E192640CDB41A7C2AD6DF62664E0B65D4D51BAF07EEC928F2
83F6AD45AF73FBD55CD6282ECF58BB428E70A614F7C0514D86A8DCD947E71283
D5E389FCB2F945E93F952A0BF65C6F8C4039D418CAB8AC54B1C4EDEECAF9BF88
67C1B8452629A46E151E04E7A2FA928E5639BBBD37697CF484E77FBDF82B435C
98BFAF001AAA118A7EBD5DC32F7B24B4AB1F7E51BFB64B526D9330007B782963
AB27FFEE5F70AAC1FA5442E2D8168C039E01748A039C3A689131FE94F880B68A
77069A844C61A6C98BB1B4F1590EA2716A1B5C396B50A683341F9E170E3094FE
802BB1182BB2F17BC6B948669D3B147FF32AE01CD8F69EEF73D1445381ED2309
A354EB2E29A9010C7B6397255579818A22523FD624EF673B3EEC48AAEF18D74D
DA99B90E05E5431B6B36F777C5D77BE64B1172B484595562D001A18AE3640DFA
405BC69A63460C0C837064459E1D4B7216CAE709E2B418647D60A2FFABAA8790
0FB7C9B846459C1C68F59203875FEF7BDDFC8204D18CD54C272145FE65C966EA
43B87FFF33225E445EDEAB34FE1869428714992B43E324DFACB816DE195E1773
06321365C446DA650A634DFBA56A7F360C6CF0D7AF37EF7FB16C21FD2819940C
461DE8284C44320C48E9837D1E9FF36098B5D244DF3B7CDA03E81647D62B9619
F20255A91926776DE45DFA051C811D22587AA88822BD9DD7518D2AF2B9BA64C4
DA24D03512408EF8550E28293FFCF9AF98F32E57B475724C9C7E723FFD364834
D5DD514065392F9B2AAE36B4BAF5D017F36EA730DA4FA02D2AAA3704C6715919
0BFF56A8F70F73F63AE796DB52FD7F861E9486ED170B5718A96AE2F50C168F81
277899992A9E8E8B2E30A42B4389CD8A5BE57F5C74CBB0963D99A23E8024D640
EE408A699E8E0C9BF7C5A2D72EB716C5EDFFD75798695F26704E9D5CB4F84FE7
D02407ABB81DB79A8DBF52839D28E4C18EA548C1163F8DEF04E5B400E7E4AD0C
B12195B21898D241A158560DB4DE0652FD1C0189220A15F2D3367EA1340CF29B
CF9B3E1191E4A6FEFB3965DFFA22A1278738B1F84CEDCBCB2BD50D2B2EBD78C0
BF95298BB3A67BAFFA78FE0C53D277665EAA3FF29C2DC7DEE1070C71B9D1F1A1
0D8F784CED8C64C9F7F1353625B8A20D9998967044C40ADDEEC59E604DF34B6E
541B242534176E092AFCCE4376235F5078CBFAE6E780242892FA7CD38F05110C
E18D82329631BDD915D67954C5EF38239289D05BCB5447466554809184CDAAF8
72FF8C9858B15EDDE82FBEEBFE4223EB96731EF7E7E03289A818DB17FF0F7055
0881E02DAAFC64C8C2D90A54238F00F4BBF4220435EB9619AA788CC0F45721A6
D659A1D2F0E4D6565DB68B522CB5DF1876D750F62E1724BE71175CD7E34489CE
26B2D193392BEB23D2F7CC570D53AF94E157A9B9980087A36D35F7B644A04E15
992803A2B7A629DBC863D890C85F4520FFCA5B253333E78DE36D8DC1C1559684
96F1B4ABA8729A7C2992B5FAF2DD6AC96B934A7E2933F902535F5EFF762518BE
68D73EC2C947D47C55CEBD77842D472703A519E08A0CDD731179AE74425AF46E
7B1924C3C418A01A584202D71B6971FA8115353B77FBF830EE8F526166204CFC
467B0678093F1C99361A95F76860E5FA170FFE674314C3EF05549E5B37EC7925
A770392344B531E799A4B3FF2F7CDEE784DD83EE019E72B93D1CFC8E0A22AD9C
EF7683BF07123573E2DD156E38DC7C9E7BD934043A78E6BF8B774F2A41734082
47A9C8CBC6B90CC3849160963575DA80ACE6FF24CE7030F2ABE7D154F0136D25
8A7063FEFCA0536DB608D0D60932BFD670CA642FA6FCDEDC699B264729DF1B09
205547869402464424FF3D9DBED6F0E4300E3E7238ACD91DF0E7D75BE26D9633
A318695FE6F38E564A5550B1D88109954AD4C18DFEF5F1247E51EE10CA1D515D
E7498B7813DE16A1F0C0B7EAC9B12867E736CAF5DD4B0F046C037967A52296B5
A617B3D3F9E2A8B4A3055A56A2822269CC563348D2E3917603E98EA9EADCA4CA
3B25AD1C1383ED759EAF4D36CD00A9FBF59CDA77057576C3B17FCA601CD9907B
6FAF24443FE8EB53B6A73FEA434AA8F6EFEAC96EAF36B67537E7C2BB67870C49
A3D4EFECA0491A8317DB36B809899C713F8D5AB2D4E7E1FC61EC80AB862627CB
783D35F2E9F125909D4C0E2E738DAB7740776FD0686F6EBEA3DF9A2B0C51D010
D1EBA517A0E69619BCDBEB06FBABE70082449BA53C10AA86EA4B7CD697309D9B
D10BA8E876680DA091DE9C9D6DCFFE367D80D14DADEFA67B59D7143888AA8C53
1FFCA518BC95086BCDF146209B4861ABB60465A6D6C78BBB404C3E7C1112DCA4
9305087190550CECE3EA832D0712C0CF0B61192675CD247A2B5701A16E75C857
A4C178A22A1D3DBED9B521B404FBAB9B419A719AE42BDC1379FB0CC4BFC871AD
A4F7E7C05DF29A1DCCE36AC9B4BC32B9920AB925EEC4D356F52090CC4A6936FF
4A3748F709B8F5C398ACAE3751FAD82FE555F958CF43B6F73B16AA7D68BA02FE
9DDB752B3ECE4052A653D84AD8BD66E09AC5FADBFA18CE0F2F1DD4189737FD42
1E32B534DC5E3C6862B1D72AA1318BAC7F9DB1895E6E381FBF2670356182800F
375922CB0B2A22617DAA12804F620541DD272F9A6C139843C84A33D9BF2A486B
013E52CB05D9017161827203DBB820DA90D9A8E6851E95719B2D4F1BA81CB12C
E46D15A6BF84F58C48CBEFC4D3E3C5532EE8CDFFF85AD6343D2ACF82C9087ED9
5461F063D846D9B7F9191441037652147A1FB0E5DE51F07980058DF9F5670809
01F3FD83C1A5D27D298B6E57AFBFDA9576EFDF1F95D82E70548C5FB10AF7EA24
863D19438876D55950F9516D7AA746CF61E60CE24E08E6DC996E9F3C45D51959
49F4510CD259F52BB087AE3539D66ADD238985FC4A770E9CE248BDA4FF5FAB5B
B4B336BA1879CAD2EE6D783F3ABE68AE466F1CEA1F103C20FB7C9CD0FBAB2B12
ABFDCA5081BDF6243568FD63D98230C21EA5D82652AA00322178C0B8F3808B87
D38C4E8EC303DD63864D17622873C25435E8396051D09F767EB0D83096C78D90
C44DACFC188EA312D672CB43CC538CB80F4E155643DA96831B0E420FF2F6227E
DB76DF562284CB2141970D34822E321C25140729BEC5D882E212CA38625B8EDD
68B9B6038BFBA2BCACD038FEDCAA58CC5E3B4A60D7970B7920A77815A98DA5BC
23DDB9FAE35B3F807F0E1E1136486D823D64BE32DE4B92F3E228C78B8866192D
F45563086FBBA428BCBB7CDCC3B0DCD52FB71984263646726EA5AB024774E44B
ADF912F9E30F49D3A8FBD63C501BDFA1D33B9063D2971744DA02F4377E10A2DB
1E51E1CEAEAB5EA739A4052DDAA5FF981CD31460E3FA77DE5FE2E1FE1AC7E214
FC46936FBFF87227B9DFF57D3211A340D76D54CD170476B17BCDA45CE4DE64BF
8D3AE8C464A89F33E4D5BEC5838B58331978769574D066CF54ED5E3235C7CF1E
E514D77041F132E00B13A76A105AB3EB6E4FDBD3E17315E1E0A224FADE625694
08F6ED842CA04EF55CDF2CACB2EEA5DABDCB79FF7D9B695DAE2B919122800171
B474419D914DDFDEFA36EDF85943DC7FACAA7942D7ECAF59DD86D180A35D6254
8CE7F4B93D2773F4C10B3F1F19AD86E06EACF7F5DA3B89C848B7F9CC3ADD577E
0CD0B4B58826FFC9AA87E57B85D56DA207C999CAEC4C445BB1B0B552EABF2A75
EB16BCD26BD752DE5BB21DC9C7FCBF815D366C945620B04790905077BBC7B59C
5C42CAB2E88D233A44BB85BC31F795942D5D77E3AD79EB3B6CF717E7A2DD16D8
820AC61CB9D9AE77DA6D70022E0D5A8E50A6A71CC1F45F09194096200AAB16D5
349DDC0791CADB6D70B1A52B91FB3ECFF035BEAAA6D87458CCF25F198AA55DBC
4F8AFB2694D3E78A7D824F2B9C42C3AA21ECC117B8B004B038D6ADA29CE82279
CF5415640D61C99317014F7A67EE6667ED8CA759F074763B8CB82957180A5D93
18753CE09E53B482D9EF5EFBF17A178D989A18C85C4EFDDB0D04DAEE6B1E437B
95623270DD8E171F04F6E164C24A40662AB4E764C282D5792AC260FEE9DD8E74
C25BE31A29C5B5E8A26F80EF3DA2DA6B6F8E4EEE9950C4FA93E8A5F4D5D78DD2
C0BAF774191D60F9ADFD5899C401F71B763191BE777F85C0154CA2791108EC8E
74E16DAC3BAABED15CEB4BE237BC68D35A11EB3245EC4B6DBCE8D9DB3A3DEC0E
B904587BD7D8596239A88A4ACF9EBED68794FD3E8284C0CAABFD226440CA9F32
5E7D713625A76CCDA7E19966C970981DA7BDA396FF13CC82CF8F92A689C548A4
41950E19EA38D134906AB5BD4310C0804AA5AE14942FB061A42892A806EB2F90
AB0BE4FA8EC5C28ADAB2206DEC43695F65DC857CC293EB87DFC72EF11CF40E0D
F869B4B46AA8AC47553808504E9ACA118BA1282A88819BA5811CD22CF510EC67
A526E2839C4C6ECC06D33F742EDF6DD9C8C984A9D3C8B97A7105AE4210D249D9
E512BFAA6C36C321234CF31C37622507086AA68B9910E353C380BC4A0F161099
70BCC9EAF577AF2127F777BDEDF38DFB9FAEC6465F89F9EBDDB9E5A0EF2BC57A
0896DFCB048812043ECE1837EA555CE7B96979ED6AA4EE0C8D840FD79D1404BC
B854A3EEA24BF69832A79E8E96893D92C01FE2954B0F0E0CB32475FB9D59885C
F6FFC306EF68DCA825D0E3C886F8784F75E8591F419DB450FF8B223B3488B01A
29E44C07D03436CBE476CDD0D854EFCFD9EFDA359DE725342D228B37AD79C7AA
2E457B87644FDB7DB9D865AA3238055EC8D3071068CCF46D64152A0B3BE8EA7F
DF692F773EF30B88D25C645AD81DDDCC8E92B8B2113F187B043367F8385D7D1F
4FA38CF4712489D86C4421F37A24FCFE65E6DBA5594E0B769675245E33A7B92E
6013A1EE1D821D2D01E8FDE2BF9AF3A022322D6163D8847F51656D66649397E6
AA4015EA2555171EF2C5150E652BBB3AC10D4FB6E8E33C63A26C4BF383C9A0C5
2D7C437905F1D15C05D0F33FCB07D38E4E64356F86A247051E50E498338D94BB
1EBBA2B4FDC88199ADDEA84FB7DA7532FFE07A66EFDB48304F76211FFB786B60
88CDA448A64B8B4148CD15146950E6C223C7082ED09958E703F7285D805FEC5E
8D6BF3A368D7F70839E2C3B1D6F61214C4B7BBB7C0C7CE9B087697242A113220
0951A536C9AA0C868E953ED4D23971D4D75CF6317C9C0F0253C201C9D63FB99B
313427E795F56DFFAEEC3A001B60A036F901A464DD486E84DC7238495A38315C
6F550A25285E480D0A655FD230C916EB854599F8FC58320EB41AADB3F0520082
86DE165A0B897AF98EC0AFF607F5FD165EEADDB961D323B50906874FDFF9A4FF
ACB66E9AA0CEC1CAE415CE5B7192EB3FD4652AD13082F6030D382322277557DA
76B20A0F9EC71DB72033B0127C67BF03F2F02EDCD4EEA95003891DE555D6E7F1
17FB69A5A863AB0A1291D293606DC3B8EA310CE8530E5C0E5BAE825E6F8AFB10
5CA08163C859B00F256A90C62350D8060054BDA6EF1227A0123488E5617B44AD
A6328F5054E089E29231FB3B37628F0E1C1437FF4440544431095EC48E51E715
2E21B15AD68CAD728482A143B20825EDE6A81483081B11DBF39F3FDE3F88315C
CE14F5FC72D0CE2B0BBEC4ECCF4CBB88173A22DFF9B35F5625F7F2FA6828C291
E69862406864062806CBD2AB14C3AAC6F89947D1BBEE56402BA3AEB92F2D5971
444B587A2ECD90D2CC1BBF58A04D54A96E85BEEB5B006CDE971A5EAE6D17FD45
215BCB813CB06992292E4EE841099C05AE003621FF41709355FF4C05230D764C
E905F6FEA11414B5C5482AA91161D595CCA9F4A75AE64B118C333D1C14E8E6B5
E376A389A50E93575AE88C22B0716CD2E70007C7603CF53612EFCE9555A40931
A1E944C987C5E296628D5BEA71AF08FDDE305DCD987C7A46430CA602B04E222F
A8EFE228269405F7A39BCC51C252674629053177C9197C1318D10D3605058635
0A815ED78C701319A86D41A6F2373E0BA89F53312FAD855809DEAE8E28336A5E
07E9F5919F78454C1E57877EA72AF3198D97F3E7B8F62F158992426255CDAACB
5A8929688B79B79565201B267801D221CA7FF5CD3FDFCF8631CB00BABA394D19
EEAB65A4122AE181B2B3BFC849FD20504AA91B6D5890CCC03C14BED672252AEF
B43E48108DFC90122A6B847E1A6D6B19B4C315746227D2A1DFD09A709E956C5A
59B736153D42F21560CDEFC7CEA6075FE46AEA56BF88439E8394EC81AA35B4E6
BA56B99FB0F160350EA5F974D459A9C16FC44EBD3E6426A440179BB2BC0DA49A
E1E01ABA6531750269CA0B14C98CDDDCB9DE7B859657E04034CEE22C8D2F4AEE
521E96E4602F8A9A45A973757BC16C28CA90C615BB64C9F1D1AD6CA02BF690F1
11F3F352AAB8963C112E248ADEEBD7D3F952B4814D5006EFAA95DFDC835B760A
F6BDE9579B30B0D410D189034218336100F5B4D78BB2FE8AAF9DE3C1A0C2EC49
2B420E78EA66AAE6D90CA2337F8B8EEFC34024628056A672809F1BB8A202E9DA
037E902E82D64D645D915AFA52D94EB8504F2D8A197251CAEC95DB6F60F7659E
C9E6D2C75CB333B35A5973FC3A69861557E8E5F70D06FE25CEA411DD8EC8C29D
374FD8C3F8494DC96BA42B037A07352F9B127222EB69C2D7F5668D9002EDFE05
7A1B955A5231B8473438C150CB363097D50992D58329E7C872F3538FE9A0D765
246FC7A4CF013BBA5EB49AC0C200FB38A60D60FA57C5BD1591E16C6DF0E9D790
8A605BE9800E6B625EBF51DDE0D2C6F5AEA041E44C4D8D404D56AC3E8890B1D0
D7801CBB2EFF4CE298E8D386021388CEA055C9F30CC819AACBA478DAC16F0512
12FE8E4E339EC5B6148560C5E7371B30A0453CDA87B4504F729DAA2E58966782
1414BEF22FEE0C6C251A1ADBF53346C49D8758A51043054DD43A9CB0C68339BB
F318D9817BB21A73D84115F88A4B57DC39AF1883F045A5F57898EE6524D28D1A
B48EF3213A9C2DF58F9F3314C00D5DA0E3BC0B9324E6677B6C832664FCD67F3E
5D40068B1D3FA97701400503B003B7409CB5990E22F116A6A7AEAD507786D69E
2174680182A94D4F5B041DDC9348A4C88609E681516289CE00B9D488D00346AF
4B793CC2F8789AE20F15664DCA80801AACA885A69861DDB635B028C69117E0D2
37322EAE603D9E5F36D5C3450D8A8701E7F96713084E26E755B0E4C7E2F13CC6
E5E8F8E760223EB2447AC9049E6583E1BB8DFD06B73C90286E19DB6929791296
CF8D192F828CC1E4F6845FDDDA7F0A6A53DA6A32CAA76155830C6D64FB4442FF
93BBFE7F821CEE6AEAA62C4655FA5FF17BB15E6552159122E2B3C83FEECFDD6B
ABE4B49B65760A8959B1557013B1546025FDE31753CDEABEA3017BD96043CE93
96C3057EC7284886290DA9DC799B03BFB30452FA9DF70DA52F131A62CDED8F79
7F91B6410CE2030ECD11B2A88A51E7683E1ADC756443E3DBCA2B1565FB9983B3
DC141F7E7A2504FBA9D63C12212418F7D6D276ED6FDB867A40F5E13A8A6BB1AA
2D1E9788F3722D9A5990AF4A84D61E38A31E4D669C396C1C7F1F5E9D890C7B20
C001EDEACE3F5137D02F68AC7F5C2FF778A862F63B2BE7DBEE038A66240A2665
3324215D2855B63231776600000FDA6EE53885CF8553C43878DFA4DB1897AB5F
3AB533E0EFF4F967D9165D8859C7304EB3F6B827F9A905069855EB0B65F096C9
0390DBD430D7CB95D256FBCA2C84E92DDB5E2F0C45F0E437DB6E674C0704CACD
1702F5FD2E5644E1E654B2397FFBEF3509F94ED75893F551F510071713A031A9
81655ADE71775BB8741B7FB0594944AE3671493AE556C493723977BF9B556973
098041E884DC77DD562C9A8C4AB1B4647FE9F4C0EA1905724ABAC23955AB4C4D
7FA18CA0E6F4D65B7027C0CE0C40244598344083128E9ED1B0FA43E438072C9B
0E5AF6A6E496AFD1C17F2FCD94D517E817823BD79E7FF66B34506D2CB302C9F2
4543EC5A6CE2A065B5A34F0A8F44695085720FB20207516DD1326FD7BF5ED753
8860F9714EA612AC940BFB3F2A99812FCD3F99C158D01F61D8EB175C0437A5F0
BD3F5E88666F91BF2147270E3F7FCC7C000BC8035DCA5163728F27F6F5021D3D
1C93918C67ACA6F7A0F632A641723B50942A8C4BF79482BA4D697D7E0D9B0BF6
D6EEBFDF780111D6B13C44E8D4CA4E340F91F3DBB84896227D27ECD23994F18A
B9BD673E53799FDF4AE1A89728C8365DCABE9795CE8ADB16D7A05063FB129728
94CBDA32FF2B70616E3CD5FC4BB8EF6F9A2497B1F691C8D29C3FD67A28DCC7AA
E5136929A362621C641B79A33B10B859C3B97DA616585048E6CCE4ABB65E8311
84197FAADB4FD8E35BF25E2B52BF1B05EB477E3D3BA57CD458DF6ED9F8FA2E87
80889F96A7522D1780368E0EA0604A2DCD4DC6ED1CDBFDFEB90627EF16F0EBDD
6D28D765AB18D443B5F3E244ADDBB2DFD7649A0522AF029786F46017A9444B96
0E5A45CB97A3844E347CAA50F5CA7E4DD3D5A434B209C4249281CDA87EC7EAB0
87129053805E84573B81242A4174EE4C40A5DDC5CCBF7A88147695843FD9CF8D
6B392F5EC62D76B74B23747A378936D15ABE49788E3A5D2585C20A49E9361825
A31E114B11AD245CEE68438291FCD635217245998A494C43FF939F79251D1C08
89469EEEEF72D66F6968152FB4B9166EA09CAD6A232D030D84E3A91906AC151B
11A649AB66D2629C22B022A08258A9832926305F464D7F00047131B18D4FDC42
065410B8CDA9936D2C4F7F343D707046AFA1A7AAFDF06DBBFE0A4A8A49FB1D50
4B9F7F080447FB78F12B9F67080BA3880DF4DE550574FF4FE0DAE4FD3DEC6F2A
302076CEE807016A9F1CC90F8E3931E7E969103386EF303D3A9AEBA3F4DCC833
3863F71AD4E3F64421C7E20BE7E0A72D934801B92AC227D8AF45B19E8E0991E1
F8ABF2974E8942D5B291856F08BCDB537939CE7C9DBE62B59389A45FD1BF7545
10D179C8161F67AA61015DB65138FE432227DEAE7523B23448E7A24D36E45C0D
957907EA05A3A5BF44E187AB50A455543A5C9B309CE708F0D8599A1D95407515
A8016E46C949655500974EF6BD1F405EC4E410F28723A9B84642236991AEAFA2
541C45550530E3E425E4665964DEB055B9DA1AF4D389CF7F1381DB41E160C5AA
5454E81C25DD40264B91D476692CE82EBF1E32CE1AAA4CD6F2DEBC7C631CB91E
61FF7FB9CDC8E8768D124FB22A01BEF75F1BAEB990AFDA94040FFDE65D79022F
C9C93C6AE8E6DED3D179FD7EBD8727D33A11FA08CC2D7ED28882A0FD139DF32C
7BAD8342406E8FC402F1EAD1DC01F121780B1BCCB39DF0EB747379FF2E0E25DA
4003F79B49C407A001417F96D546DD6DD1F0F5E58752F5CEBDBCC7E25DB533DA
4266DB2E18F51D7662D5EB365FBDE04A5CBA3DB7CF506D77A49B9AA008DB990F
B7D81FD3972CDC54C0D1A4419C5CF72D55E44D3355621E4291E81C2CE94B497F
B4053BE94CAD825FFCB7DD58F1B7D36D68E153A93885F00F3F459E65E685540D
F1F363E509A3E0C6958F3C41AF7FBEAA937D2A13D0B973CF85CF49AB3B663AB1
E244C4176B46B2DF64ED3720D91B251D645198EC9AC8D78CE54168B08340435F
E0CBA0C8A897018A5A944B0B46E6FFDBCBFE87C61A04CC59C0147177D1241DDD
A5FDA97A4E34FEB1F5F876023523156374C25DB516A84116F31BE1E5C6E80F8E
51E540054DD57AF1FF5BEED36AE451D3EADA5C23CA58A01AB2C7A45AD5ACDCFA
8998A550A90710648B0E84C45D722F81658E838BEBC405AFC62EF49087E3B4F7
B201AF80247401B9D630C0D358555A757ACB0E73B9A559BC7D9FBD4FB3CDF0BB
2E568F9551B829D6E06F67F94E09F6F13D25CBD4641A415D128113E097C18138
A8F220A011F36FEF383F2A52F2B9E896549C80C2DCD881BE41C111FE9DF7B1D8
9FFE22D6637C7816F1C56B0444D7302AB2D4475A5C9E35D96245E7B45EA22840
3CE3A36DC7756F927C73E60D5D20E5151B72FB1C849E87F107EA53991818ECEE
53D0101CD2232D8663792D0D799C11C79BFDA8E5106463DA8D7E73A400D8CE36
310C8DB27A6939A13AFD91E815743966E35BA3F91FFA2DA466C679AE9FEB57C6
091C527EAB98BBA30F58754800A28845EC2587DB0E256D67D03C2946567CDF9F
F87DFBC51A6478A248A4973515BB928F9C6B03986BC922940155FC52F81E48CF
CA1FD79DB5BEBC7E443719829A917E6AFB29DFEABED40943AB10D5718B63179B
4226FB77F37FFB4EA170387A605125F31CAE629D620A0856AC94AC3D33B27C29
B63606C2DD64C95B4A87FEEA004ACA77833E7C0E07A25E1A066335068FFC44CD
94C970C4D45B3ECC5911582AAE9B4F4B23B504001B7DBACB07CA1385D8DE686E
E875
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600 (physicsnotes02.dvi)
@start /Fa 134[26 1[26 26 26 26 26 26 1[26 26 26 26 26
2[26 26 26 26 26 26 26 26 26 1[26 36[26 26 1[26 2[26
26 26 26 26 26 26 26 45[{}33 49.8132 /CMTT8 rf /Fb 203[22
22 22 22 49[{}4 41.511 /CMSS8 rf /Fc 129[34 126[{}1 58.1154
/CMMI7 rf /Fd 134[44 44 44 44 44 44 44 44 1[44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 44 1[44 8[44 2[44
2[44 9[44 44 44 1[44 44 1[44 1[44 2[44 7[44 44 44 44
44 1[44 44 44 44 44 40[{}46 83.022 /CMTT10 rf /Fe 201[31
31 31 31 31 31 31 4[48 43[{}8 58.1154 /CMSS8 rf /Ff 139[22
5[32 2[30 107[{}3 58.1154 /CMSSI8 rf /Fg 240[42 14[65{}2
83.022 /CMSY10 rf /Fh 207[19 48[{}1 58.1154 /CMSY7 rf
/Fi 129[42 64[42 1[23 23 58[{}4 83.022 /CMMI10 rf /Fj
134[38 38 57 38 43 30 32 28 43 43 42 43 66 20 41 1[20
43 42 25 37 43 37 43 40 17[61 8[47 50 1[53 20[23 1[23
44[{}30 83.022 /CMSSI10 rf /Fk 168[67 1[48 85[{}2 66.4176
/CMSS8 rf /Fl 131[83 1[36 38 38 57 38 43 30 32 28 43
43 42 43 66 20 41 22 20 43 42 25 37 43 37 43 40 4[42
4[78 55 1[57 46 54 1[53 61 59 73 45 58 1[23 59 55 47
50 60 53 1[55 1[39 1[65 2[23 42 42 42 42 42 42 42 42
42 42 1[23 28 23 65 1[32 32 23 4[42 22[48 9[69 1[{}70
83.022 /CMSS10 rf /Fm 133[51 54 2[54 60 42 45 40 60 60
59 60 93 28 1[31 28 60 59 36 52 60 52 60 56 10[77 80
1[65 75 1[74 86 82 102 63 81 1[32 1[78 66 70 84 75 1[77
14[59 1[59 2[39 33[68 11[{}44 119.552 /CMSS12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0.68 0.68 0.88
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -600 -305
a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
Black 0 TeXcolorgray -364 -509 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -364 -509 a -364 -509
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -364 -509 a -364 -509 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -364 -509 a -364 -509 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -364
-509 a -364 -509 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -364 -509 a -364 -509 a
SDict begin H.S end
 -364 -509
a -364 -509 a
SDict begin 13.6 H.A end
 -364 -509 a -364 -509 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -364 -509 a -364
-509 a
SDict begin [/Producer (dvips + Distiller)/Title (Game Physics Notes 02)/Subject
()/Creator (LaTeX with Beamer class version 3.24)/Author (CSCI 321)/Keywords
() /DOCINFO pdfmark end
 -364 -509 a -364 -509 a
SDict begin [ {Catalog} << /PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>6<</P(7)>>7<</P(8)>>8<</P(9)>>9<</P(10)>>10<</P(11)>>11<</P(12)>>12<</P(13)>>13<</P(14)>>14<</P(15)>>15<</P(16)>>16<</P(17)>>17<</P(18)>>18<</P(19)>>19<</P(20)>>20<</P(21)>>21<</P(22)>>22<</P(23)>>23<</P(24)>>24<</P(25)>>]>>
>> /PUT pdfmark end
 -364 -509 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 337 262 a Fm(Game)39 b(Physics)f(Notes)h(02)p
0 TeXcolorgray 0 TeXcolorgray 748 567 a Fl(CSCI)28 b(321)p
0 TeXcolorgray 0 TeXcolorgray 821 755 a Fk(WWU)p 0 TeXcolorgray
0 TeXcolorgray 620 953 a Fl(F)n(eb)n(rua)n(ry)f(1,)h(2013)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 758 -333 a Fm(F)m(o)m(rces)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-364 -174 a Fl(Newton's)27 b(second)f(la)n(w)h(of)h(motion:)35
b Fj(F)g Fl(=)22 b Fj(ma)707 108 y(a)84 b Fl(=)f Fj(F)11
b Fi(=)p Fj(m)678 233 y(v)725 199 y Fh(0)831 233 y Fl(=)83
b Fj(a)679 357 y(p)725 323 y Fh(0)831 357 y Fl(=)g Fj(v)-364
887 y


 gsave nulldevice


 -364 887 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-57 597 a Fj(Co)n(rpus)26 b(omne)h(p)r(ersevera)n(re)i(in)e(statu)g
(suo)g(quiescendi)g(vel)-182 697 y(movendi)g(unifo)n(rmiter)g(in)h
(directum,)f(nisi)g(quatenus)g(a)h(viribus)-182 797 y(imp)n(ressis)f
(cogitur)f(statum)i(illum)f(muta)n(re.)p 0 TeXcolorgray
2187 887 a


 gsave nulldevice


 2187 887 a


 grestore


 2187 887 a


 gsave nulldevice


 2187 887 a


 grestore


 2187 887
a


 gsave nulldevice


 2187 887 a


 grestore


 -364 987 a Fl(Or,)h(in)g(English:)140 987
y


 gsave nulldevice


 140 987 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-57 1144 a Fj(Every)g(b)r(o)r(dy)g(p)r(erseveres)g(in)f(its)g(state)h
(of)f(b)r(eing)g(at)h(rest)f(o)n(r)h(of)-182 1243 y(moving)f(unifo)n
(rmly)g(straight)g(fo)n(rw)n(a)n(rd,)g(except)g(insofa)n(r)h(as)f(it)g
(is)-182 1343 y(comp)r(elled)g(to)g(change)f(its)i(state)f(b)n(y)h(fo)n
(rce)f(imp)n(ressed.)p 0 TeXcolorgray 2187 1434 a


 gsave nulldevice


 2187
1434 a


 grestore


 2187 1434 a


 gsave nulldevice


 2187 1434 a


 grestore


 2187 1434 a


 gsave nulldevice


 2187 1434
a


 grestore


 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 457 -333 a Fm(F)m(o)m(rces)38
b(and)h(Motion)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 690 9 a Fj(F)94 b Fl(=)83 b Fj(ma)707
133 y(a)h Fl(=)f Fj(F)11 b Fi(=)p Fj(m)678 258 y(v)725
224 y Fh(0)831 258 y Fl(=)83 b Fj(a)679 382 y(p)725 348
y Fh(0)831 382 y Fl(=)g Fj(v)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 636 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 640 a Fl(What)28 b(w)n(e)f(really)h(w)n(ant)f(to)g
(kno)n(w)f(is:)36 b(\\Ho)n(w)26 b(do)h(things)g(move?")1816
640 y


 gsave nulldevice


 1816 640 a


 grestore


 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 785 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
789 a Fl(If)h(w)n(e)f(kno)n(w)f(the)i(fo)n(rces)f(and)g(masses,)g(w)n
(e)g(kno)n(w)f(the)i(acceleration.)1924 789 y


 gsave nulldevice


 1924 789
a


 grestore


 1924 789 a


 gsave nulldevice


 1924 789 a


 grestore


 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 935 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
939 a Fl(If)g(w)n(e)f(can)h(integrate)e(the)i(acceleration)e(w)n(e)h
(can)h(get)f(the)g(velo)r(cit)n(y)-7 b(.)1887 939 y


 gsave nulldevice


 1887
939 a


 grestore


 1887 939 a


 gsave nulldevice


 1887 939 a


 grestore


 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 1084 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 1088 a Fl(If)28 b(w)n(e)f(can)h(integrate)e(the)i(velo)r(cit)n(y)f
(w)n(e)g(can)g(get)h(the)f(p)r(osition.)1758 1088 y


 gsave nulldevice


 1758
1088 a


 grestore


 1758 1088 a


 gsave nulldevice


 1758 1088 a


 grestore


 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 1233 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 1237 a Fl(The)g(p)n(roblem)g(is)g(integration|generally)f
(unsolvable.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 1383 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
1387 a Fl(So)h(w)n(e)g(use)h(app)n(ro)n(ximate)e(integration.)p
0 TeXcolorgray -364 1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364 1403 a


 gsave nulldevice


 -364
1403 a


 grestore


 -364 1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364 1403 a


 gsave nulldevice


 -364 1403
a


 grestore


 -364 1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364 1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364
1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364 1403 a


 gsave nulldevice


 -364 1403 a


 grestore


 -364 1403
a


 gsave nulldevice


 -364 1403 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a
-836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -836 1668 a -836
1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 503 -333 a Fm(Euler)38 b(Integration)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-364 -174 a Fl(Exact)28 b(integration)e(w)n(ould)g(move)h(the)h(p)r
(oint)f(along)f(the)i(blue)f(lines.)p 0 TeXcolorgray
0 TeXcolorgray 115 1013 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation4) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 503 -333 a Fm(Euler)38 b(Integration)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
532 -13 a Fi(~)536 9 y Fj(k)6 b Fl(\()p Fj(n)q Fl(\))84
b(=)f Fj(v)9 b Fl(\()p Fj(t)d Fi(;)1071 8 y(~)1075 9
y Fj(x)1113 21 y Ff(n)1150 9 y Fl(\)\001)p Fj(t)534 143
y Fi(~)538 144 y Fj(x)576 156 y Ff(n)q Fe(+1)775 144
y Fl(=)919 143 y Fi(~)923 144 y Fj(x)961 156 y Ff(n)1016
144 y Fl(+)1096 122 y Fi(~)1100 144 y Fj(k)g Fl(\()p
Fj(n)q Fl(\))p 0 TeXcolorgray 0 TeXcolorgray 115 1336
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 96.02798 74.68843 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 186.72108 90.6931 96.02798 74.68843    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
115 1336 a
tx@Dict begin  gsave STV CP T /ps@refangle -90.  def grestore  end
 115 1336 a 115 1336 a
tx@Dict begin { 21.33955 21.33955 } PutCoor PutBegin  end
 115 1336 a 115 1336
a
tx@Dict begin { 5.0 8.82993 7.28334 1.49998 -90.  Uput UUput } PutCoor
PutBegin  end
 115 1336 a 74 1359 a Fi(~)78 1360 y Fj(x)116 1372 y
Fe(0)115 1336 y
tx@Dict begin  PutEnd  end
 115 1336 a 115 1336 a
tx@Dict begin  PutEnd  end
 115 1336 a 115
1336 a
tx@Dict begin  gsave STV CP T /ps@refangle -90.  def grestore  end
 115 1336 a 115 1336 a
tx@Dict begin { 96.02798 74.68843 } PutCoor PutBegin  end
 115 1336 a 115 1336 a
tx@Dict begin { 5.0 8.82993 7.28334 1.49998 -90.  Uput UUput } PutCoor
PutBegin  end
 115
1336 a 74 1359 a Fi(~)78 1360 y Fj(x)116 1372 y Fe(1)115
1336 y
tx@Dict begin  PutEnd  end
 115 1336 a 115 1336 a
tx@Dict begin  PutEnd  end
 115 1336 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end
 
@endspecial 115 1336 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 115 1336 a 115 1336
a
tx@Dict begin { 58.68376 48.01399 } PutCoor PutBegin  end
 115 1336 a 115 1336 a
tx@Dict begin { 5.0 18.50029 9.78334 2.5 90.  Uput UUput } PutCoor
PutBegin  end
 115 1336 a 34 1344 a Fi(~)38
1366 y Fj(k)h Fl(\(0\))115 1336 y
tx@Dict begin  PutEnd  end
 115 1336 a 115 1336
a
tx@Dict begin  PutEnd  end
 115 1336 a 115 1336 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 115 1336 a 115 1336 a
tx@Dict begin { 141.37454 82.69077 } PutCoor PutBegin  end
 115 1336
a 115 1336 a
tx@Dict begin { 5.0 18.50029 9.78334 2.5 90.  Uput UUput } PutCoor
PutBegin  end
 115 1336 a 35 1344 a Fi(~)38 1366 y Fj(k)g
Fl(\(1\))115 1336 y
tx@Dict begin  PutEnd  end
 115 1336 a 115 1336 a
tx@Dict begin  PutEnd  end
 115 1336 a
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation5) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 503 -333 a Fm(Euler)38 b(Integration)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
707 9 a Fj(a)84 b Fl(=)f Fj(F)11 b Fi(=)p Fj(m)678 133
y(v)725 99 y Fh(0)831 133 y Fl(=)83 b Fj(a)679 258 y(p)725
224 y Fh(0)831 258 y Fl(=)g Fj(v)p 0 TeXcolorgray 0 TeXcolorgray
-364 640 a Fd(def)43 b(update\(F,)c(m,)k(dt\):)-277 739
y(a)h(=)f(F)g(/)g(m)-277 839 y(v)h(+=)e(a)h(*)h(dt)-277
939 y(p)g(+=)e(v)h(*)h(dt)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation6) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 422 -333 a Fm(Sample)38 b(Calculations)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-295 -83 a Fj(dt)89 b Fl(=)83 b(1)-283 42 y Fj(m)h Fl(=)f(10)-264
167 y Fj(k)90 b Fl(=)83 b(5)-259 291 y Fj(f)101 b Fl(=)83
b Fg(\000)p Fj(kx)-257 416 y(a)h Fl(=)f Fj(f)18 b Fi(=)p
Fj(m)24 b Fl(=)f Fg(\000)p Fj(kx)8 b Fi(=)p Fj(m)23 b
Fl(=)f Fg(\000)p Fj(x)8 b Fi(=)p Fl(2)-285 540 y Fj(x)-239
506 y Fh(0)-133 540 y Fl(=)83 b Fj(v)-287 665 y(v)-240
630 y Fh(0)-133 665 y Fl(=)g Fj(a)-364 789 y(x)-326 801
y Ff(t)t Fe(+1)-133 789 y Fl(=)g Fj(x)53 801 y Ff(t)102
789 y Fl(+)18 b Fj(x)231 755 y Fh(0)223 810 y Ff(t)277
789 y Fl(=)23 b Fj(x)403 801 y Ff(t)452 789 y Fl(+)18
b Fj(v)573 801 y Ff(t)-364 914 y Fj(v)-326 926 y Ff(t)t
Fe(+1)-133 914 y Fl(=)83 b Fj(v)53 926 y Ff(t)102 914
y Fl(+)18 b Fj(v)232 879 y Fh(0)223 934 y Ff(t)279 914
y Fl(=)k Fj(v)404 926 y Ff(t)453 914 y Fl(+)c Fj(a)576
926 y Ff(t)987 9 y Fl(Euler:)1043 87 y Fj(t)p 1127 117
4 100 v 170 w(x)171 b(v)179 b(a)p 1758 117 V 987 120
773 4 v 1037 190 a Fl(0)p 1127 220 4 100 v 127 w(20)168
b(0)99 b(-10)p 1758 220 V 1037 289 a(1)p 1127 319 V 127
w(20)g(-10)f(-10)p 1758 319 V 1037 389 a(2)p 1127 419
V 127 w(10)h(-20)140 b(-5)p 1758 419 V 1037 489 a(3)p
1127 519 V 99 w(-10)99 b(-25)167 b(5)p 1758 519 V 1037
588 a(4)p 1127 618 V 99 w(-35)99 b(-20)126 b(17)p 1758
618 V 1037 688 a(5)p 1127 718 V 99 w(-55)140 b(-3)127
b(27)p 1758 718 V 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 1071 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 1075 a Fl(Run)27 b Fd(spring.py)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation7) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb -274 -333 a Fm(Online)39 b(discussions)e(of)h
(Midp)s(oint)g(and)h(Runge)g(Kutta)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -364 -174 a Fl(Readings:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 -28 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
-6 a
SDict begin H.S end
 -182 -6 a 0 TeXcolorgray -18 x Fd(http://www.pixar)o(.co)o(m/)o
(com)o(pa)o(ny)o(inf)o(o/)o(res)o(ea)o(rc)o(h/p)o(bm)o(200)o(1/)p
0 TeXcolorgray 1997 -82 a
SDict begin H.R end
 1997 -82 a 1997 -24 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.pixar.com/companyinfo/research/pbm2001/)>>/Subtype
/Link H.B /ANN pdfmark end
 1997
-24 a Fl(,)-182 75 y(Di\013erential)28 b(equation)e(basics,)h(and)g(P)n
(a)n(rticle)g(dynamics)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 221 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
243 a
SDict begin H.S end
 -182 243 a 0 TeXcolorgray -18 x Fd(http://www.nrboo)o(k.c)o(om)o
(/c/)p 0 TeXcolorgray 864 167 a
SDict begin H.R end
 864 167 a 864 225 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.nrbook.com/c/)>>/Subtype /Link H.B /ANN
pdfmark end
 864
225 a Fl(,)h(16.0,)e(16.1)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836
1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation8) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668
a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 483 -333 a Fm(Midp)s(oint)38
b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 359 -13 a Fi(~)362 9 y Fj(k)403 21 y Fe(1)521
9 y Fl(=)82 b Fj(v)9 b Fl(\()p Fj(t)d Fi(;)816 8 y(~)820
9 y Fj(x)858 21 y Ff(n)896 9 y Fl(\)\001)p Fj(t)359 151
y Fi(~)362 173 y Fj(k)403 185 y Fe(2)521 173 y Fl(=)82
b Fj(v)9 b Fl(\()p Fj(t)25 b Fl(+)895 117 y(1)p 895 154
42 4 v 895 230 a(2)947 173 y(\001)p Fj(t)6 b Fi(;)1085
172 y(~)1089 173 y Fj(x)1127 185 y Ff(n)1183 173 y Fl(+)1276
117 y(1)p 1276 154 V 1276 230 a(2)1324 151 y Fi(~)1327
173 y Fj(k)1368 185 y Fe(1)1403 173 y Fl(\)\001)p Fj(t)279
344 y Fi(~)284 345 y Fj(x)322 357 y Ff(n)q Fe(+1)521
345 y Fl(=)664 344 y Fi(~)668 345 y Fj(x)706 357 y Ff(n)762
345 y Fl(+)842 323 y Fi(~)845 345 y Fj(k)886 357 y Fe(2)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 598 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
602 a Fl(Euler)27 b(metho)r(d)g(has)h(erro)n(rs)f Fj(O)6
b Fl(\(\001)p Fj(t)880 572 y Fe(2)916 602 y Fl(\))p 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 748 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray -182 752 a Fl(Midp)r(oint)27
b(metho)r(d)g(has)g(erro)n(rs)h Fj(O)6 b Fl(\(\001)p
Fj(t)1018 721 y Fe(3)1053 752 y Fl(\))p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 897 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 901 a Fl(Can)28 b(tak)n(e)e(steps)h(t)n(wice)g(as)g
(big)g(and)h(get)f(smaller)g(erro)n(rs:)681 1084 y(0)p
Fi(:)p Fl(05)830 1049 y Fe(2)946 1084 y Fl(=)83 b(0)p
Fi(:)p Fl(0025)681 1208 y(0)p Fi(:)p Fl(10)830 1174 y
Fe(3)946 1208 y Fl(=)g(0)p Fi(:)p Fl(001)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation9) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0.2 0.2 0.7 TeXcolorrgb 483 -333 a Fm(Midp)s(oint)38
b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -128 1325
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71643 128.03732 21.33955 21.33955    /Lineto /lineto
load def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128
1325 a -169 1348 a Fi(~)-165 1349 y Fj(x)-127 1361 y
Fe(0)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a -128 1325 a
tx@Dict begin { 181.3862 128.03732 } PutCoor PutBegin  end
 -128 1325 a
-169 1337 a Fi(~)-166 1359 y Fj(k)-125 1371 y Fe(1)-128
1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 96.02798 74.68843 85.35822 85.35822 106.69777 106.69777 64.01866
106.69777   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8
SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
-128 1325 a
tx@Dict begin { 42.67911 106.69777 } PutCoor PutBegin  end
 -128 1325 a -377 1337 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 3.8 neg 5.74445 neg 61.77237 10.74445
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial Fl(Halfw)n(a)n(y)27 b(p)r(oint)-128 1325
y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation10) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 483 -333
a Fm(Midp)s(oint)38 b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 277.4142 106.69777 96.02798 74.68843    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128 1325 a -169
1348 a Fi(~)-165 1349 y Fj(x)-127 1361 y Fe(0)-128 1325
y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 7.11317 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  21.33955
21.33955 Dot end
 
@endspecial
-128 1325 a
tx@Dict begin { 277.4142 96.02798 } PutCoor PutBegin  end
 -128 1325 a -169 1337 a Fi(~)-166 1359 y
Fj(k)-125 1371 y Fe(2)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 96.02798 74.68843 85.35822 85.35822 106.69777 106.69777 64.01866
106.69777   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8
SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 42.67911 106.69777 } PutCoor PutBegin  end
 -128 1325 a -377
1337 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 3.8 neg 5.74445 neg 61.77237 10.74445
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial Fl(Halfw)n(a)n(y)27
b(p)r(oint)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a
-836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation11) cvn /DEST pdfmark
end
 -836 1668 a -836
1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668
a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 483 -333
a Fm(Midp)s(oint)38 b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 277.4142 106.69777 96.02798 74.68843    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 202.72575 53.34888 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 21.33955
21.33955 96.02798 74.68843    /Lineto /lineto load def 1  setlinejoin
false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   3.0 0 0
add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 202.72575
53.34888 277.4142 106.69777    /Lineto /lineto load def 1  setlinejoin
false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   3.0 0 0
add  DotLine  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128 1325 a -169
1348 a Fi(~)-165 1349 y Fj(x)-127 1361 y Fe(0)-128 1325
y
tx@Dict begin  PutEnd  end
 -128 1325 a -128 1325 a
tx@Dict begin { 277.4142 96.02798 } PutCoor PutBegin  end
 -128 1325 a -169 1337 a Fi(~)-166
1359 y Fj(k)-125 1371 y Fe(2)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a
-128 1325 a
tx@Dict begin { 202.72575 37.34421 } PutCoor PutBegin  end
 -128 1325 a -169 1337 a Fi(~)-166 1359 y
Fj(k)-125 1371 y Fe(2)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 96.02798 74.68843 85.35822 85.35822 106.69777 106.69777 64.01866
106.69777   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8
SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 42.67911 106.69777 } PutCoor PutBegin  end
 -128 1325 a -377
1337 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 3.8 neg 5.74445 neg 61.77237 10.74445
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial Fl(Halfw)n(a)n(y)27
b(p)r(oint)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a
-836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation12) cvn /DEST pdfmark
end
 -836 1668 a -836
1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668
a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 483 -333
a Fm(Midp)s(oint)38 b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-128 1325 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71643 128.03732 21.33955 21.33955    /Lineto /lineto
load def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 202.72575 53.34888 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -128 1325 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128 1325 a -169
1348 a Fi(~)-165 1349 y Fj(x)-127 1361 y Fe(0)-128 1325
y
tx@Dict begin  PutEnd  end
 -128 1325 a -128 1325 a
tx@Dict begin { 181.3862 128.03732 } PutCoor PutBegin  end
 -128 1325 a -169 1337 a Fi(~)-166
1359 y Fj(k)-125 1371 y Fe(1)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a
-128 1325 a
tx@Dict begin { 213.39554 53.34888 } PutCoor PutBegin  end
 -128 1325 a -169 1337 a Fi(~)-166 1359 y
Fj(k)-125 1371 y Fe(2)-128 1325 y
tx@Dict begin  PutEnd  end
 -128 1325 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation13) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 483 -333
a Fm(Midp)s(oint)38 b(Metho)s(d)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -364 -174 a Fl(One)28 b(midp)r(oint)f
(metho)r(d)g(step)g(of)h(size)f(\001)p Fj(t)34 b Fl(is)27
b(mo)n(re)g(accurate)h(than)f(t)n(w)n(o)f(Euler)-364
-74 y(steps)h(of)h(size)f(\001)p Fj(t)6 b Fi(=)p Fl(2.)p
0 TeXcolorgray 0 TeXcolorgray -128 1501 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 96.02798 74.68843 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 186.72108 90.6931 96.02798 74.68843    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 2.  2.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add
2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 2.  2.
 scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 202.72575 53.34888 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -128 1501 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128 1501 a -169
1524 a Fi(~)-165 1525 y Fj(x)-127 1537 y Fe(0)-128 1501
y
tx@Dict begin  PutEnd  end
 -128 1501 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation14) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 422 -333
a Fm(Sample)38 b(Calculations)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -295 -42 a Fj(dt)89 b Fl(=)83
b(1)-283 83 y Fj(m)h Fl(=)f(10)-264 207 y Fj(k)90 b Fl(=)83
b(5)-259 332 y Fj(f)101 b Fl(=)83 b Fg(\000)p Fj(kx)-257
456 y(a)h Fl(=)f Fj(f)18 b Fi(=)p Fj(m)24 b Fl(=)f Fg(\000)p
Fj(kx)8 b Fi(=)p Fj(m)23 b Fl(=)f Fg(\000)p Fj(x)8 b
Fi(=)p Fl(2)-285 581 y Fj(x)-239 547 y Fh(0)-133 581
y Fl(=)83 b Fj(v)-287 705 y(v)-240 671 y Fh(0)-133 705
y Fl(=)g Fj(a)-364 830 y(x)-326 842 y Ff(t)t Fe(+1)-133
830 y Fl(=)g Fj(x)53 842 y Ff(t)102 830 y Fl(+)18 b Fj(x)231
796 y Fh(0)223 850 y Ff(t)277 830 y Fl(=)23 b Fj(x)403
842 y Ff(t)452 830 y Fl(+)18 b Fj(v)573 842 y Ff(t)-364
954 y Fj(v)-326 966 y Ff(t)t Fe(+1)-133 954 y Fl(=)83
b Fj(v)53 966 y Ff(t)102 954 y Fl(+)18 b Fj(v)232 920
y Fh(0)223 975 y Ff(t)279 954 y Fl(=)k Fj(v)404 966 y
Ff(t)453 954 y Fl(+)c Fj(a)576 966 y Ff(t)987 -208 y
Fl(Midp)r(oint:)1107 -113 y Fj(t)p 1191 -83 4 100 v 171
w(x)171 b(v)179 b(a)p 1822 -83 V 987 -80 837 4 v 1037
-10 a Fl(0.0)p 1191 19 4 100 v 1271 -10 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@A1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 -10 a
Fl(20)1522 -10 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 5.00002 2.5 3.27777 }
false /N@A2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1522 -10 a Fl(0)1664 -10 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@A3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1664 -10
a Fl(-10)p 1822 19 4 100 v 1037 89 a(0.5)p 1191 119 V
1271 89 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@B1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 89 a Fl(20)1495 89 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 8.33334 4.16667 3.27777
} false /N@B2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1495 89 a Fl(-5)1664
89 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@B3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1664 89 a Fl(-10)p 1822 119 4 100 v 1037 189 a(1.0)p
1191 219 V 1271 189 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@C1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 189 a Fl(15)1453 189 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@C2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1453
189 a Fl(-10)1705 189 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 8.33334 4.16667 3.27777
} false /N@C3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1705 189 a Fl(-7)p 1822 219 4
100 v 1037 288 a(1.5)p 1191 318 V 127 w(10)98 b(-13)140
b(-5)p 1822 318 V 1037 388 a(2.0)p 1191 418 V 168 w(2)99
b(-15)140 b(-1)p 1822 418 V 1037 488 a(2.5)p 1191 518
V 140 w(-5)99 b(-15)168 b(2)p 1822 518 V 1037 587 a(3.0)p
1191 617 V 99 w(-13)98 b(-13)168 b(6)p 1822 617 V 1037
687 a(3.5)p 1191 717 V 99 w(-19)98 b(-10)168 b(9)p 1822
717 V 1037 787 a(4.0)p 1191 816 V 99 w(-23)140 b(-4)126
b(11)p 1822 816 V 1037 886 a(4.5)p 1191 916 V 99 w(-25)167
b(1)127 b(12)p 1822 916 V 1037 986 a(5.0)p 1191 1016
V 99 w(-24)167 b(8)127 b(12)p 1822 1016 V 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A1 /N@B1 InitNC { /AngleA 35.  def /AngleB 45.  def
1.  1.  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore  grestore end

1852 437 a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A2 /N@B1 InitNC { /AngleA 180.  def /AngleB 45.  def
0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore  grestore
end
 1852 437 a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A2 /N@B2 InitNC { /AngleA 35.  def /AngleB 45.  def
1.  1.  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1852 437
a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A3 /N@B2 InitNC { /AngleA 180.  def /AngleB 45.  def
0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore  grestore
end
 1852 437 a 1107 1181 a Fl(First)28 b(add)g(half)f(of)h
(the)f(derivative.)p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation15) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 422 -333
a Fm(Sample)38 b(Calculations)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -295 -42 a Fj(dt)89 b Fl(=)83
b(1)-283 83 y Fj(m)h Fl(=)f(10)-264 207 y Fj(k)90 b Fl(=)83
b(5)-259 332 y Fj(f)101 b Fl(=)83 b Fg(\000)p Fj(kx)-257
456 y(a)h Fl(=)f Fj(f)18 b Fi(=)p Fj(m)24 b Fl(=)f Fg(\000)p
Fj(kx)8 b Fi(=)p Fj(m)23 b Fl(=)f Fg(\000)p Fj(x)8 b
Fi(=)p Fl(2)-285 581 y Fj(x)-239 547 y Fh(0)-133 581
y Fl(=)83 b Fj(v)-287 705 y(v)-240 671 y Fh(0)-133 705
y Fl(=)g Fj(a)-364 830 y(x)-326 842 y Ff(t)t Fe(+1)-133
830 y Fl(=)g Fj(x)53 842 y Ff(t)102 830 y Fl(+)18 b Fj(x)231
796 y Fh(0)223 850 y Ff(t)277 830 y Fl(=)23 b Fj(x)403
842 y Ff(t)452 830 y Fl(+)18 b Fj(v)573 842 y Ff(t)-364
954 y Fj(v)-326 966 y Ff(t)t Fe(+1)-133 954 y Fl(=)83
b Fj(v)53 966 y Ff(t)102 954 y Fl(+)18 b Fj(v)232 920
y Fh(0)223 975 y Ff(t)279 954 y Fl(=)k Fj(v)404 966 y
Ff(t)453 954 y Fl(+)c Fj(a)576 966 y Ff(t)987 -208 y
Fl(Midp)r(oint:)1107 -113 y Fj(t)p 1191 -83 4 100 v 171
w(x)171 b(v)179 b(a)p 1822 -83 V 987 -80 837 4 v 1037
-10 a Fl(0.0)p 1191 19 4 100 v 1271 -10 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@A1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 -10 a
Fl(20)1522 -10 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 5.00002 2.5 3.27777 }
false /N@A2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1522 -10 a Fl(0)1664 -10 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@A3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1664 -10
a Fl(-10)p 1822 19 4 100 v 1037 89 a(0.5)p 1191 119 V
1271 89 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@B1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 89 a Fl(20)1495 89 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 8.33334 4.16667 3.27777
} false /N@B2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1495 89 a Fl(-5)1664
89 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@B3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1664 89 a Fl(-10)p 1822 119 4 100 v 1037 189 a(1.0)p
1191 219 V 1271 189 a
tx@Dict begin tx@NodeDict begin {6.55556 0.0 10.00003 5.00002 3.27777
} false /N@C1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1271 189 a Fl(15)1453 189 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 13.33336 6.66667 3.27777
} false /N@C2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1453
189 a Fl(-10)1705 189 y
tx@Dict begin tx@NodeDict begin {6.55556 0.0 8.33334 4.16667 3.27777
} false /N@C3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1705 189 a Fl(-7)p 1822 219 4
100 v 1037 288 a(1.5)p 1191 318 V 127 w(10)98 b(-13)140
b(-5)p 1822 318 V 1037 388 a(2.0)p 1191 418 V 168 w(2)99
b(-15)140 b(-1)p 1822 418 V 1037 488 a(2.5)p 1191 518
V 140 w(-5)99 b(-15)168 b(2)p 1822 518 V 1037 587 a(3.0)p
1191 617 V 99 w(-13)98 b(-13)168 b(6)p 1822 617 V 1037
687 a(3.5)p 1191 717 V 99 w(-19)98 b(-10)168 b(9)p 1822
717 V 1037 787 a(4.0)p 1191 816 V 99 w(-23)140 b(-4)126
b(11)p 1822 816 V 1037 886 a(4.5)p 1191 916 V 99 w(-25)167
b(1)127 b(12)p 1822 916 V 1037 986 a(5.0)p 1191 1016
V 99 w(-24)167 b(8)127 b(12)p 1822 1016 V 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A1 /N@C1 InitNC { /AngleA 0.  def /AngleB 45.  def 0.67
 0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore  grestore end

1852 437 a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@B2 /N@C1 InitNC { /AngleA 180.  def /AngleB 45.  def
0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore  grestore
end
 1852 437 a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@A2 /N@C2 InitNC { /AngleA 0.  def /AngleB 45.  def 0.67
 0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1852 437
a 1852 437 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@B3 /N@C2 InitNC { /AngleA 180.  def /AngleB 45.  def
0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore  grestore
end
 1852 437 a 990 1181 a Fl(Then)26 b(add)i(all)f(the)g
(\\half-derivative.")p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation16) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 278 -333
a Fm(F)m(ourth)39 b(Order)g(Runge-Kutta)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 359 -13 a Fi(~)362
9 y Fj(k)403 21 y Fe(1)521 9 y Fl(=)82 b Fj(v)9 b Fl(\()p
Fj(t)d Fi(;)816 8 y(~)820 9 y Fj(x)858 21 y Ff(n)896
9 y Fl(\)\001)p Fj(t)359 151 y Fi(~)362 173 y Fj(k)403
185 y Fe(2)521 173 y Fl(=)82 b Fj(v)9 b Fl(\()p Fj(t)25
b Fl(+)895 117 y(1)p 895 154 42 4 v 895 230 a(2)947 173
y(\001)p Fj(t)6 b Fi(;)1085 172 y(~)1089 173 y Fj(x)1127
185 y Ff(n)1183 173 y Fl(+)1276 117 y(1)p 1276 154 V
1276 230 a(2)1324 151 y Fi(~)1327 173 y Fj(k)1368 185
y Fe(1)1403 173 y Fl(\)\001)p Fj(t)359 352 y Fi(~)362
374 y Fj(k)403 386 y Fe(3)521 374 y Fl(=)82 b Fj(v)9
b Fl(\()p Fj(t)25 b Fl(+)895 318 y(1)p 895 355 V 895
431 a(2)947 374 y(\001)p Fj(t)6 b Fi(;)1085 373 y(~)1089
374 y Fj(x)1127 386 y Ff(n)1183 374 y Fl(+)1276 318 y(1)p
1276 355 V 1276 431 a(2)1324 352 y Fi(~)1327 374 y Fj(k)1368
386 y Fe(2)1403 374 y Fl(\)\001)p Fj(t)359 524 y Fi(~)362
545 y Fj(k)403 557 y Fe(4)521 545 y Fl(=)82 b Fj(v)9
b Fl(\()p Fj(t)25 b Fl(+)18 b(\001)p Fj(t)6 b Fi(;)1023
544 y(~)1027 545 y Fj(x)1065 557 y Ff(n)1121 545 y Fl(+)1201
524 y Fi(~)1204 545 y Fj(k)1245 557 y Fe(3)1280 545 y
Fl(\)\001)p Fj(t)279 736 y Fi(~)284 737 y Fj(x)322 749
y Ff(n)q Fe(+1)521 737 y Fl(=)664 736 y Fi(~)668 737
y Fj(x)706 749 y Ff(n)762 737 y Fl(+)852 659 y Fi(~)855
681 y Fj(k)896 693 y Fe(1)p 855 718 76 4 v 872 794 a
Fl(6)959 737 y(+)1049 659 y Fi(~)1052 681 y Fj(k)1093
693 y Fe(2)p 1052 718 V 1069 794 a Fl(3)1156 737 y(+)1246
659 y Fi(~)1249 681 y Fj(k)1290 693 y Fe(3)p 1249 718
V 1266 794 a Fl(3)1353 737 y(+)1443 659 y Fi(~)1446 681
y Fj(k)1487 693 y Fe(4)p 1446 718 V 1463 794 a Fl(6)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation17) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 274 -333
a Fm(F)m(ourth)39 b(o)m(rder)f(Runge)h(Kutta)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -364 -174 a
Fl(T)-7 b(angents)26 b(calculated)h(at)h(the)f(dots:)800
-223 y Fc(~)804 -208 y Ff(k)834 -200 y Fb(1)p 804 -193
57 4 v 817 -145 a Fe(6)889 -174 y Fl(+)978 -223 y Fc(~)982
-208 y Ff(k)1012 -200 y Fb(2)p 982 -193 V 995 -145 a
Fe(3)1067 -174 y Fl(+)1156 -223 y Fc(~)1160 -208 y Ff(k)1190
-200 y Fb(3)p 1160 -193 V 1172 -145 a Fe(3)1244 -174
y Fl(+)1333 -223 y Fc(~)1337 -208 y Ff(k)1367 -200 y
Fb(4)p 1337 -193 V 1350 -145 a Fe(6)p 0 TeXcolorgray
0 TeXcolorgray -128 1385 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 213.39554 0.0 -21.33955 0.0    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 128.03732 0.0 -21.33955    /Lineto /lineto load def 1
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 74.68843 96.02798 74.68843 21.33955 42.67911   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 213.39554 64.01866 106.69777 64.01866 21.33955 21.33955   1. 0.1
0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 53.34888 112.03265 34.67677 21.33955 -21.33955   1.
0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8 SLW 0.5 0.5 1
 setrgbcolor  1. .setopacityalpha   1  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.5 0.5 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 213.39554 81.09036 192.05598 85.35822 106.69777 90.6931 21.33955
64.01866   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave 0.8
SLW 0.5 0.5 1  setrgbcolor  1. .setopacityalpha   1  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71643 128.03732 21.33955 21.33955    /Lineto /lineto
load def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 202.72575 48.01399 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 192.05598 85.35822 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
2.  2.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 202.72575 10.66977 21.33955 21.33955    /Lineto /lineto load
def 1  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  1  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-128 1385 a
tx@Dict begin { 10.66977 21.33955 } PutCoor PutBegin  end
 -128 1385 a -169 1408 a Fi(~)-165 1409 y
Fj(x)-127 1421 y Fe(0)-128 1385 y
tx@Dict begin  PutEnd  end
 -128 1385 a -128 1385
a
tx@Dict begin { 181.3862 128.03732 } PutCoor PutBegin  end
 -128 1385 a -169 1397 a Fi(~)-166 1419 y Fj(k)-125
1431 y Fe(1)-128 1385 y
tx@Dict begin  PutEnd  end
 -128 1385 a -128 1385 a
tx@Dict begin { 211.26144 44.81319 } PutCoor PutBegin  end
 -128
1385 a -169 1397 a Fi(~)-166 1419 y Fj(k)-125 1431 y
Fe(2)-128 1385 y
tx@Dict begin  PutEnd  end
 -128 1385 a -128 1385 a
tx@Dict begin { 202.72575 96.02798 } PutCoor PutBegin  end
 -128 1385 a
-169 1397 a Fi(~)-166 1419 y Fj(k)-125 1431 y Fe(3)-128
1385 y
tx@Dict begin  PutEnd  end
 -128 1385 a -128 1385 a
tx@Dict begin { 211.26144 10.66977 } PutCoor PutBegin  end
 -128 1385 a -169 1397
a Fi(~)-166 1419 y Fj(k)-125 1431 y Fe(4)-128 1385 y
tx@Dict begin  PutEnd  end

-128 1385 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 2.0 2. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  21.33955
21.33955 Dot end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 2.0 2. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  96.02798
74.68843 Dot end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 2.0 2. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  112.03265
34.67677 Dot end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 2.0 2. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  192.05598
85.35822 Dot end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray    /DS 11.38092 0. CLW
mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1.  1.  scale (X) show grestore } bind def  192.05598
66.15274 Dot end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation18) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 278 -333
a Fm(F)m(ourth)39 b(Order)g(Runge-Kutta)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 -178 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray -182 -174 a Fl(Euler)27
b(metho)r(d)g(has)h(erro)n(rs)f Fj(O)6 b Fl(\(\001)p
Fj(t)880 -204 y Fe(2)916 -174 y Fl(\))p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 -28 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 -24 a Fl(Midp)r(oint)27 b(metho)r(d)g(has)g(erro)n
(rs)h Fj(O)6 b Fl(\(\001)p Fj(t)1018 -55 y Fe(3)1053
-24 y Fl(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 121 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
125 a Fl(F)n(ourth)27 b(o)n(rder)h(Runge)e(Kutta)h(has)h(erro)n(rs)f
Fj(O)6 b Fl(\(\001)p Fj(t)1320 95 y Fe(5)1356 125 y Fl(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 270 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray 660 457 a Fl(0)p Fi(:)p
Fl(05)809 423 y Fe(2)926 457 y Fl(=)82 b(0)p Fi(:)p Fl(00250)660
582 y(0)p Fi(:)p Fl(10)809 547 y Fe(3)926 582 y Fl(=)g(0)p
Fi(:)p Fl(00100)660 706 y(0)p Fi(:)p Fl(20)809 672 y
Fe(5)926 706 y Fl(=)g(0)p Fi(:)p Fl(00032)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation19) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 491 -333
a Fm(Adaptive)39 b(stepsize)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 -178 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 -174 a Fl(Change)27 b(\001)p Fj(t)34
b Fl(as)27 b(y)n(ou)g(go)g(along...)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 -28 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 -24 a Fl(...dep)r(ending)g(on)g(ho)n(w)f(much)i
(things)e(a)n(re)i(changing.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836
1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation20) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668
a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 384 -333
a Fm(Di\013erential)38 b(Equations)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -364 -174 a Fl(Reading:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 -28 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
-24 a Fl(Strange)27 b(attracto)n(rs)473 -6 y
SDict begin H.S end
 473 -6 a
0 TeXcolorgray -18 x Fd(http://en.wikiped)o(ia.)o(or)o(g/w)o(ik)o(i/)o
(Att)o(ra)o(cto)o(r)p 0 TeXcolorgray 2130 -82 a
SDict begin H.R end
 2130
-82 a 2130 -24 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://en.wikipedia.org/wiki/Attractor)>>/Subtype
/Link H.B /ANN pdfmark end
 2130 -24 a 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 121 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 125 a Fl(The)g(Limits)g(to)g(Gro)n(wth)-182 243
y
SDict begin H.S end
 -182 243 a 0 TeXcolorgray -18 x Fd(http://www.csiro)o(.au)o(/f)o(ile)
o(s/)o(fi)o(les)o(/p)o(lje)o(.p)o(df)p 0 TeXcolorgray
1561 167 a
SDict begin H.R end
 1561 167 a 1561 225 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.csiro.au/files/files/plje.pdf)>>/Subtype
/Link H.B /ANN pdfmark end
 1561 225 a 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 370 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 374 a Fl(Run:)36 b Fd(strange??.py)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a
-836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation21) cvn /DEST pdfmark
end
 -836 1668 a -836
1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668
a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 484 -333
a Fm(V)m(erlet)39 b(Integration)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 -178 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 -174 a Fl(A)28 b(V)n(erlet)g(based)f(app)n(roach)f
(fo)n(r)i(2D)f(game)g(physics)g(\()1462 -155 y
SDict begin H.S end
 1462 -155
a 0 TeXcolorgray -19 x Fd(www.gamedev.net)p 0 TeXcolorgray
2116 -225 a
SDict begin H.R end
 2116 -225 a 2116 -174 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(www.gamedev.net)>>/Subtype /Link H.B /ANN pdfmark
end
 2116 -174 a Fl(\))-182
-38 y
SDict begin H.S end
 -182 -38 a 0 TeXcolorgray -11 x Fa(http://www.gam)q(ede)q(v.)q
(ne)q(t/)q(pa)q(ge)q(/re)q(so)q(ur)q(ce)q(s/)q(_/)q(te)q(chn)q(ic)q(al)
q(/m)q(at)q(h-)5 b(an)q(d-)g(ph)q(ys)q(ics)q(/a)q(-)t(v)q(er)q(le)q(t-)
g(ba)q(se)q(d-)g(ap)q(pr)q(oa)q(ch)q(-)t(f)q(or)q(-)t(2)q(d-)g(ga)q(me)
q(-)t(p)q(hy)q(sic)q(s-)g(r2)q(71)q(4)p 0 TeXcolorgray
2929 -84 a
SDict begin H.R end
 2929 -84 a 2929 -49 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.gamedev.net/page/resources/_/technical/math-and-physics/a-verlet-based-approach-for-2d-game-physics-r2714)>>/Subtype
/Link H.B /ANN pdfmark end
 2929 -49 a 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 96 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 100 a Fl(A)28 b(nice)f(w)n(eb)g(demo:)-182
236 y
SDict begin H.S end
 -182 236 a 0 TeXcolorgray -11 x Fa(http://gamedev)q(.tu)q(ts)q
(pl)q(us)q(.c)q(om)q(/tu)q(to)q(ri)q(al)q(s/)q(im)q(pl)q(eme)q(nt)q(at)
q(io)q(n/)q(si)q(mul)q(at)q(e-)5 b(fa)q(br)q(ic)q(-)t(a)q(nd)q(-)t(r)q
(ag)q(do)q(ll)q(s-)g(wi)q(th)q(-)t(s)q(im)q(ple)q(-)g(ver)q(le)q(t-)g
(in)q(te)q(gr)q(at)q(io)q(n/)p 0 TeXcolorgray 2837 190
a
SDict begin H.R end
 2837 190 a 2837 225 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://gamedev.tutsplus.com/tutorials/implementation/simulate-fabric-and-ragdolls-with-simple-verlet-integration/)>>/Subtype
/Link H.B /ANN pdfmark end
 2837 225 a 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 370 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 374 a Fl(Can)28 b(b)r(e)f(used)h(as)f(the)g(basis)g(of)h(a)f
(collision)f(resp)r(onse)h(system.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 520 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 524 a Fl(Run)g Fd(VerletPhysicsDem)o(o.p)o(y)p 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 669 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray -182 673 a Fl(T)-7 b(rue)27
b(elastic)g(collisions:)-182 791 y
SDict begin H.S end
 -182 791 a 0 TeXcolorgray
-18 x Fd(http://en.wikipe)o(dia)o(.o)o(rg/)o(wi)o(ki)o(/El)o(as)o(tic)o
(_c)o(ol)o(lis)o(io)o(n)p 0 TeXcolorgray 1823 715 a
SDict begin H.R end
 1823
715 a 1823 773 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://en.wikipedia.org/wiki/Elastic_collision)>>/Subtype
/Link H.B /ANN pdfmark end
 1823 773 a 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 918 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 922 a Fl(Run)g Fd(BouncingBalls.py)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation22) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 190 -333
a Fm(Advanced)39 b(collision)d(techniques)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -364 -174 a
Fl(Reading:)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 -28 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 -13 a
SDict begin H.S end
 -182 -13 a 0 TeXcolorgray -11 x Fa(http://www.gam)q(asu)q
(tr)q(a.)q(co)q(m/)q(vi)q(ew/)q(fe)q(at)q(ur)q(e/)q(31)q(90)q(/ad)q(va)
q(nc)q(ed)q(_c)q(ol)q(lis)q(io)q(n_)q(de)q(te)q(ct)q(ion)q(_.)q(ph)q(p)
p 0 TeXcolorgray 1829 -59 a
SDict begin H.R end
 1829 -59 a 1829 -24 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.gamasutra.com/view/feature/3190/advanced_collision_detection_.php)>>/Subtype
/Link H.B /ANN pdfmark end
 1829
-24 a 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 121
a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182 125 a
Fl(V)n(ery)28 b(small)f(objects)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -269 270 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray
-182 274 a Fl(F)n(ast)g(moving)g(objects)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 420 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 424 a Fl(Complex)g(objects)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836
1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation23) cvn /DEST pdfmark
end
 -836 1668 a -836 1668 a
SDict begin H.S end
 -836 1668
a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray
eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 586 -333
a Fm(Many)39 b(objects)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -364 -174 a Fl(Reading:)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 -28 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray -182 -24 a Fl(P)n(a)n(rtitioning)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -269 121 a Fg(\017)p
0 TeXcolorgray 0 TeXcolorgray -182 125 a Fl(Sw)n(eep)27
b(and)g(p)n(rune)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-269 270 a Fg(\017)p 0 TeXcolorgray 0 TeXcolorgray -182
293 a
SDict begin H.S end
 -182 293 a 0 TeXcolorgray -19 x Fd(http://en.wikipe)o(dia)o(.o)o
(rg/)o(wi)o(ki)o(/Sw)o(ee)o(p_a)o(nd)o(_p)o(run)o(e)p
0 TeXcolorgray 1736 217 a
SDict begin H.R end
 1736 217 a 1736 274 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://en.wikipedia.org/wiki/Sweep_and_prune)>>/Subtype
/Link H.B /ANN pdfmark end
 1736
274 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation24) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-600 1668 3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -600 -305 a

 -600 -305 a -600 -305 a


 pgfo

 35.4335 362.8394 0.0 0.0 pgfe

 clip

 newpath

 35.4335 362.8394 pgfV 0.0 0.8 0.8 0.925 1 1 1 pgfshade  pop

 pgfc


 0
TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 590 -333
a Fm(Use)38 b(a)h(Lib)m(ra)m(ry)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -269 -178 a Fg(\017)p 0 TeXcolorgray
0 TeXcolorgray -182 -174 a Fl(PyMunk:)168 -155 y
SDict begin H.S end
 168
-155 a 0 TeXcolorgray -19 x Fd(http://code.googl)o(e.)o(com)o(/p)o(/py)
o(mu)o(nk/)p 0 TeXcolorgray 1563 -232 a
SDict begin H.R end
 1563 -232 a 1563
-174 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://code.google.com/p/pymunk/)>>/Subtype /Link
H.B /ANN pdfmark end
 1563 -174 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -836 1668
a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668 a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation25) cvn /DEST pdfmark
end
 -836
1668 a -836 1668 a
SDict begin H.S end
 -836 1668 a -836 1668 a
SDict begin H.R end
 -836 1668
a -836 1668 a
SDict begin [/View [/XYZ H.V]/Dest (page.25) cvn /DEST pdfmark end
 -836 1668 a 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
